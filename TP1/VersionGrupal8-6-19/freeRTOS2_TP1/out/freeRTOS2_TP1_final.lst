
RTOS_Projects/freeRTOS2_TP1_final/out/freeRTOS2_TP1_final.elf:     file format elf32-littlearm
RTOS_Projects/freeRTOS2_TP1_final/out/freeRTOS2_TP1_final.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x1a0009d1

Program Header:
0x70000001 off    0x00014e88 vaddr 0x1a004e88 paddr 0x1a004e88 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00000000 vaddr 0x10000000 paddr 0x10000000 align 2**16
         filesz 0x000000b4 memsz 0x000030ec flags rw-
    LOAD off    0x00010000 vaddr 0x1a000000 paddr 0x1a000000 align 2**16
         filesz 0x00004e90 memsz 0x00004e90 flags rwx
    LOAD off    0x00020000 vaddr 0x10000000 paddr 0x1a004e90 align 2**16
         filesz 0x000000f4 memsz 0x000000f4 flags rw-
private flags = 5000400: [Version5 EABI] [hard-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004e84  1a000000  1a000000  00010000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000f4  10000000  1a004e90  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .data_RAM2    00000000  10080000  10080000  000200f4  2**2
                  CONTENTS
  3 .data_RAM3    00000000  20000000  20000000  000200f4  2**2
                  CONTENTS
  4 .data_RAM4    00000000  20008000  20008000  000200f4  2**2
                  CONTENTS
  5 .data_RAM5    00000000  2000c000  2000c000  000200f4  2**2
                  CONTENTS
  6 .bss          00002ff4  100000f8  100000f8  000000f8  2**3
                  ALLOC
  7 .bss_RAM2     00000000  10080000  10080000  000200f4  2**2
                  CONTENTS
  8 .bss_RAM3     00000000  20000000  20000000  000200f4  2**2
                  CONTENTS
  9 .bss_RAM4     00000000  20008000  20008000  000200f4  2**2
                  CONTENTS
 10 .bss_RAM5     00000000  2000c000  2000c000  000200f4  2**2
                  CONTENTS
 11 .init_array   00000004  1a004e84  1a004e84  00014e84  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .ARM.exidx    00000008  1a004e88  1a004e88  00014e88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 13 .uninit_RESERVED 00000000  10000000  10000000  000200f4  2**2
                  CONTENTS
 14 .noinit_RAM2  00000000  10080000  10080000  000200f4  2**2
                  CONTENTS
 15 .noinit_RAM3  00000000  20000000  20000000  000200f4  2**2
                  CONTENTS
 16 .noinit_RAM4  00000000  20008000  20008000  000200f4  2**2
                  CONTENTS
 17 .noinit_RAM5  00000000  2000c000  2000c000  000200f4  2**2
                  CONTENTS
 18 .noinit       00000000  100030ec  100030ec  000200f4  2**2
                  CONTENTS
 19 .debug_info   0002f64c  00000000  00000000  000200f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_abbrev 00005dde  00000000  00000000  0004f740  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_loc    0000bd7e  00000000  00000000  0005551e  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_aranges 00001090  00000000  00000000  0006129c  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_ranges 000011b8  00000000  00000000  0006232c  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_macro  00010dd7  00000000  00000000  000634e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .debug_line   000153b5  00000000  00000000  000742bb  2**0
                  CONTENTS, READONLY, DEBUGGING
 26 .debug_str    0002fbb1  00000000  00000000  00089670  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .comment      0000007f  00000000  00000000  000b9221  2**0
                  CONTENTS, READONLY
 28 .ARM.attributes 00000037  00000000  00000000  000b92a0  2**0
                  CONTENTS, READONLY
 29 .debug_frame  00002edc  00000000  00000000  000b92d8  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
1a000000 l    d  .text	00000000 .text
10000000 l    d  .data	00000000 .data
10080000 l    d  .data_RAM2	00000000 .data_RAM2
20000000 l    d  .data_RAM3	00000000 .data_RAM3
20008000 l    d  .data_RAM4	00000000 .data_RAM4
2000c000 l    d  .data_RAM5	00000000 .data_RAM5
100000f8 l    d  .bss	00000000 .bss
10080000 l    d  .bss_RAM2	00000000 .bss_RAM2
20000000 l    d  .bss_RAM3	00000000 .bss_RAM3
20008000 l    d  .bss_RAM4	00000000 .bss_RAM4
2000c000 l    d  .bss_RAM5	00000000 .bss_RAM5
1a004e84 l    d  .init_array	00000000 .init_array
1a004e88 l    d  .ARM.exidx	00000000 .ARM.exidx
10000000 l    d  .uninit_RESERVED	00000000 .uninit_RESERVED
10080000 l    d  .noinit_RAM2	00000000 .noinit_RAM2
20000000 l    d  .noinit_RAM3	00000000 .noinit_RAM3
20008000 l    d  .noinit_RAM4	00000000 .noinit_RAM4
2000c000 l    d  .noinit_RAM5	00000000 .noinit_RAM5
100030ec l    d  .noinit	00000000 .noinit
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 armv7m_startup.c
00000000 l    df *ABS*	00000000 vendor_interrupt.c
00000000 l    df *ABS*	00000000 sapi_uart.c
1a0035ec l     F .text	000000a4 uartProcessIRQ
10002f44 l     O .bss	00000004 rxIsrCallbackUART0
10002f48 l     O .bss	00000004 rxIsrCallbackUART2
10002f4c l     O .bss	00000004 rxIsrCallbackUART3
10002f50 l     O .bss	00000004 txIsrCallbackUART0
10002f54 l     O .bss	00000004 txIsrCallbackUART2
10002f58 l     O .bss	00000004 txIsrCallbackUART3
1a004c5c l     O .text	00000048 lpcUarts
00000000 l    df *ABS*	00000000 crp.c
00000000 l    df *ABS*	00000000 General.c
00000000 l    df *ABS*	00000000 Task1.c
00000000 l    df *ABS*	00000000 qf_mem.c
00000000 l    df *ABS*	00000000 DriverDinamicMemoryRTOS.c
100000fc l     O .bss	00000400 mem_for_small_pool
00000000 l    df *ABS*	00000000 freeRTOS2_01.c
00000000 l    df *ABS*	00000000 system.c
100004fc l     O .bss	00000004 heap_end.5778
00000000 l    df *ABS*	00000000 heap_4.c
1a000a7c l     F .text	00000064 prvHeapInit
10000504 l     O .bss	00002000 ucHeap
1a000ae0 l     F .text	00000058 prvInsertBlockIntoFreeList
10000500 l     O .bss	00000004 pxEnd
10002504 l     O .bss	00000004 xBlockAllocatedBit
10002508 l     O .bss	00000004 xFreeBytesRemaining
1000250c l     O .bss	00000004 xMinimumEverFreeBytesRemaining
10002510 l     O .bss	00000008 xStart
00000000 l    df *ABS*	00000000 queue.c
1a000cd0 l     F .text	0000001e prvIsQueueFull
1a000cee l     F .text	0000001a prvIsQueueEmpty
1a000d08 l     F .text	00000076 prvCopyDataToQueue
1a000d7e l     F .text	00000024 prvCopyDataFromQueue
1a000da2 l     F .text	0000006e prvUnlockQueue
1a000e94 l     F .text	00000022 prvInitialiseNewQueue
1a001110 l     F .text	00000018 prvInitialiseMutex
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 static_provider.c
10002518 l     O .bss	00000168 uxIdleTaskStack.10728
10002680 l     O .bss	000005a0 uxTimerTaskStack.10735
10002c20 l     O .bss	00000060 xIdleTaskTCB.10727
10002c80 l     O .bss	00000060 xTimerTaskTCB.10734
00000000 l    df *ABS*	00000000 hooks.c
00000000 l    df *ABS*	00000000 tasks.c
1a0014a4 l     F .text	00000014 prvTaskCheckFreeStackSpace
1a0014b8 l     F .text	0000002c prvResetNextTaskUnblockTime
1a0014e4 l     F .text	00000092 prvInitialiseNewTask
1a001578 l     F .text	00000068 prvInitialiseTaskLists
1a0015e0 l     F .text	000000ac prvAddNewTaskToReadyList
1a00168c l     F .text	00000038 prvDeleteTCB
1a0016c4 l     F .text	0000004c prvCheckTasksWaitingTermination
1a001710 l     F .text	00000028 prvIdleTask
1a001738 l     F .text	00000098 prvAddCurrentTaskToDelayedList
10002ce4 l     O .bss	00000004 pxDelayedTaskList
10002ce8 l     O .bss	00000004 pxOverflowDelayedTaskList
10002cec l     O .bss	0000008c pxReadyTasksLists
10002d78 l     O .bss	00000004 uxCurrentNumberOfTasks
10002d7c l     O .bss	00000004 uxDeletedTasksWaitingCleanUp
10002d80 l     O .bss	00000004 uxPendedTicks
10002d84 l     O .bss	00000004 uxSchedulerSuspended
10002d88 l     O .bss	00000004 uxTaskNumber
10002d8c l     O .bss	00000004 uxTopReadyPriority
10002d90 l     O .bss	00000014 xDelayedTaskList1
10002da4 l     O .bss	00000014 xDelayedTaskList2
10002db8 l     O .bss	00000004 xNextTaskUnblockTime
10002dbc l     O .bss	00000004 xNumOfOverflows
10002dc0 l     O .bss	00000014 xPendingReadyList
10002dd4 l     O .bss	00000004 xSchedulerRunning
10002dd8 l     O .bss	00000014 xSuspendedTaskList
10002dec l     O .bss	00000014 xTasksWaitingTermination
10002e00 l     O .bss	00000004 xTickCount
10002e04 l     O .bss	00000004 xYieldPending
00000000 l    df *ABS*	00000000 timers.c
1a002064 l     F .text	00000020 prvGetNextExpireTime
1a002084 l     F .text	00000048 prvInsertTimerInActiveList
1a0020cc l     F .text	00000070 prvCheckForValidListAndQueue
1a00213c l     F .text	00000040 prvInitialiseNewTimer
1a00250c l     F .text	00000016 prvTimerTask
1a002298 l     F .text	00000078 prvSwitchTimerLists
1a002310 l     F .text	0000002c prvSampleTimeNow
1a00233c l     F .text	00000060 prvProcessExpiredTimer
1a00239c l     F .text	00000074 prvProcessTimerOrBlockTask
1a002410 l     F .text	000000fc prvProcessReceivedCommands
10002e08 l     O .bss	00000004 pxCurrentTimerList
10002e0c l     O .bss	00000004 pxOverflowTimerList
10002e10 l     O .bss	000000a0 ucStaticTimerQueueStorage.11828
10002eb0 l     O .bss	00000014 xActiveTimerList1
10002ec4 l     O .bss	00000014 xActiveTimerList2
10002ed8 l     O .bss	00000004 xLastTime.11777
10002edc l     O .bss	00000050 xStaticTimerQueue.11827
10002f2c l     O .bss	00000004 xTimerQueue
10002f30 l     O .bss	00000004 xTimerTaskHandle
00000000 l    df *ABS*	00000000 port.c
1a002524 l     F .text	00000040 prvTaskExitError
1a002564 l     F .text	00000022 prvPortStartFirstTask
1a00258c l     F .text	0000000e vPortEnableVFP
1a0025f0 l       .text	00000000 pxCurrentTCBConst2
1a0026d0 l       .text	00000000 pxCurrentTCBConst
10002f34 l     O .bss	00000001 ucMaxSysCallPriority
10002f38 l     O .bss	00000004 ulMaxPRIGROUPValue
10000010 l     O .data	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 board.c
1a0028a4 l     F .text	00000044 Board_LED_Init
1a0028e8 l     F .text	00000040 Board_TEC_Init
1a002928 l     F .text	00000040 Board_GPIO_Init
1a002968 l     F .text	00000030 Board_ADC_Init
1a002998 l     F .text	00000038 Board_SPI_Init
1a0029d0 l     F .text	00000024 Board_I2C_Init
1a004ae8 l     O .text	00000008 GpioButtons
1a004af0 l     O .text	0000000c GpioLeds
1a004afc l     O .text	00000012 GpioPorts
00000000 l    df *ABS*	00000000 board_sysinit.c
1a004b14 l     O .text	00000004 InitClkStates
1a004b18 l     O .text	00000074 pinmuxing
00000000 l    df *ABS*	00000000 i2c_18xx_43xx.c
10000014 l     O .data	00000038 i2c
00000000 l    df *ABS*	00000000 uart_18xx_43xx.c
1a002b78 l     F .text	0000002c Chip_UART_GetIndex
1a004b8c l     O .text	00000008 UART_BClock
1a004b94 l     O .text	00000008 UART_PClock
00000000 l    df *ABS*	00000000 adc_18xx_43xx.c
1a002d20 l     F .text	00000014 Chip_ADC_GetClockIndex
1a002d34 l     F .text	00000032 getClkDiv
00000000 l    df *ABS*	00000000 clock_18xx_43xx.c
1a002de8 l     F .text	000000a4 pll_calc_divs
1a002e8c l     F .text	0000010c pll_get_frac
1a002f98 l     F .text	0000004c Chip_Clock_FindBaseClock
1a00320c l     F .text	00000022 Chip_Clock_GetDivRate
10002f3c l     O .bss	00000008 audio_usb_pll_freq
1a004ba8 l     O .text	0000006c periph_to_base
00000000 l    df *ABS*	00000000 chip_18xx_43xx.c
00000000 l    df *ABS*	00000000 gpio_18xx_43xx.c
00000000 l    df *ABS*	00000000 sysinit_18xx_43xx.c
1a004c14 l     O .text	00000048 InitClkStates
00000000 l    df *ABS*	00000000 ssp_18xx_43xx.c
1a0034e4 l     F .text	00000014 Chip_SSP_GetClockIndex
1a0034f8 l     F .text	00000018 Chip_SSP_GetPeriphClockIndex
00000000 l    df *ABS*	00000000 sysinit.c
00000000 l    df *ABS*	00000000 sapi_cyclesCounter.c
1000004c l     O .data	00000004 ClockSpeed
00000000 l    df *ABS*	00000000 sapi_tick.c
10002f5c l     O .bss	00000004 callBackFuncParams
10002f60 l     O .bss	00000008 tickCounter
10002f68 l     O .bss	00000004 tickHookFunction
10002f6c l     O .bss	00000030 tickerObject.11826
00000000 l    df *ABS*	00000000 sapi_timer.c
1a003930 l     F .text	00000002 errorOcurred
1a003932 l     F .text	00000002 doNothing
10000050 l     O .data	00000040 timer_dd
00000000 l    df *ABS*	00000000 sapi_gpio.c
1a003a3c l     F .text	00000034 gpioObtainPinInit
00000000 l    df *ABS*	00000000 sapi_usb_device.c
10002f9c l     O .bss	00000004 g_hUsb
00000000 l    df *ABS*	00000000 sapi_board.c
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 lib_a-memchr.o
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 findfp.c
00000000 l    df *ABS*	00000000 impure.c
10000094 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 
1a004e88 l       .init_array	00000000 __init_array_end
1a004e84 l       .bss_RAM5	00000000 __preinit_array_end
1a004e84 l       .init_array	00000000 __init_array_start
1a004e84 l       .bss_RAM5	00000000 __preinit_array_start
1a0049f2 g     F .text	00000010 _malloc_usable_size_r
1a003030 g     F .text	0000001c Chip_Clock_GetDividerSource
1a00419e g     F .text	00000010 strcpy
1a0039b4 g     F .text	00000044 TIMER2_IRQHandler
1a0037c4 g     F .text	00000014 uartRxRead
1a000184  w    F .text	00000002 DebugMon_Handler
1a0001ba  w    F .text	00000002 RIT_IRQHandler
1a000cc4 g     F .text	0000000c xPortGetFreeHeapSize
1a080000 g       *ABS*	00000000 __top_MFlashA512
1a0001ba  w    F .text	00000002 ADCHS_IRQHandler
1a000114 g       .text	00000000 __section_table_start
10003068 g     O .bss	00000014 mem_pool_big
1a0001ba  w    F .text	00000002 FLASH_EEPROM_IRQHandler
1a002638 g     F .text	0000002c vPortExitCritical
1a0001ba  w    F .text	00000002 I2C0_IRQHandler
1a002a44 g     F .text	00000008 __stdio_init
1a00017a  w    F .text	00000002 HardFault_Handler
1a0003c0 g     F .text	00000038 SelecQueueFromOperation
1a00138c g     F .text	00000052 vQueueWaitForMessageRestricted
1a000000 g       *ABS*	00000000 __vectors_start__
1a002dda g     F .text	0000000c Chip_ADC_SetResolution
1a0049a4 g     F .text	00000002 __malloc_unlock
1a0026d4 g     F .text	0000002c SysTick_Handler
1a002bf8 g     F .text	00000040 Chip_UART_SetBaud
1a0009cc  w    F .text	00000002 initialise_monitor_handles
1a0007d0 g     F .text	00000018 Task_ReportStack_OP2
1a0001ba  w    F .text	00000002 SDIO_IRQHandler
1a0001ba  w    F .text	00000002 ATIMER_IRQHandler
1a004970 g     F .text	00000032 memmove
10002fac g     O .bss	00000004 SemTxUart
1a002670 g     F .text	00000064 PendSV_Handler
1a000724 g     F .text	00000024 TaskService
1a00113e g     F .text	000000cc xQueueGenericSendFromISR
1a000178  w    F .text	00000002 NMI_Handler
1a004e90 g       .ARM.exidx	00000000 __exidx_end
1a000150 g       .text	00000000 __data_section_table_end
10002fb0 g     O .bss	00000004 xPointerQueue_OP2
1a0001ba  w    F .text	00000002 I2C1_IRQHandler
1a0001ba  w    F .text	00000002 UART1_IRQHandler
1a0001ba  w    F .text	00000002 GPIO5_IRQHandler
1a0001ba  w    F .text	00000002 CAN1_IRQHandler
10002ce0 g     O .bss	00000004 pxCurrentTCB
53ff6ebe g       *ABS*	00000000 __valid_user_code_checksum
1a004e90 g       .ARM.exidx	00000000 _etext
1a0003f8 g     F .text	0000003e packetToLower
1a0001ba  w    F .text	00000002 USB1_IRQHandler
1a0001ba  w    F .text	00000002 I2S0_IRQHandler
1a0008d8 g     F .text	0000001c ModuleDinamicMemory_initialize
1a001d20 g     F .text	00000018 vTaskInternalSetTimeOutState
1a0039f8 g     F .text	00000044 TIMER3_IRQHandler
1a0032ae g     F .text	0000000c Chip_Clock_GetBaseClocktHz
1a0001bc g     F .text	0000000a UART0_IRQHandler
1a0001a8 g     F .text	00000012 bss_init
1a002738 g     F .text	00000110 xPortStartScheduler
1a00411c g     F .text	00000016 memcpy
1a001c2c g     F .text	00000030 vTaskPlaceOnEventList
1a0001ba  w    F .text	00000002 SGPIO_IRQHandler
1a0043c4 g     F .text	000001f0 _svfprintf_r
1a002700  w    F .text	00000038 vPortSetupTimerInterrupt
1a00069c g     F .text	00000088 Report
1a003dd4 g     F .text	00000000 .hidden __aeabi_uldivmod
100030ec g       .noinit	00000000 _noinit
1a000c54 g     F .text	00000070 vPortFree
1a003882 g     F .text	00000018 uartWriteString
100030e4 g     O .bss	00000004 SystemCoreClock
1a002ba4 g     F .text	00000054 Chip_UART_Init
1a0038b0 g     F .text	00000034 tickerCallback
1a0001ba  w    F .text	00000002 ADC0_IRQHandler
1a002848 g     F .text	0000005c vPortValidateInterruptPriority
1a001dc4 g     F .text	00000018 uxTaskGetStackHighWaterMark
10002fb4 g     O .bss	00000004 SemRxUart
1a000180  w    F .text	00000002 UsageFault_Handler
1a00332c g     F .text	0000004c Chip_Clock_GetRate
1a0013fa g     F .text	00000018 vListInsertEnd
1a0001ba  w    F .text	00000002 GPIO6_IRQHandler
1a002a84 g     F .text	0000006c Board_SetupClocking
20008000 g       *ABS*	00000000 __top_RamAHB32
1a00059c g     F .text	00000068 itoa
1a003e04 g     F .text	000002cc .hidden __udivmoddi4
1a000a5c g     F .text	00000020 _sbrk_r
1a004ae4 g     O .text	00000004 ExtRateIn
1a0001ba  w    F .text	00000002 IntDefaultHandler
1a000300 g       .text	00000000 __CRP_WORD_END__
1a0013f4 g     F .text	00000006 vListInitialiseItem
1a0001ba  w    F .text	00000002 GPIO1_IRQHandler
1a00120c g     F .text	00000158 xQueueReceive
100030a4 g     O .bss	00000040 xQueueRegistry
1a001488 g     F .text	00000018 vApplicationGetTimerTaskMemory
1a0001ba  w    F .text	00000002 SSP0_IRQHandler
1a004e88 g       .ARM.exidx	00000000 __exidx_start
1a0002fc g     O .text	00000004 CRP_WORD
1a0049a6 g     F .text	0000004c _realloc_r
1a0040d4 g     F .text	00000048 __libc_init_array
1a0001ba  w    F .text	00000002 ADC1_IRQHandler
1a000b38 g     F .text	0000011c pvPortMalloc
1a002a18 g     F .text	0000002c Board_Init
1a000a5a  w    F .text	00000002 _init
1a0013de g     F .text	00000016 vListInitialise
1a000114 g       .text	00000000 __data_section_table
10002fb8 g     O .bss	00000004 xPointerQueue_3
1a00194c g     F .text	0000000c xTaskGetTickCount
1a000f94 g     F .text	0000017c xQueueGenericSend
1a0001ba  w    F .text	00000002 RTC_IRQHandler
100030ec g       .bss	00000000 _ebss
1a003934 g     F .text	00000040 TIMER0_IRQHandler
1a0009d0 g     F .text	00000088 Reset_Handler
1a0038e4 g     F .text	0000004c tickInit
20010000 g       *ABS*	00000000 __top_RamAHB_ETB16
1a0001ba  w    F .text	00000002 SPI_IRQHandler
1a002b40 g     F .text	00000038 Chip_I2C_SetClockRate
1a001dfc g     F .text	000000b0 xTaskPriorityDisinherit
1a0001ba  w    F .text	00000002 LCD_IRQHandler
1a000848 g     F .text	00000028 CallbackRx
1a002fe4 g     F .text	0000004c Chip_Clock_EnableCrystal
10008000 g       *ABS*	00000000 __top_RamLoc32
1a001c94 g     F .text	0000008c xTaskRemoveFromEventList
1a0014a2 g     F .text	00000002 vApplicationMallocFailedHook
1a00018a g     F .text	0000001e data_init
10002fbc g     O .bss	00000004 xTaskHandle_MayOP0
1a003974 g     F .text	00000040 TIMER1_IRQHandler
1a004df0 g     O .text	00000020 __sf_fake_stderr
10002fc0 g     O .bss	00000004 xPointerQueue_OP3
1a002b1c g     F .text	00000024 Chip_I2C_Init
1a000578 g     F .text	00000024 semaphoreCreateAll
1a0008f4 g     F .text	00000036 ModuleDinamicMemory_send2
1a00389a g     F .text	0000000a UART2_IRQHandler
1a000474 g     F .text	000000a4 TaskCreateAll
1a0031a0 g     F .text	0000006c Chip_Clock_GetMainPLLHz
1a004310 g     F .text	000000b4 __ssputs_r
1a004cb0 g     O .text	00000140 gpioPinsInit
1a003690 g     F .text	00000090 uartInterrupt
1a003868 g     F .text	0000001a uartWriteByte
1a003510 g     F .text	00000012 Chip_SSP_SetClockRate
1a000748 g     F .text	00000044 Task_ToMayusculas_OP0
1a003cae g     F .text	00000016 gpioToggle
1a0001ba  w    F .text	00000002 GPIO2_IRQHandler
1a0048d0 g     F .text	00000000 memchr
1a001d38 g     F .text	00000080 xTaskCheckForTimeOut
1a0041c0 g     F .text	0000009c _free_r
1a003288 g     F .text	00000026 Chip_Clock_GetBaseClock
100000f8 g       .bss	00000000 _bss
1a002da8 g     F .text	00000032 Chip_ADC_SetSampleRate
1a000800 g     F .text	00000048 TaskTxUart
1a00193c g     F .text	00000010 vTaskSuspendAll
1a0001ba  w    F .text	00000002 I2S1_IRQHandler
1a003522 g     F .text	0000003e Chip_SSP_SetBitRate
1a001446 g     F .text	00000028 uxListRemove
10002fc4 g     O .bss	0000006d Data
1a00338c g     F .text	00000002 Chip_GPIO_Init
1a004b10 g     O .text	00000004 OscRateIn
1a0037ec g     F .text	0000007c uartInit
1a0017d0 g     F .text	00000072 xTaskCreateStatic
100030ec g       .noinit	00000000 _end_noinit
10008000 g       *ABS*	00000000 _vStackTop
1a001b64 g     F .text	000000c8 vTaskSwitchContext
1a0001ba  w    F .text	00000002 SSP1_IRQHandler
1000307c g     O .bss	00000014 mem_pool_med
1a000eb6 g     F .text	00000090 xQueueGenericCreateStatic
1a001c5c g     F .text	00000038 vTaskPlaceOnEventListRestricted
1a000178 g       .text	00000000 __bss_section_table_end
10003034 g     O .bss	00000024 ModuleData
1a003a70 g     F .text	00000194 gpioInit
10002fa8 g     O .bss	00000001 QmPoolOrMalloc
1a001eac g     F .text	00000098 xTaskNotifyWait
1a001470 g     F .text	00000018 vApplicationGetIdleTaskMemory
1a00222c g     F .text	0000006c xTimerGenericCommand
1a0014a0 g     F .text	00000002 vApplicationStackOverflowHook
1a0040d0  w    F .text	00000002 .hidden __aeabi_ldiv0
1a003cc4 g     F .text	0000001c USB0_IRQHandler
1a0001ba  w    F .text	00000002 GPIO3_IRQHandler
100000f8 g     O .bss	00000004 xTaskHandle_RxNotify
1a0049a2 g     F .text	00000002 __malloc_lock
10003090 g     O .bss	00000014 mem_pool_small
1a0001ba  w    F .text	00000002 SCT_IRQHandler
1a004e10 g     O .text	00000020 __sf_fake_stdin
1a00304c g     F .text	0000001c Chip_Clock_GetDividerDivisor
1a0002fc g       .text	00000000 __CRP_WORD_START__
1a004132 g     F .text	00000010 memset
1a00017c  w    F .text	00000002 MemManage_Handler
1a000940 g     F .text	0000008c main
1a0001ba  w    F .text	00000002 WDT_IRQHandler
1a001412 g     F .text	00000034 vListInsert
2000c000 g       *ABS*	00000000 __top_RamAHB16
10003058 g     O .bss	00000004 SemMutexUart
1008a000 g       *ABS*	00000000 __top_RamLoc40
1a0025d0 g     F .text	00000024 SVC_Handler
1a00217c g     F .text	00000064 xTimerCreateTimerTask
1a00425c g     F .text	000000b4 _malloc_r
1a0037ac g     F .text	00000018 uartTxReady
1a0007e8 g     F .text	00000018 Task_ReportHeap_OP3
1a0001ba  w    F .text	00000002 GPIO7_IRQHandler
1a0032bc g     F .text	0000003c Chip_Clock_EnableOpts
1a000f46 g     F .text	0000004e xQueueGenericCreate
1a003068 g     F .text	000000b8 Chip_Clock_GetClockInputHz
1a003120 g     F .text	00000080 Chip_Clock_CalcMainPLLValue
1a003598 g     F .text	00000038 SystemInit
1a0001ba  w    F .text	00000002 SPIFI_IRQHandler
1a001f44 g     F .text	00000120 xTaskGenericNotifyFromISR
1a0001ba  w    F .text	00000002 QEI_IRQHandler
1a000150 g       .text	00000000 __bss_section_table
1a003c04 g     F .text	00000056 gpioWrite
1a000a58  w    F .text	00000002 _fini
1a001a70 g     F .text	000000f4 xTaskResumeAll
1a004144 g     F .text	00000040 sprintf
1a0018a8 g     F .text	00000094 vTaskStartScheduler
1a002d68 g     F .text	00000040 Chip_ADC_Init
100030e8 g     O .bss	00000004 g_pUsbApi
1a002a4c g     F .text	00000038 Board_SetupMuxing
1a002c38 g     F .text	000000e8 Chip_UART_SetBaudFDR
1a0008bc g     F .text	0000001c QMPools_inicializar
1a0001ba  w    F .text	00000002 ETH_IRQHandler
1a0045b4 g     F .text	000000ea _printf_common
10000090 g     O .data	00000004 _impure_ptr
10000000 g       .uninit_RESERVED	00000000 _end_uninit_RESERVED
1a0043c4 g     F .text	000001f0 _svfiprintf_r
1a0037d8 g     F .text	00000014 uartTxWrite
1a0001ba  w    F .text	00000002 CAN0_IRQHandler
1000305c g     O .bss	00000004 xTaskHandle_MinOP1
10000000 g       .data	00000000 _data
1a001db8 g     F .text	0000000c vTaskMissedYield
100030ec g       .bss	00000000 _pvHeapStart
10000000 g     O .data	00000010 Frame_parameters
1a000178 g       .text	00000000 __section_table_end
1a003560 g     F .text	00000038 Chip_SSP_Init
1a001364 g     F .text	00000028 vQueueAddToRegistry
1a0001ba  w    F .text	00000002 GINT0_IRQHandler
1a000300 g     F .text	000000c0 Add_IncommingFrame
1a001958 g     F .text	00000118 xTaskIncrementTick
1a0001ba  w    F .text	00000002 DAC_IRQHandler
1a0029f4 g     F .text	00000024 Board_Debug_Init
1a000e10 g     F .text	00000084 xQueueGenericReset
100000f4 g       .data	00000000 _edata
1a002afc g     F .text	00000020 Chip_I2C_EventHandler
1a0001ba  w    F .text	00000002 M0SUB_IRQHandler
1a001842 g     F .text	00000066 xTaskCreate
1a003390 g     F .text	00000154 Chip_SetupCoreClock
1a0001ba  w    F .text	00000002 GPIO0_IRQHandler
1a000000 g     O .text	00000040 g_pfnVectors
1a003378 g     F .text	00000014 SystemCoreClockUpdate
1a000436 g     F .text	0000003e packetToUpper
10003060 g     O .bss	00000004 xPointerQueue_OP1
1a0001ba  w    F .text	00000002 DMA_IRQHandler
1a0001ba  w    F .text	00000002 EVRT_IRQHandler
1b080000 g       *ABS*	00000000 __top_MFlashB512
1a004e30 g     O .text	00000020 __sf_fake_stdout
1a004144 g     F .text	00000040 siprintf
1a000870 g     F .text	0000004c QMPool_init
1a001ddc g     F .text	00000020 xTaskGetSchedulerState
1a0040d0  w    F .text	00000002 .hidden __aeabi_idiv0
1a000604 g     F .text	00000098 Service
1a00078c g     F .text	00000044 Task_ToMinusculas_OP1
1a003720 g     F .text	0000008c uartCallbackSet
1a00017e  w    F .text	00000002 BusFault_Handler
1a0041ae g     F .text	00000010 strlen
1a0025a0 g     F .text	0000002c pxPortInitialiseStack
1a0046a0 g     F .text	00000224 _printf_i
1a0032f8 g     F .text	00000034 Chip_Clock_Enable
1a0038a4 g     F .text	0000000a UART3_IRQHandler
10002fa4 g     O .bss	00000004 __malloc_sbrk_start
1a0001ba  w    F .text	00000002 MCPWM_IRQHandler
1a0021e0 g     F .text	0000004c xTimerCreateStatic
10003064 g     O .bss	00000004 xPointerQueue_OP0
1a0001ba  w    F .text	00000002 M0APP_IRQHandler
1a004184 g     F .text	0000001a strchr
1a003c5a g     F .text	00000054 gpioRead
1a003ce0 g     F .text	000000f4 boardInit
1a0025f4 g     F .text	00000044 vPortEnterCritical
1a00092a g     F .text	00000014 ModuleDinamicMemory_receive
10002fa0 g     O .bss	00000004 __malloc_free_list
1a000040 g     O .text	000000d4 g_pfnVendorVectors
1a0001ba  w    F .text	00000002 GINT1_IRQHandler
1a000518 g     F .text	00000060 QueueCreateAll
1a001128 g     F .text	00000016 xQueueCreateMutex
1a003230 g     F .text	00000058 Chip_Clock_SetBaseClock
1a0035d0 g     F .text	0000001c cyclesCounterInit
1a0001ba  w    F .text	00000002 GPIO4_IRQHandler
1a002af0 g     F .text	0000000c Board_SystemInit



Disassembly of section .text:

1a000000 <g_pfnVectors>:
1a000000:	00 80 00 10 d1 09 00 1a 79 01 00 1a 7b 01 00 1a     ........y...{...
1a000010:	7d 01 00 1a 7f 01 00 1a 81 01 00 1a be 6e ff 53     }............n.S
	...
1a00002c:	d1 25 00 1a 85 01 00 1a 00 00 00 00 71 26 00 1a     .%..........q&..
1a00003c:	d5 26 00 1a                                         .&..

1a000040 <g_pfnVendorVectors>:
1a000040:	bb 01 00 1a bb 01 00 1a bb 01 00 1a 00 00 00 00     ................
1a000050:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000060:	c5 3c 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     .<..............
1a000070:	35 39 00 1a 75 39 00 1a b5 39 00 1a f9 39 00 1a     59..u9...9...9..
1a000080:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000090:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000a0:	bd 01 00 1a bb 01 00 1a 9b 38 00 1a a5 38 00 1a     .........8...8..
1a0000b0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000c0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000d0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000e0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000f0:	00 00 00 00 bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000100:	00 00 00 00 bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000110:	bb 01 00 1a                                         ....

1a000114 <__data_section_table>:
1a000114:	1a004e90 	.word	0x1a004e90
1a000118:	10000000 	.word	0x10000000
1a00011c:	000000f4 	.word	0x000000f4
1a000120:	1a004e90 	.word	0x1a004e90
1a000124:	10080000 	.word	0x10080000
1a000128:	00000000 	.word	0x00000000
1a00012c:	1a004e90 	.word	0x1a004e90
1a000130:	20000000 	.word	0x20000000
1a000134:	00000000 	.word	0x00000000
1a000138:	1a004e90 	.word	0x1a004e90
1a00013c:	20008000 	.word	0x20008000
1a000140:	00000000 	.word	0x00000000
1a000144:	1a004e90 	.word	0x1a004e90
1a000148:	2000c000 	.word	0x2000c000
1a00014c:	00000000 	.word	0x00000000

1a000150 <__bss_section_table>:
1a000150:	100000f8 	.word	0x100000f8
1a000154:	00002ff4 	.word	0x00002ff4
1a000158:	10080000 	.word	0x10080000
1a00015c:	00000000 	.word	0x00000000
1a000160:	20000000 	.word	0x20000000
1a000164:	00000000 	.word	0x00000000
1a000168:	20008000 	.word	0x20008000
1a00016c:	00000000 	.word	0x00000000
1a000170:	2000c000 	.word	0x2000c000
1a000174:	00000000 	.word	0x00000000

1a000178 <NMI_Handler>:
1a000178:	e7fe      	b.n	1a000178 <NMI_Handler>

1a00017a <HardFault_Handler>:
1a00017a:	e7fe      	b.n	1a00017a <HardFault_Handler>

1a00017c <MemManage_Handler>:
1a00017c:	e7fe      	b.n	1a00017c <MemManage_Handler>

1a00017e <BusFault_Handler>:
1a00017e:	e7fe      	b.n	1a00017e <BusFault_Handler>

1a000180 <UsageFault_Handler>:
1a000180:	e7fe      	b.n	1a000180 <UsageFault_Handler>
1a000182:	e7fe      	b.n	1a000182 <UsageFault_Handler+0x2>

1a000184 <DebugMon_Handler>:
1a000184:	e7fe      	b.n	1a000184 <DebugMon_Handler>
1a000186:	e7fe      	b.n	1a000186 <DebugMon_Handler+0x2>
1a000188:	e7fe      	b.n	1a000188 <DebugMon_Handler+0x4>

1a00018a <data_init>:
1a00018a:	2300      	movs	r3, #0
1a00018c:	4293      	cmp	r3, r2
1a00018e:	d20a      	bcs.n	1a0001a6 <data_init+0x1c>
1a000190:	b410      	push	{r4}
1a000192:	6804      	ldr	r4, [r0, #0]
1a000194:	600c      	str	r4, [r1, #0]
1a000196:	3304      	adds	r3, #4
1a000198:	3004      	adds	r0, #4
1a00019a:	3104      	adds	r1, #4
1a00019c:	4293      	cmp	r3, r2
1a00019e:	d3f8      	bcc.n	1a000192 <data_init+0x8>
1a0001a0:	f85d 4b04 	ldr.w	r4, [sp], #4
1a0001a4:	4770      	bx	lr
1a0001a6:	4770      	bx	lr

1a0001a8 <bss_init>:
1a0001a8:	2300      	movs	r3, #0
1a0001aa:	e003      	b.n	1a0001b4 <bss_init+0xc>
1a0001ac:	2200      	movs	r2, #0
1a0001ae:	6002      	str	r2, [r0, #0]
1a0001b0:	3304      	adds	r3, #4
1a0001b2:	3004      	adds	r0, #4
1a0001b4:	428b      	cmp	r3, r1
1a0001b6:	d3f9      	bcc.n	1a0001ac <bss_init+0x4>
1a0001b8:	4770      	bx	lr

1a0001ba <ADC0_IRQHandler>:
1a0001ba:	e7fe      	b.n	1a0001ba <ADC0_IRQHandler>

1a0001bc <UART0_IRQHandler>:
1a0001bc:	b508      	push	{r3, lr}
1a0001be:	2000      	movs	r0, #0
1a0001c0:	f003 fa14 	bl	1a0035ec <uartProcessIRQ>
1a0001c4:	bd08      	pop	{r3, pc}
1a0001c6:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001ca:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001ce:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001d2:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001d6:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001da:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001de:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e2:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e6:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001ea:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001ee:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f2:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f6:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001fa:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001fe:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000202:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000206:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00020a:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00020e:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000212:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000216:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00021a:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00021e:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000222:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000226:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00022a:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00022e:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000232:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000236:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00023a:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00023e:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000242:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000246:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00024a:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00024e:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000252:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000256:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00025a:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00025e:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000262:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000266:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00026a:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00026e:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000272:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000276:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00027a:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00027e:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000282:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000286:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00028a:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00028e:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000292:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000296:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00029a:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00029e:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a2:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a6:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002aa:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ae:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b2:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b6:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ba:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002be:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c2:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c6:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ca:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ce:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d2:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d6:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002da:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002de:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e2:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e6:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ea:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ee:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f2:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f6:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002fa:	Address 0x000000001a0002fa is out of bounds.


1a0002fc <CRP_WORD>:
1a0002fc:	ffff ffff                                   ....

1a000300 <Add_IncommingFrame>:


/*=================================================================================
						Almacena en el buffer de la RX ISR
=================================================================================*/
void Add_IncommingFrame(UBaseType_t uxSavedInterruptStatus ,BaseType_t xHigherPriorityTaskWoken, volatile char c){
1a000300:	b530      	push	{r4, r5, lr}
1a000302:	b085      	sub	sp, #20
1a000304:	9103      	str	r1, [sp, #12]
1a000306:	f88d 200b 	strb.w	r2, [sp, #11]
	char *PtrSOF = NULL;
	char *PtrEOF = NULL;
	void* XPointerQueUe = NULL; /*Puntero auxiliar  a cola*/

	/*Verifica Inicio de trama*/
	if( Frame_parameters._SOF == c) Data.StartFrame = 1;
1a00030a:	4b2a      	ldr	r3, [pc, #168]	; (1a0003b4 <Add_IncommingFrame+0xb4>)
1a00030c:	781a      	ldrb	r2, [r3, #0]
1a00030e:	b2d2      	uxtb	r2, r2
1a000310:	f89d 300b 	ldrb.w	r3, [sp, #11]
1a000314:	b2db      	uxtb	r3, r3
1a000316:	429a      	cmp	r2, r3
1a000318:	d034      	beq.n	1a000384 <Add_IncommingFrame+0x84>

	if(Data.StartFrame){
1a00031a:	4b27      	ldr	r3, [pc, #156]	; (1a0003b8 <Add_IncommingFrame+0xb8>)
1a00031c:	f893 306c 	ldrb.w	r3, [r3, #108]	; 0x6c
1a000320:	b373      	cbz	r3, 1a000380 <Add_IncommingFrame+0x80>

portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
{
uint32_t ulOriginalBASEPRI, ulNewBASEPRI;

	__asm volatile
1a000322:	f3ef 8011 	mrs	r0, BASEPRI
1a000326:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a00032a:	f383 8811 	msr	BASEPRI, r3
1a00032e:	f3bf 8f6f 	isb	sy
1a000332:	f3bf 8f4f 	dsb	sy
		/*Proteger acceso al buffer*/
		uxSavedInterruptStatus = taskENTER_CRITICAL_FROM_ISR();
		Data.Buffer[Data.Index++]= c;
1a000336:	4b20      	ldr	r3, [pc, #128]	; (1a0003b8 <Add_IncommingFrame+0xb8>)
1a000338:	f893 206b 	ldrb.w	r2, [r3, #107]	; 0x6b
1a00033c:	b2d2      	uxtb	r2, r2
1a00033e:	1c51      	adds	r1, r2, #1
1a000340:	b2c9      	uxtb	r1, r1
1a000342:	f883 106b 	strb.w	r1, [r3, #107]	; 0x6b
1a000346:	f89d 100b 	ldrb.w	r1, [sp, #11]
1a00034a:	b2c9      	uxtb	r1, r1
1a00034c:	5499      	strb	r1, [r3, r2]
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
1a00034e:	f380 8811 	msr	BASEPRI, r0
		taskEXIT_CRITICAL_FROM_ISR(uxSavedInterruptStatus);
	}
	else return;

	if(Data.Index > sizeof(Data)-1) Data.Index =0;  /*Garantiza no desbordamiento del buffer*/
1a000352:	f893 306b 	ldrb.w	r3, [r3, #107]	; 0x6b
1a000356:	b2db      	uxtb	r3, r3
1a000358:	2b6c      	cmp	r3, #108	; 0x6c
1a00035a:	d903      	bls.n	1a000364 <Add_IncommingFrame+0x64>
1a00035c:	4b16      	ldr	r3, [pc, #88]	; (1a0003b8 <Add_IncommingFrame+0xb8>)
1a00035e:	2200      	movs	r2, #0
1a000360:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b

	Data.Buffer[Data.Index] = 0; 					/*char NULL pos siguiente*/
1a000364:	4a14      	ldr	r2, [pc, #80]	; (1a0003b8 <Add_IncommingFrame+0xb8>)
1a000366:	f892 306b 	ldrb.w	r3, [r2, #107]	; 0x6b
1a00036a:	b2db      	uxtb	r3, r3
1a00036c:	2100      	movs	r1, #0
1a00036e:	54d1      	strb	r1, [r2, r3]

	if(Frame_parameters._EOF == c){
1a000370:	4b10      	ldr	r3, [pc, #64]	; (1a0003b4 <Add_IncommingFrame+0xb4>)
1a000372:	7b1a      	ldrb	r2, [r3, #12]
1a000374:	b2d2      	uxtb	r2, r2
1a000376:	f89d 300b 	ldrb.w	r3, [sp, #11]
1a00037a:	b2db      	uxtb	r3, r3
1a00037c:	429a      	cmp	r2, r3
1a00037e:	d006      	beq.n	1a00038e <Add_IncommingFrame+0x8e>
		/*Frame buena en el buffer*/

		xTaskNotifyFromISR(xTaskHandle_RxNotify,0,eNoAction,&xHigherPriorityTaskWoken);
		Data.Index =0;
	}
}
1a000380:	b005      	add	sp, #20
1a000382:	bd30      	pop	{r4, r5, pc}
	if( Frame_parameters._SOF == c) Data.StartFrame = 1;
1a000384:	4b0c      	ldr	r3, [pc, #48]	; (1a0003b8 <Add_IncommingFrame+0xb8>)
1a000386:	2201      	movs	r2, #1
1a000388:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
1a00038c:	e7c5      	b.n	1a00031a <Add_IncommingFrame+0x1a>
		Data.StartFrame = 0;
1a00038e:	4d0a      	ldr	r5, [pc, #40]	; (1a0003b8 <Add_IncommingFrame+0xb8>)
1a000390:	460c      	mov	r4, r1
1a000392:	f885 106c 	strb.w	r1, [r5, #108]	; 0x6c
		Data.Ready = 1;
1a000396:	2301      	movs	r3, #1
1a000398:	f885 306a 	strb.w	r3, [r5, #106]	; 0x6a
		xTaskNotifyFromISR(xTaskHandle_RxNotify,0,eNoAction,&xHigherPriorityTaskWoken);
1a00039c:	4b07      	ldr	r3, [pc, #28]	; (1a0003bc <Add_IncommingFrame+0xbc>)
1a00039e:	6818      	ldr	r0, [r3, #0]
1a0003a0:	ab03      	add	r3, sp, #12
1a0003a2:	9300      	str	r3, [sp, #0]
1a0003a4:	460b      	mov	r3, r1
1a0003a6:	460a      	mov	r2, r1
1a0003a8:	f001 fdcc 	bl	1a001f44 <xTaskGenericNotifyFromISR>
		Data.Index =0;
1a0003ac:	f885 406b 	strb.w	r4, [r5, #107]	; 0x6b
1a0003b0:	e7e6      	b.n	1a000380 <Add_IncommingFrame+0x80>
1a0003b2:	bf00      	nop
1a0003b4:	10000000 	.word	0x10000000
1a0003b8:	10002fc4 	.word	0x10002fc4
1a0003bc:	100000f8 	.word	0x100000f8

1a0003c0 <SelecQueueFromOperation>:
/*=================================================================================
 	 	 	 	 	 	selecionar puntero a cola segun operacion
 =================================================================================*/
void* SelecQueueFromOperation(Enum_Op_t OP){
	void * XpointerSelected = NULL;
	switch(OP){
1a0003c0:	2803      	cmp	r0, #3
1a0003c2:	d80f      	bhi.n	1a0003e4 <SelecQueueFromOperation+0x24>
1a0003c4:	e8df f000 	tbb	[pc, r0]
1a0003c8:	0b080502 	.word	0x0b080502

	case OP0:   /*Operacion 0*/
		XpointerSelected = xPointerQueue_OP0;
1a0003cc:	4b06      	ldr	r3, [pc, #24]	; (1a0003e8 <SelecQueueFromOperation+0x28>)
1a0003ce:	6818      	ldr	r0, [r3, #0]
		break;
1a0003d0:	4770      	bx	lr
	case OP1:	/*Operacion 1*/
		XpointerSelected = xPointerQueue_OP1;
1a0003d2:	4b06      	ldr	r3, [pc, #24]	; (1a0003ec <SelecQueueFromOperation+0x2c>)
1a0003d4:	6818      	ldr	r0, [r3, #0]
		break;
1a0003d6:	4770      	bx	lr
	case OP2:	/*Operacion 2*/
		XpointerSelected = xPointerQueue_OP2;
1a0003d8:	4b05      	ldr	r3, [pc, #20]	; (1a0003f0 <SelecQueueFromOperation+0x30>)
1a0003da:	6818      	ldr	r0, [r3, #0]
		break;
1a0003dc:	4770      	bx	lr
	case OP3:	/*Operacion 3*/
		XpointerSelected = xPointerQueue_OP3;
1a0003de:	4b05      	ldr	r3, [pc, #20]	; (1a0003f4 <SelecQueueFromOperation+0x34>)
1a0003e0:	6818      	ldr	r0, [r3, #0]
		break;
1a0003e2:	4770      	bx	lr
	void * XpointerSelected = NULL;
1a0003e4:	2000      	movs	r0, #0
	}
	return XpointerSelected;
}
1a0003e6:	4770      	bx	lr
1a0003e8:	10003064 	.word	0x10003064
1a0003ec:	10003060 	.word	0x10003060
1a0003f0:	10002fb0 	.word	0x10002fb0
1a0003f4:	10002fc0 	.word	0x10002fc0

1a0003f8 <packetToLower>:

/*=================================================================================
 	 	 	 	 	 	 	 	 packetToLower
 =================================================================================*/
void packetToLower(uint8_t *ptrToPacketLower){
1a0003f8:	b430      	push	{r4, r5}

	uint16_t tSizePacket;
	uint8_t i;
	tSizePacket = ((*(ptrToPacketLower + OFFSET_TAMANO)) -'0')*10;
1a0003fa:	7883      	ldrb	r3, [r0, #2]
1a0003fc:	3b30      	subs	r3, #48	; 0x30
1a0003fe:	eb03 0383 	add.w	r3, r3, r3, lsl #2
1a000402:	005c      	lsls	r4, r3, #1
1a000404:	b2a3      	uxth	r3, r4
	tSizePacket = tSizePacket + ( (*(ptrToPacketLower+OFFSET_OP+OFFSET_TAMANO)) -'0');
1a000406:	78c4      	ldrb	r4, [r0, #3]
1a000408:	441c      	add	r4, r3
1a00040a:	b2a4      	uxth	r4, r4
1a00040c:	3c30      	subs	r4, #48	; 0x30
1a00040e:	b2a4      	uxth	r4, r4
	for(i = 0; i < tSizePacket ; i++){
1a000410:	2300      	movs	r3, #0
1a000412:	e001      	b.n	1a000418 <packetToLower+0x20>
1a000414:	3301      	adds	r3, #1
1a000416:	b2db      	uxtb	r3, r3
1a000418:	b29a      	uxth	r2, r3
1a00041a:	42a2      	cmp	r2, r4
1a00041c:	d209      	bcs.n	1a000432 <packetToLower+0x3a>
		if( *(ptrToPacketLower + i + OFFSET_DATO) >= MIN_LOWER &&  *(ptrToPacketLower + i + OFFSET_DATO) <= MAX_LOWER)
1a00041e:	1d1d      	adds	r5, r3, #4
1a000420:	5d41      	ldrb	r1, [r0, r5]
1a000422:	f1a1 0241 	sub.w	r2, r1, #65	; 0x41
1a000426:	b2d2      	uxtb	r2, r2
1a000428:	2a19      	cmp	r2, #25
1a00042a:	d8f3      	bhi.n	1a000414 <packetToLower+0x1c>
			*(ptrToPacketLower + i + OFFSET_DATO) = *(ptrToPacketLower + i + OFFSET_DATO) + UP_LW_LW_UP;
1a00042c:	3120      	adds	r1, #32
1a00042e:	5541      	strb	r1, [r0, r5]
1a000430:	e7f0      	b.n	1a000414 <packetToLower+0x1c>
	}
}
1a000432:	bc30      	pop	{r4, r5}
1a000434:	4770      	bx	lr

1a000436 <packetToUpper>:
/*=================================================================================
 	 	 	 	 	 	 	 	 packetToUpper
 =================================================================================*/
void packetToUpper(uint8_t *ptrToPacketUpper){
1a000436:	b430      	push	{r4, r5}
	uint16_t tSizePacket;
	uint8_t i;
	tSizePacket = ( *( ptrToPacketUpper + OFFSET_TAMANO) -'0')*10;
1a000438:	7883      	ldrb	r3, [r0, #2]
1a00043a:	3b30      	subs	r3, #48	; 0x30
1a00043c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
1a000440:	005c      	lsls	r4, r3, #1
1a000442:	b2a3      	uxth	r3, r4
	tSizePacket = tSizePacket + ( *( ptrToPacketUpper + OFFSET_OP+OFFSET_TAMANO) -'0');
1a000444:	78c4      	ldrb	r4, [r0, #3]
1a000446:	441c      	add	r4, r3
1a000448:	b2a4      	uxth	r4, r4
1a00044a:	3c30      	subs	r4, #48	; 0x30
1a00044c:	b2a4      	uxth	r4, r4
	for(i = 0;i < tSizePacket; i++){
1a00044e:	2300      	movs	r3, #0
1a000450:	e001      	b.n	1a000456 <packetToUpper+0x20>
1a000452:	3301      	adds	r3, #1
1a000454:	b2db      	uxtb	r3, r3
1a000456:	b29a      	uxth	r2, r3
1a000458:	42a2      	cmp	r2, r4
1a00045a:	d209      	bcs.n	1a000470 <packetToUpper+0x3a>
		if( *(ptrToPacketUpper + i + OFFSET_DATO) >= MIN_UPPER &&  *(ptrToPacketUpper + i + OFFSET_DATO) <= MAX_UPPER)
1a00045c:	1d1d      	adds	r5, r3, #4
1a00045e:	5d41      	ldrb	r1, [r0, r5]
1a000460:	f1a1 0261 	sub.w	r2, r1, #97	; 0x61
1a000464:	b2d2      	uxtb	r2, r2
1a000466:	2a19      	cmp	r2, #25
1a000468:	d8f3      	bhi.n	1a000452 <packetToUpper+0x1c>
			*(ptrToPacketUpper + i + OFFSET_DATO) = *(ptrToPacketUpper + i + OFFSET_DATO)-UP_LW_LW_UP;
1a00046a:	3920      	subs	r1, #32
1a00046c:	5541      	strb	r1, [r0, r5]
1a00046e:	e7f0      	b.n	1a000452 <packetToUpper+0x1c>
	}
}
1a000470:	bc30      	pop	{r4, r5}
1a000472:	4770      	bx	lr

1a000474 <TaskCreateAll>:
	xSemaphoreGive(SemMutexUart);
}
/*=================================================================================
 	 	 	 	 	 	 	 	task create
 =================================================================================*/
void TaskCreateAll(void){
1a000474:	b530      	push	{r4, r5, lr}
1a000476:	b083      	sub	sp, #12

	xTaskCreate(TaskTxUart, (const char *)"TaskTxUart",configMINIMAL_STACK_SIZE*2, NULL, tskIDLE_PRIORITY + 1, NULL);
1a000478:	2400      	movs	r4, #0
1a00047a:	9401      	str	r4, [sp, #4]
1a00047c:	2501      	movs	r5, #1
1a00047e:	9500      	str	r5, [sp, #0]
1a000480:	4623      	mov	r3, r4
1a000482:	22b4      	movs	r2, #180	; 0xb4
1a000484:	4917      	ldr	r1, [pc, #92]	; (1a0004e4 <TaskCreateAll+0x70>)
1a000486:	4818      	ldr	r0, [pc, #96]	; (1a0004e8 <TaskCreateAll+0x74>)
1a000488:	f001 f9db 	bl	1a001842 <xTaskCreate>
	xTaskCreate(TaskService, (const char *)"TaskService",configMINIMAL_STACK_SIZE*2, NULL, tskIDLE_PRIORITY + 2, &xTaskHandle_RxNotify);
1a00048c:	4b17      	ldr	r3, [pc, #92]	; (1a0004ec <TaskCreateAll+0x78>)
1a00048e:	9301      	str	r3, [sp, #4]
1a000490:	2302      	movs	r3, #2
1a000492:	9300      	str	r3, [sp, #0]
1a000494:	4623      	mov	r3, r4
1a000496:	22b4      	movs	r2, #180	; 0xb4
1a000498:	4915      	ldr	r1, [pc, #84]	; (1a0004f0 <TaskCreateAll+0x7c>)
1a00049a:	4816      	ldr	r0, [pc, #88]	; (1a0004f4 <TaskCreateAll+0x80>)
1a00049c:	f001 f9d1 	bl	1a001842 <xTaskCreate>
	xTaskCreate(Task_ToMayusculas_OP0, (const char *)"Task_ToMayusculas_OP0",configMINIMAL_STACK_SIZE*2, NULL, tskIDLE_PRIORITY + 1, NULL);
1a0004a0:	9401      	str	r4, [sp, #4]
1a0004a2:	9500      	str	r5, [sp, #0]
1a0004a4:	4623      	mov	r3, r4
1a0004a6:	22b4      	movs	r2, #180	; 0xb4
1a0004a8:	4913      	ldr	r1, [pc, #76]	; (1a0004f8 <TaskCreateAll+0x84>)
1a0004aa:	4814      	ldr	r0, [pc, #80]	; (1a0004fc <TaskCreateAll+0x88>)
1a0004ac:	f001 f9c9 	bl	1a001842 <xTaskCreate>
	xTaskCreate(Task_ToMinusculas_OP1, (const char *)"Task_ToMinusculas_OP1",configMINIMAL_STACK_SIZE*2, NULL, tskIDLE_PRIORITY + 1, NULL);
1a0004b0:	9401      	str	r4, [sp, #4]
1a0004b2:	9500      	str	r5, [sp, #0]
1a0004b4:	4623      	mov	r3, r4
1a0004b6:	22b4      	movs	r2, #180	; 0xb4
1a0004b8:	4911      	ldr	r1, [pc, #68]	; (1a000500 <TaskCreateAll+0x8c>)
1a0004ba:	4812      	ldr	r0, [pc, #72]	; (1a000504 <TaskCreateAll+0x90>)
1a0004bc:	f001 f9c1 	bl	1a001842 <xTaskCreate>
	xTaskCreate(Task_ReportStack_OP2, (const char *)"Task_ToMayusculas_OP2",configMINIMAL_STACK_SIZE*2, NULL, tskIDLE_PRIORITY + 1, NULL);
1a0004c0:	9401      	str	r4, [sp, #4]
1a0004c2:	9500      	str	r5, [sp, #0]
1a0004c4:	4623      	mov	r3, r4
1a0004c6:	22b4      	movs	r2, #180	; 0xb4
1a0004c8:	490f      	ldr	r1, [pc, #60]	; (1a000508 <TaskCreateAll+0x94>)
1a0004ca:	4810      	ldr	r0, [pc, #64]	; (1a00050c <TaskCreateAll+0x98>)
1a0004cc:	f001 f9b9 	bl	1a001842 <xTaskCreate>
	xTaskCreate(Task_ReportHeap_OP3, (const char *)"Task_ToMinusculas_OP3",configMINIMAL_STACK_SIZE*2, NULL, tskIDLE_PRIORITY + 1, NULL);
1a0004d0:	9401      	str	r4, [sp, #4]
1a0004d2:	9500      	str	r5, [sp, #0]
1a0004d4:	4623      	mov	r3, r4
1a0004d6:	22b4      	movs	r2, #180	; 0xb4
1a0004d8:	490d      	ldr	r1, [pc, #52]	; (1a000510 <TaskCreateAll+0x9c>)
1a0004da:	480e      	ldr	r0, [pc, #56]	; (1a000514 <TaskCreateAll+0xa0>)
1a0004dc:	f001 f9b1 	bl	1a001842 <xTaskCreate>
}
1a0004e0:	b003      	add	sp, #12
1a0004e2:	bd30      	pop	{r4, r5, pc}
1a0004e4:	1a004a0c 	.word	0x1a004a0c
1a0004e8:	1a000801 	.word	0x1a000801
1a0004ec:	100000f8 	.word	0x100000f8
1a0004f0:	1a004a18 	.word	0x1a004a18
1a0004f4:	1a000725 	.word	0x1a000725
1a0004f8:	1a004a24 	.word	0x1a004a24
1a0004fc:	1a000749 	.word	0x1a000749
1a000500:	1a004a3c 	.word	0x1a004a3c
1a000504:	1a00078d 	.word	0x1a00078d
1a000508:	1a004a54 	.word	0x1a004a54
1a00050c:	1a0007d1 	.word	0x1a0007d1
1a000510:	1a004a6c 	.word	0x1a004a6c
1a000514:	1a0007e9 	.word	0x1a0007e9

1a000518 <QueueCreateAll>:

/*=================================================================================
 	 	 	 	 	 	 	 	queue create
 =================================================================================*/
void QueueCreateAll(void){
1a000518:	b508      	push	{r3, lr}

	xPointerQueue_OP0	= xQueueCreate(16 , sizeof(char *)); /*Create queue OP0*/
1a00051a:	2200      	movs	r2, #0
1a00051c:	2104      	movs	r1, #4
1a00051e:	2010      	movs	r0, #16
1a000520:	f000 fd11 	bl	1a000f46 <xQueueGenericCreate>
1a000524:	4b0f      	ldr	r3, [pc, #60]	; (1a000564 <QueueCreateAll+0x4c>)
1a000526:	6018      	str	r0, [r3, #0]
	xPointerQueue_OP1	= xQueueCreate(16 , sizeof(char *)); /*Create queue OP0*/
1a000528:	2200      	movs	r2, #0
1a00052a:	2104      	movs	r1, #4
1a00052c:	2010      	movs	r0, #16
1a00052e:	f000 fd0a 	bl	1a000f46 <xQueueGenericCreate>
1a000532:	4b0d      	ldr	r3, [pc, #52]	; (1a000568 <QueueCreateAll+0x50>)
1a000534:	6018      	str	r0, [r3, #0]
	xPointerQueue_OP2	= xQueueCreate(16 , sizeof(char *)); /*Create queue OP0*/
1a000536:	2200      	movs	r2, #0
1a000538:	2104      	movs	r1, #4
1a00053a:	2010      	movs	r0, #16
1a00053c:	f000 fd03 	bl	1a000f46 <xQueueGenericCreate>
1a000540:	4b0a      	ldr	r3, [pc, #40]	; (1a00056c <QueueCreateAll+0x54>)
1a000542:	6018      	str	r0, [r3, #0]
	xPointerQueue_OP3	= xQueueCreate(16 , sizeof(char *)); /*Create queue OP0*/
1a000544:	2200      	movs	r2, #0
1a000546:	2104      	movs	r1, #4
1a000548:	2010      	movs	r0, #16
1a00054a:	f000 fcfc 	bl	1a000f46 <xQueueGenericCreate>
1a00054e:	4b08      	ldr	r3, [pc, #32]	; (1a000570 <QueueCreateAll+0x58>)
1a000550:	6018      	str	r0, [r3, #0]
	xPointerQueue_3		= xQueueCreate(16 , sizeof(char *)); /*Create queue OP0*/
1a000552:	2200      	movs	r2, #0
1a000554:	2104      	movs	r1, #4
1a000556:	2010      	movs	r0, #16
1a000558:	f000 fcf5 	bl	1a000f46 <xQueueGenericCreate>
1a00055c:	4b05      	ldr	r3, [pc, #20]	; (1a000574 <QueueCreateAll+0x5c>)
1a00055e:	6018      	str	r0, [r3, #0]

}
1a000560:	bd08      	pop	{r3, pc}
1a000562:	bf00      	nop
1a000564:	10003064 	.word	0x10003064
1a000568:	10003060 	.word	0x10003060
1a00056c:	10002fb0 	.word	0x10002fb0
1a000570:	10002fc0 	.word	0x10002fc0
1a000574:	10002fb8 	.word	0x10002fb8

1a000578 <semaphoreCreateAll>:
/*=================================================================================
 	 	 	 	 	 	 	 	semaphore create
 =================================================================================*/

void semaphoreCreateAll(void){
1a000578:	b508      	push	{r3, lr}
	SemTxUart 	 =  xSemaphoreCreateBinary();
1a00057a:	2203      	movs	r2, #3
1a00057c:	2100      	movs	r1, #0
1a00057e:	2001      	movs	r0, #1
1a000580:	f000 fce1 	bl	1a000f46 <xQueueGenericCreate>
1a000584:	4b03      	ldr	r3, [pc, #12]	; (1a000594 <semaphoreCreateAll+0x1c>)
1a000586:	6018      	str	r0, [r3, #0]
	SemMutexUart =	xSemaphoreCreateMutex() ;
1a000588:	2001      	movs	r0, #1
1a00058a:	f000 fdcd 	bl	1a001128 <xQueueCreateMutex>
1a00058e:	4b02      	ldr	r3, [pc, #8]	; (1a000598 <semaphoreCreateAll+0x20>)
1a000590:	6018      	str	r0, [r3, #0]
}
1a000592:	bd08      	pop	{r3, pc}
1a000594:	10002fac 	.word	0x10002fac
1a000598:	10003058 	.word	0x10003058

1a00059c <itoa>:
 	 	 	 	 	 	 	     	conversions
 =================================================================================*/

char* itoa(int value, char* result, int base) {
	// check that the base if valid
	if (base < 2 || base > 36) { *result = '\0'; return result; }
1a00059c:	1e93      	subs	r3, r2, #2
1a00059e:	2b22      	cmp	r3, #34	; 0x22
1a0005a0:	d802      	bhi.n	1a0005a8 <itoa+0xc>
char* itoa(int value, char* result, int base) {
1a0005a2:	b4f0      	push	{r4, r5, r6, r7}

	char* ptr = result, *ptr1 = result, tmp_char;
1a0005a4:	460d      	mov	r5, r1
1a0005a6:	e005      	b.n	1a0005b4 <itoa+0x18>
	if (base < 2 || base > 36) { *result = '\0'; return result; }
1a0005a8:	2300      	movs	r3, #0
1a0005aa:	700b      	strb	r3, [r1, #0]
		tmp_char = *ptr;
		*ptr--= *ptr1;
		*ptr1++ = tmp_char;
	}
	return result;
}
1a0005ac:	4608      	mov	r0, r1
1a0005ae:	4770      	bx	lr
		*ptr++ = "zyxwvutsrqponmlkjihgfedcba9876543210123456789abcdefghijklmnopqrstuvwxyz" [35 + (tmp_value - value * base)];
1a0005b0:	4635      	mov	r5, r6
		value /= base;
1a0005b2:	4620      	mov	r0, r4
1a0005b4:	fb90 f4f2 	sdiv	r4, r0, r2
		*ptr++ = "zyxwvutsrqponmlkjihgfedcba9876543210123456789abcdefghijklmnopqrstuvwxyz" [35 + (tmp_value - value * base)];
1a0005b8:	fb02 0314 	mls	r3, r2, r4, r0
1a0005bc:	3323      	adds	r3, #35	; 0x23
1a0005be:	1c6e      	adds	r6, r5, #1
1a0005c0:	4f0f      	ldr	r7, [pc, #60]	; (1a000600 <itoa+0x64>)
1a0005c2:	5cfb      	ldrb	r3, [r7, r3]
1a0005c4:	702b      	strb	r3, [r5, #0]
	} while ( value );
1a0005c6:	2c00      	cmp	r4, #0
1a0005c8:	d1f2      	bne.n	1a0005b0 <itoa+0x14>
	if (tmp_value < 0) *ptr++ = '-';
1a0005ca:	2800      	cmp	r0, #0
1a0005cc:	db04      	blt.n	1a0005d8 <itoa+0x3c>
	*ptr-- = '\0';
1a0005ce:	1e72      	subs	r2, r6, #1
1a0005d0:	2300      	movs	r3, #0
1a0005d2:	7033      	strb	r3, [r6, #0]
	char* ptr = result, *ptr1 = result, tmp_char;
1a0005d4:	460b      	mov	r3, r1
	while(ptr1 < ptr) {
1a0005d6:	e00d      	b.n	1a0005f4 <itoa+0x58>
	if (tmp_value < 0) *ptr++ = '-';
1a0005d8:	1cae      	adds	r6, r5, #2
1a0005da:	232d      	movs	r3, #45	; 0x2d
1a0005dc:	706b      	strb	r3, [r5, #1]
1a0005de:	e7f6      	b.n	1a0005ce <itoa+0x32>
		tmp_char = *ptr;
1a0005e0:	4614      	mov	r4, r2
1a0005e2:	f814 0901 	ldrb.w	r0, [r4], #-1
		*ptr--= *ptr1;
1a0005e6:	461d      	mov	r5, r3
1a0005e8:	f815 6b01 	ldrb.w	r6, [r5], #1
1a0005ec:	7016      	strb	r6, [r2, #0]
		*ptr1++ = tmp_char;
1a0005ee:	7018      	strb	r0, [r3, #0]
1a0005f0:	462b      	mov	r3, r5
		*ptr--= *ptr1;
1a0005f2:	4622      	mov	r2, r4
	while(ptr1 < ptr) {
1a0005f4:	429a      	cmp	r2, r3
1a0005f6:	d8f3      	bhi.n	1a0005e0 <itoa+0x44>
}
1a0005f8:	4608      	mov	r0, r1
1a0005fa:	bcf0      	pop	{r4, r5, r6, r7}
1a0005fc:	4770      	bx	lr
1a0005fe:	bf00      	nop
1a000600:	1a004a84 	.word	0x1a004a84

1a000604 <Service>:
/*=================================================================================
 	 	 	 	 	 	 	     	Servicio
 =================================================================================*/

void Service(Module_Data_t *obj ){
1a000604:	b530      	push	{r4, r5, lr}
1a000606:	b085      	sub	sp, #20
1a000608:	4604      	mov	r4, r0
	void* XPointerQueUe = NULL; /*Puntero auxiliar  a cola*/
	char *PcStringToSend;
	PcStringToSend = NULL;

	/*Proteger datos para hacer copia local*/
	taskENTER_CRITICAL();
1a00060a:	f001 fff3 	bl	1a0025f4 <vPortEnterCritical>
		Frame_parameters.BufferAux = obj->MemoryAllocFunction(sizeof(Data.Buffer));
1a00060e:	6963      	ldr	r3, [r4, #20]
1a000610:	206a      	movs	r0, #106	; 0x6a
1a000612:	2100      	movs	r1, #0
1a000614:	4798      	blx	r3
1a000616:	4d1e      	ldr	r5, [pc, #120]	; (1a000690 <Service+0x8c>)
1a000618:	60a8      	str	r0, [r5, #8]
		strcpy((char*)Frame_parameters.BufferAux,(const char*)Data.Buffer);
1a00061a:	68a8      	ldr	r0, [r5, #8]
1a00061c:	491d      	ldr	r1, [pc, #116]	; (1a000694 <Service+0x90>)
1a00061e:	f003 fdbe 	bl	1a00419e <strcpy>
	taskEXIT_CRITICAL();
1a000622:	f002 f809 	bl	1a002638 <vPortExitCritical>

	/*Buscar posición del inicio de la trama*/
	PtrSOF = strchr((const char*)Frame_parameters.BufferAux, Frame_parameters._SOF);
1a000626:	68a8      	ldr	r0, [r5, #8]
1a000628:	7829      	ldrb	r1, [r5, #0]
1a00062a:	f003 fdab 	bl	1a004184 <strchr>

	if( PtrSOF != NULL ){
1a00062e:	b188      	cbz	r0, 1a000654 <Service+0x50>
1a000630:	4601      	mov	r1, r0
		/** Decodificar T :  T[0] -'0' *10 + T[1] - '0'*/
		Frame_parameters.T[0] =  ( *(PtrSOF +  OFFSET_TAMANO)-'0' )*10 + (*(PtrSOF +  OFFSET_TAMANO + 1)-'0' ) ;
1a000632:	7882      	ldrb	r2, [r0, #2]
1a000634:	78c3      	ldrb	r3, [r0, #3]
1a000636:	3a30      	subs	r2, #48	; 0x30
1a000638:	eb02 0282 	add.w	r2, r2, r2, lsl #2
1a00063c:	0050      	lsls	r0, r2, #1
1a00063e:	4403      	add	r3, r0
1a000640:	3b30      	subs	r3, #48	; 0x30
1a000642:	b2db      	uxtb	r3, r3
1a000644:	70ab      	strb	r3, [r5, #2]
		/** Decodificar OP */
		Frame_parameters.Operation = *(PtrSOF +  OFFSET_OP)-'0';
1a000646:	784b      	ldrb	r3, [r1, #1]
1a000648:	3b30      	subs	r3, #48	; 0x30
1a00064a:	b2db      	uxtb	r3, r3
1a00064c:	706b      	strb	r3, [r5, #1]
		/* Cantidad de memoria a reservar*/
		obj->xMaxStringLength = Frame_parameters.T[0] + NUM_ELEMENTOS_REST_FRAME;
1a00064e:	78ab      	ldrb	r3, [r5, #2]
1a000650:	3306      	adds	r3, #6
1a000652:	7123      	strb	r3, [r4, #4]
	}

	/*Selecionar operaacion*/
	XPointerQueUe = SelecQueueFromOperation(Frame_parameters.Operation);
1a000654:	4b0e      	ldr	r3, [pc, #56]	; (1a000690 <Service+0x8c>)
1a000656:	7858      	ldrb	r0, [r3, #1]
1a000658:	f7ff feb2 	bl	1a0003c0 <SelecQueueFromOperation>
	if(XPointerQueUe != NULL){
1a00065c:	4605      	mov	r5, r0
1a00065e:	b180      	cbz	r0, 1a000682 <Service+0x7e>
		if (PcStringToSend == NULL) PcStringToSend = obj->MemoryAllocFunction( obj->xMaxStringLength );
1a000660:	6963      	ldr	r3, [r4, #20]
1a000662:	7920      	ldrb	r0, [r4, #4]
1a000664:	2100      	movs	r1, #0
1a000666:	4798      	blx	r3
		/*Envía el puntero al buffer con la trama a la cola*/
		ModuleDinamicMemory_send2(obj,PcStringToSend,0,NULL,(char*)Frame_parameters.BufferAux,XPointerQueUe ,portMAX_DELAY);
1a000668:	4b09      	ldr	r3, [pc, #36]	; (1a000690 <Service+0x8c>)
1a00066a:	689b      	ldr	r3, [r3, #8]
1a00066c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
1a000670:	9202      	str	r2, [sp, #8]
1a000672:	9501      	str	r5, [sp, #4]
1a000674:	9300      	str	r3, [sp, #0]
1a000676:	2300      	movs	r3, #0
1a000678:	461a      	mov	r2, r3
1a00067a:	4601      	mov	r1, r0
1a00067c:	4620      	mov	r0, r4
1a00067e:	f000 f939 	bl	1a0008f4 <ModuleDinamicMemory_send2>
	}

	/*Libero memoria del buffer aux*/
	ModuleData.MemoryFreeFunction(Frame_parameters.BufferAux );
1a000682:	4b05      	ldr	r3, [pc, #20]	; (1a000698 <Service+0x94>)
1a000684:	699b      	ldr	r3, [r3, #24]
1a000686:	4a02      	ldr	r2, [pc, #8]	; (1a000690 <Service+0x8c>)
1a000688:	6890      	ldr	r0, [r2, #8]
1a00068a:	4798      	blx	r3
}
1a00068c:	b005      	add	sp, #20
1a00068e:	bd30      	pop	{r4, r5, pc}
1a000690:	10000000 	.word	0x10000000
1a000694:	10002fc4 	.word	0x10002fc4
1a000698:	10003034 	.word	0x10003034

1a00069c <Report>:
/*=================================================================================
 	 	 	 	 	 	 	     	Report  Heap = 1 or stack = 0
 =================================================================================*/

void Report( Module_Data_t *obj , char * XpointerQueue, uint8_t SelectHeapOrStack){
1a00069c:	b570      	push	{r4, r5, r6, lr}
1a00069e:	b08a      	sub	sp, #40	; 0x28
1a0006a0:	4606      	mov	r6, r0
1a0006a2:	4614      	mov	r4, r2
	char BuffA[20];
	char * PcStringToSend = NULL;


	PcStringToSend = NULL;
	BSend = ModuleDinamicMemory_receive(obj,XpointerQueue,  portMAX_DELAY);
1a0006a4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
1a0006a8:	f000 f93f 	bl	1a00092a <ModuleDinamicMemory_receive>
1a0006ac:	4605      	mov	r5, r0
	Heap_Stack = SelectHeapOrStack ? xPortGetFreeHeapSize() : uxTaskGetStackHighWaterMark(NULL);
1a0006ae:	2c00      	cmp	r4, #0
1a0006b0:	d02e      	beq.n	1a000710 <Report+0x74>
1a0006b2:	f000 fb07 	bl	1a000cc4 <xPortGetFreeHeapSize>

	itoa(Heap_Stack ,BuffA,10);
1a0006b6:	220a      	movs	r2, #10
1a0006b8:	a905      	add	r1, sp, #20
1a0006ba:	f7ff ff6f 	bl	1a00059c <itoa>

	/*Puntero donde se copia el stack*/

	if (PcStringToSend == NULL) PcStringToSend = obj->MemoryAllocFunction(strlen(BuffA)+ NUM_ELEMENTOS_REST_FRAME);
1a0006be:	6974      	ldr	r4, [r6, #20]
1a0006c0:	a805      	add	r0, sp, #20
1a0006c2:	f003 fd74 	bl	1a0041ae <strlen>
1a0006c6:	3006      	adds	r0, #6
1a0006c8:	2100      	movs	r1, #0
1a0006ca:	47a0      	blx	r4

	if(PcStringToSend != NULL){
1a0006cc:	4604      	mov	r4, r0
1a0006ce:	b160      	cbz	r0, 1a0006ea <Report+0x4e>
		sprintf(PcStringToSend+2,"%02d%s}",strlen(BuffA),BuffA);
1a0006d0:	a805      	add	r0, sp, #20
1a0006d2:	f003 fd6c 	bl	1a0041ae <strlen>
1a0006d6:	ab05      	add	r3, sp, #20
1a0006d8:	4602      	mov	r2, r0
1a0006da:	490f      	ldr	r1, [pc, #60]	; (1a000718 <Report+0x7c>)
1a0006dc:	1ca0      	adds	r0, r4, #2
1a0006de:	f003 fd31 	bl	1a004144 <siprintf>
		*PcStringToSend = *BSend;
1a0006e2:	782b      	ldrb	r3, [r5, #0]
1a0006e4:	7023      	strb	r3, [r4, #0]
		*(PcStringToSend + 1) = *(BSend+1);
1a0006e6:	786b      	ldrb	r3, [r5, #1]
1a0006e8:	7063      	strb	r3, [r4, #1]
	}

	// Enviar a cola de TaskTxUARt
	ModuleDinamicMemory_send2(obj,PcStringToSend,0,NULL,PcStringToSend, xPointerQueue_3,portMAX_DELAY);
1a0006ea:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
1a0006ee:	9302      	str	r3, [sp, #8]
1a0006f0:	4b0a      	ldr	r3, [pc, #40]	; (1a00071c <Report+0x80>)
1a0006f2:	681b      	ldr	r3, [r3, #0]
1a0006f4:	9301      	str	r3, [sp, #4]
1a0006f6:	9400      	str	r4, [sp, #0]
1a0006f8:	2300      	movs	r3, #0
1a0006fa:	461a      	mov	r2, r3
1a0006fc:	4621      	mov	r1, r4
1a0006fe:	4630      	mov	r0, r6
1a000700:	f000 f8f8 	bl	1a0008f4 <ModuleDinamicMemory_send2>

	/*Libera memoria dinamica {300} recibido del buffer*/
	ModuleData.MemoryFreeFunction( BSend);
1a000704:	4b06      	ldr	r3, [pc, #24]	; (1a000720 <Report+0x84>)
1a000706:	699b      	ldr	r3, [r3, #24]
1a000708:	4628      	mov	r0, r5
1a00070a:	4798      	blx	r3
}
1a00070c:	b00a      	add	sp, #40	; 0x28
1a00070e:	bd70      	pop	{r4, r5, r6, pc}
	Heap_Stack = SelectHeapOrStack ? xPortGetFreeHeapSize() : uxTaskGetStackHighWaterMark(NULL);
1a000710:	2000      	movs	r0, #0
1a000712:	f001 fb57 	bl	1a001dc4 <uxTaskGetStackHighWaterMark>
1a000716:	e7ce      	b.n	1a0006b6 <Report+0x1a>
1a000718:	1a004a04 	.word	0x1a004a04
1a00071c:	10002fb8 	.word	0x10002fb8
1a000720:	10003034 	.word	0x10003034

1a000724 <TaskService>:

/*=================================================================================
 	 	 	 	 	 	 	 	 | Tarea  |
 =================================================================================*/

void TaskService( void* taskParmPtr ){
1a000724:	b508      	push	{r3, lr}
	while(TRUE) {
		/*Notifica que llego trama Buena*/
		xTaskNotifyWait(0,0,NULL,portMAX_DELAY);
1a000726:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
1a00072a:	2200      	movs	r2, #0
1a00072c:	4611      	mov	r1, r2
1a00072e:	4610      	mov	r0, r2
1a000730:	f001 fbbc 	bl	1a001eac <xTaskNotifyWait>
		Service(&ModuleData);
1a000734:	4803      	ldr	r0, [pc, #12]	; (1a000744 <TaskService+0x20>)
1a000736:	f7ff ff65 	bl	1a000604 <Service>
		gpioToggle( LEDB );
1a00073a:	202a      	movs	r0, #42	; 0x2a
1a00073c:	f003 fab7 	bl	1a003cae <gpioToggle>
1a000740:	e7f1      	b.n	1a000726 <TaskService+0x2>
1a000742:	bf00      	nop
1a000744:	10003034 	.word	0x10003034

1a000748 <Task_ToMayusculas_OP0>:
}

/*=================================================================================
 	 	 	 	 	 	 	 	 | Tarea Mayusculizar |
 =================================================================================*/
void Task_ToMayusculas_OP0( void* taskParmPtr ){
1a000748:	b530      	push	{r4, r5, lr}
1a00074a:	b085      	sub	sp, #20
	char * rx;
	while(1){
		rx = ModuleDinamicMemory_receive(&ModuleData,xPointerQueue_OP0,  portMAX_DELAY);
1a00074c:	4c0c      	ldr	r4, [pc, #48]	; (1a000780 <Task_ToMayusculas_OP0+0x38>)
1a00074e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
1a000752:	4b0c      	ldr	r3, [pc, #48]	; (1a000784 <Task_ToMayusculas_OP0+0x3c>)
1a000754:	6819      	ldr	r1, [r3, #0]
1a000756:	4620      	mov	r0, r4
1a000758:	f000 f8e7 	bl	1a00092a <ModuleDinamicMemory_receive>
1a00075c:	4605      	mov	r5, r0
		packetToUpper(rx);
1a00075e:	f7ff fe6a 	bl	1a000436 <packetToUpper>
		// Enviar a cola de TaskTxUARt
		ModuleDinamicMemory_send2(&ModuleData,rx,0,NULL,rx, xPointerQueue_3,portMAX_DELAY);
1a000762:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
1a000766:	9302      	str	r3, [sp, #8]
1a000768:	4b07      	ldr	r3, [pc, #28]	; (1a000788 <Task_ToMayusculas_OP0+0x40>)
1a00076a:	681b      	ldr	r3, [r3, #0]
1a00076c:	9301      	str	r3, [sp, #4]
1a00076e:	9500      	str	r5, [sp, #0]
1a000770:	2300      	movs	r3, #0
1a000772:	461a      	mov	r2, r3
1a000774:	4629      	mov	r1, r5
1a000776:	4620      	mov	r0, r4
1a000778:	f000 f8bc 	bl	1a0008f4 <ModuleDinamicMemory_send2>
1a00077c:	e7e6      	b.n	1a00074c <Task_ToMayusculas_OP0+0x4>
1a00077e:	bf00      	nop
1a000780:	10003034 	.word	0x10003034
1a000784:	10003064 	.word	0x10003064
1a000788:	10002fb8 	.word	0x10002fb8

1a00078c <Task_ToMinusculas_OP1>:
}

/*=================================================================================
 	 	 	 	 	 	 	 	 | Tarea Minusculizar |
 =================================================================================*/
void Task_ToMinusculas_OP1( void* taskParmPtr ){
1a00078c:	b530      	push	{r4, r5, lr}
1a00078e:	b085      	sub	sp, #20
	char * rx;
	while(1){
		rx = ModuleDinamicMemory_receive(&ModuleData,xPointerQueue_OP1,  portMAX_DELAY);
1a000790:	4c0c      	ldr	r4, [pc, #48]	; (1a0007c4 <Task_ToMinusculas_OP1+0x38>)
1a000792:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
1a000796:	4b0c      	ldr	r3, [pc, #48]	; (1a0007c8 <Task_ToMinusculas_OP1+0x3c>)
1a000798:	6819      	ldr	r1, [r3, #0]
1a00079a:	4620      	mov	r0, r4
1a00079c:	f000 f8c5 	bl	1a00092a <ModuleDinamicMemory_receive>
1a0007a0:	4605      	mov	r5, r0
		packetToLower(rx);
1a0007a2:	f7ff fe29 	bl	1a0003f8 <packetToLower>
		// Enviar a cola de TaskTxUARt
		ModuleDinamicMemory_send2(&ModuleData,rx,0,NULL,rx, xPointerQueue_3,portMAX_DELAY);
1a0007a6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
1a0007aa:	9302      	str	r3, [sp, #8]
1a0007ac:	4b07      	ldr	r3, [pc, #28]	; (1a0007cc <Task_ToMinusculas_OP1+0x40>)
1a0007ae:	681b      	ldr	r3, [r3, #0]
1a0007b0:	9301      	str	r3, [sp, #4]
1a0007b2:	9500      	str	r5, [sp, #0]
1a0007b4:	2300      	movs	r3, #0
1a0007b6:	461a      	mov	r2, r3
1a0007b8:	4629      	mov	r1, r5
1a0007ba:	4620      	mov	r0, r4
1a0007bc:	f000 f89a 	bl	1a0008f4 <ModuleDinamicMemory_send2>
1a0007c0:	e7e6      	b.n	1a000790 <Task_ToMinusculas_OP1+0x4>
1a0007c2:	bf00      	nop
1a0007c4:	10003034 	.word	0x10003034
1a0007c8:	10003060 	.word	0x10003060
1a0007cc:	10002fb8 	.word	0x10002fb8

1a0007d0 <Task_ReportStack_OP2>:
}

/*=================================================================================
 	 	 	 	 	 	 	 	 | Tarea Reportar stack disponible |
 =================================================================================*/
void Task_ReportStack_OP2( void* taskParmPtr ){
1a0007d0:	b508      	push	{r3, lr}
	while(1){
		Report(&ModuleData,xPointerQueue_OP2,STACK_);
1a0007d2:	2200      	movs	r2, #0
1a0007d4:	4b02      	ldr	r3, [pc, #8]	; (1a0007e0 <Task_ReportStack_OP2+0x10>)
1a0007d6:	6819      	ldr	r1, [r3, #0]
1a0007d8:	4802      	ldr	r0, [pc, #8]	; (1a0007e4 <Task_ReportStack_OP2+0x14>)
1a0007da:	f7ff ff5f 	bl	1a00069c <Report>
1a0007de:	e7f8      	b.n	1a0007d2 <Task_ReportStack_OP2+0x2>
1a0007e0:	10002fb0 	.word	0x10002fb0
1a0007e4:	10003034 	.word	0x10003034

1a0007e8 <Task_ReportHeap_OP3>:
	}
}
/*=================================================================================
 	 	 	 	 	 	 	 	 | Tarea Reportar heap disponible |
 =================================================================================*/
void Task_ReportHeap_OP3( void* taskParmPtr ){
1a0007e8:	b508      	push	{r3, lr}
	while(1){
		Report(&ModuleData,xPointerQueue_OP3,HEAP_);
1a0007ea:	2201      	movs	r2, #1
1a0007ec:	4b02      	ldr	r3, [pc, #8]	; (1a0007f8 <Task_ReportHeap_OP3+0x10>)
1a0007ee:	6819      	ldr	r1, [r3, #0]
1a0007f0:	4802      	ldr	r0, [pc, #8]	; (1a0007fc <Task_ReportHeap_OP3+0x14>)
1a0007f2:	f7ff ff53 	bl	1a00069c <Report>
1a0007f6:	e7f8      	b.n	1a0007ea <Task_ReportHeap_OP3+0x2>
1a0007f8:	10002fc0 	.word	0x10002fc0
1a0007fc:	10003034 	.word	0x10003034

1a000800 <TaskTxUart>:
}

/*=================================================================================
 	 	 	 	 	 	 	 	 | Tarea tx |
 =================================================================================*/
void TaskTxUart( void* taskParmPtr ){
1a000800:	b510      	push	{r4, lr}
1a000802:	b09a      	sub	sp, #104	; 0x68
1a000804:	e003      	b.n	1a00080e <TaskTxUart+0xe>
		if( uartTxReady( UART_USB ) ){
			sprintf( Txbuffer, "%s",BSend);
			//Transmit_UART( 0 );   // La primera vez – con esto arranca
			uartWriteString(UART_USB,Txbuffer);
		}
		ModuleData.MemoryFreeFunction(BSend);
1a000806:	4b0e      	ldr	r3, [pc, #56]	; (1a000840 <TaskTxUart+0x40>)
1a000808:	699b      	ldr	r3, [r3, #24]
1a00080a:	4620      	mov	r0, r4
1a00080c:	4798      	blx	r3
		BSend = ModuleDinamicMemory_receive(&ModuleData, xPointerQueue_3, portMAX_DELAY);
1a00080e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
1a000812:	4b0c      	ldr	r3, [pc, #48]	; (1a000844 <TaskTxUart+0x44>)
1a000814:	6819      	ldr	r1, [r3, #0]
1a000816:	480a      	ldr	r0, [pc, #40]	; (1a000840 <TaskTxUart+0x40>)
1a000818:	f000 f887 	bl	1a00092a <ModuleDinamicMemory_receive>
1a00081c:	4604      	mov	r4, r0
		gpioToggle( LED3 );
1a00081e:	202d      	movs	r0, #45	; 0x2d
1a000820:	f003 fa45 	bl	1a003cae <gpioToggle>
		if( uartTxReady( UART_USB ) ){
1a000824:	2003      	movs	r0, #3
1a000826:	f002 ffc1 	bl	1a0037ac <uartTxReady>
1a00082a:	2800      	cmp	r0, #0
1a00082c:	d0eb      	beq.n	1a000806 <TaskTxUart+0x6>
			sprintf( Txbuffer, "%s",BSend);
1a00082e:	4621      	mov	r1, r4
1a000830:	a801      	add	r0, sp, #4
1a000832:	f003 fcb4 	bl	1a00419e <strcpy>
			uartWriteString(UART_USB,Txbuffer);
1a000836:	a901      	add	r1, sp, #4
1a000838:	2003      	movs	r0, #3
1a00083a:	f003 f822 	bl	1a003882 <uartWriteString>
1a00083e:	e7e2      	b.n	1a000806 <TaskTxUart+0x6>
1a000840:	10003034 	.word	0x10003034
1a000844:	10002fb8 	.word	0x10002fb8

1a000848 <CallbackRx>:
}

/*=================================================================================
 	 	 	 	 	 	 	 	 | Callback IT RX |
 =================================================================================*/
void CallbackRx( void *noUsado ){
1a000848:	b500      	push	{lr}
1a00084a:	b083      	sub	sp, #12

	UBaseType_t uxSavedInterruptStatus;
	BaseType_t xHigherPriorityTaskWoken = pdFALSE;

	volatile char c = uartRxRead( UART_USB );  /*Char received*/
1a00084c:	2003      	movs	r0, #3
1a00084e:	f002 ffb9 	bl	1a0037c4 <uartRxRead>
1a000852:	f88d 0007 	strb.w	r0, [sp, #7]

	/*Funcion pertenece al driver*/
	ModuleData.Add_IncommingFrameFunction(uxSavedInterruptStatus ,xHigherPriorityTaskWoken,c);
1a000856:	4b05      	ldr	r3, [pc, #20]	; (1a00086c <CallbackRx+0x24>)
1a000858:	6a1b      	ldr	r3, [r3, #32]
1a00085a:	f89d 2007 	ldrb.w	r2, [sp, #7]
1a00085e:	2100      	movs	r1, #0
1a000860:	4608      	mov	r0, r1
1a000862:	4798      	blx	r3

	portYIELD_FROM_ISR( xHigherPriorityTaskWoken );
}
1a000864:	b003      	add	sp, #12
1a000866:	f85d fb04 	ldr.w	pc, [sp], #4
1a00086a:	bf00      	nop
1a00086c:	10003034 	.word	0x10003034

1a000870 <QMPool_init>:
* The following example illustrates how to invoke QMPool_init():
* @include qmp_init.c
*/
void QMPool_init(QMPool * const me, void * const poolSto,
                 uint_fast32_t poolSize, uint_fast16_t blockSize)
{
1a000870:	b4f0      	push	{r4, r5, r6, r7}
    QFreeBlock *fb;
    uint_fast16_t nblocks;
	
    me->free_head = poolSto;
1a000872:	6001      	str	r1, [r0, #0]

    /* round up the blockSize to fit an integer # free blocks, no division */
    me->blockSize = (QMPoolSize)sizeof(QFreeBlock);  /* start with just one */
1a000874:	2404      	movs	r4, #4
1a000876:	8184      	strh	r4, [r0, #12]
    nblocks = (uint_fast16_t)1;/* #free blocks that fit in one memory block */
1a000878:	2601      	movs	r6, #1
    while (me->blockSize < (QMPoolSize)blockSize) {
1a00087a:	e002      	b.n	1a000882 <QMPool_init+0x12>
        me->blockSize += (QMPoolSize)sizeof(QFreeBlock);
1a00087c:	3404      	adds	r4, #4
1a00087e:	8184      	strh	r4, [r0, #12]
        ++nblocks;
1a000880:	3601      	adds	r6, #1
    while (me->blockSize < (QMPoolSize)blockSize) {
1a000882:	8984      	ldrh	r4, [r0, #12]
1a000884:	b29d      	uxth	r5, r3
1a000886:	42ac      	cmp	r4, r5
1a000888:	d3f8      	bcc.n	1a00087c <QMPool_init+0xc>
    }
    blockSize = (uint_fast16_t)me->blockSize; /* round-up to nearest block */
1a00088a:	4627      	mov	r7, r4

    /* chain all blocks together in a free-list... */
    poolSize -= (uint_fast32_t)blockSize; /* don't count the last block */
1a00088c:	1b14      	subs	r4, r2, r4
    me->nTot  = (QMPoolCtr)1;    /* the last block already in the pool */
1a00088e:	2301      	movs	r3, #1
1a000890:	81c3      	strh	r3, [r0, #14]
    fb = (QFreeBlock *)me->free_head; /* start at the head of the free list */
1a000892:	6803      	ldr	r3, [r0, #0]

    /* chain all blocks together in a free-list... */
    while (poolSize >= (uint_fast32_t)blockSize) {
1a000894:	e007      	b.n	1a0008a6 <QMPool_init+0x36>
        fb->next = &QF_PTR_AT_(fb, nblocks);/*point next link to next block */
1a000896:	eb03 0286 	add.w	r2, r3, r6, lsl #2
1a00089a:	601a      	str	r2, [r3, #0]
        fb = fb->next;           /* advance to the next block */
1a00089c:	681b      	ldr	r3, [r3, #0]
        poolSize -= (uint_fast32_t)blockSize; /* reduce available pool size */
1a00089e:	1be4      	subs	r4, r4, r7
        ++me->nTot;              /* increment the number of blocks so far */
1a0008a0:	89c5      	ldrh	r5, [r0, #14]
1a0008a2:	3501      	adds	r5, #1
1a0008a4:	81c5      	strh	r5, [r0, #14]
    while (poolSize >= (uint_fast32_t)blockSize) {
1a0008a6:	42bc      	cmp	r4, r7
1a0008a8:	d2f5      	bcs.n	1a000896 <QMPool_init+0x26>
    }

    fb->next  = (QFreeBlock *)0; /* the last link points to NULL */
1a0008aa:	2200      	movs	r2, #0
1a0008ac:	601a      	str	r2, [r3, #0]
    me->nFree = me->nTot;        /* all blocks are free */
1a0008ae:	89c2      	ldrh	r2, [r0, #14]
1a0008b0:	8202      	strh	r2, [r0, #16]
    me->nMin  = me->nTot;        /* the minimum number of free blocks */
1a0008b2:	8242      	strh	r2, [r0, #18]
    me->start = poolSto;         /* the original start this pool buffer */
1a0008b4:	6041      	str	r1, [r0, #4]
    me->end   = fb;              /* the last block in this pool */
1a0008b6:	6083      	str	r3, [r0, #8]
}
1a0008b8:	bcf0      	pop	{r4, r5, r6, r7}
1a0008ba:	4770      	bx	lr

1a0008bc <QMPools_inicializar>:
// Tamaño chico
static uint8_t mem_for_small_pool[SMALL_MEM_POOL_SPACE * BIG_MEM_POOL_BLOCK_QTY];  // Small pool storage (large qty blocks, of small space)
QMPool mem_pool_small;														       // Small pool ctrl-struct


void QMPools_inicializar(void){
1a0008bc:	b508      	push	{r3, lr}
	//Inicialización del Pool grande
	QMPool_init(&mem_pool_small,
1a0008be:	2340      	movs	r3, #64	; 0x40
1a0008c0:	f44f 6280 	mov.w	r2, #1024	; 0x400
1a0008c4:	4902      	ldr	r1, [pc, #8]	; (1a0008d0 <QMPools_inicializar+0x14>)
1a0008c6:	4803      	ldr	r0, [pc, #12]	; (1a0008d4 <QMPools_inicializar+0x18>)
1a0008c8:	f7ff ffd2 	bl	1a000870 <QMPool_init>
			mem_for_small_pool,
			sizeof(mem_for_small_pool),
			SMALL_MEM_POOL_BLOCK_QTY);
}
1a0008cc:	bd08      	pop	{r3, pc}
1a0008ce:	bf00      	nop
1a0008d0:	100000fc 	.word	0x100000fc
1a0008d4:	10003090 	.word	0x10003090

1a0008d8 <ModuleDinamicMemory_initialize>:

void ModuleDinamicMemory_initialize( Module_Data_t *obj , uint32_t MaxLength, xQueueSendFCN xQueueSendFCN,
		xQueueSendFromISRFCN xQueueSendFromISRFCN, xQueueReceiveFCN xQueueReceiveFCN, xQueueCreateFCN xQueueCreateFCN,
		 MemoryAllocFCN MemoryAllocFCN,MemoryFreeFCN MemoryFreeFCN, Add_IncommingFrameFCN Add_IncommingFrameFCN){

	obj->xMaxStringLength = MaxLength;
1a0008d8:	7101      	strb	r1, [r0, #4]
	obj->xQueueCreateFunction =xQueueCreateFCN;
1a0008da:	9901      	ldr	r1, [sp, #4]
1a0008dc:	61c1      	str	r1, [r0, #28]
	obj->xQueueSendFunction = xQueueSendFCN;
1a0008de:	6082      	str	r2, [r0, #8]
	obj->xQueueSendFromISRFunction = xQueueSendFromISRFCN;
1a0008e0:	60c3      	str	r3, [r0, #12]
	obj->xQueueReceiveFunction = xQueueReceiveFCN;
1a0008e2:	9b00      	ldr	r3, [sp, #0]
1a0008e4:	6103      	str	r3, [r0, #16]
	obj->MemoryAllocFunction = MemoryAllocFCN;
1a0008e6:	9b02      	ldr	r3, [sp, #8]
1a0008e8:	6143      	str	r3, [r0, #20]
	obj->MemoryFreeFunction = MemoryFreeFCN;
1a0008ea:	9b03      	ldr	r3, [sp, #12]
1a0008ec:	6183      	str	r3, [r0, #24]
	obj->Add_IncommingFrameFunction = Add_IncommingFrameFCN;
1a0008ee:	9b04      	ldr	r3, [sp, #16]
1a0008f0:	6203      	str	r3, [r0, #32]
}
1a0008f2:	4770      	bx	lr

1a0008f4 <ModuleDinamicMemory_send2>:

void ModuleDinamicMemory_send2( Module_Data_t *obj ,char *PcStringToSend, uint8_t Isr, long * const xHigherPriorityTaskWoken, char* pbuf ,char * XpointerQueue, uint32_t portMaxDelay){
1a0008f4:	b570      	push	{r4, r5, r6, lr}
1a0008f6:	b082      	sub	sp, #8
1a0008f8:	4604      	mov	r4, r0
1a0008fa:	9101      	str	r1, [sp, #4]
1a0008fc:	4615      	mov	r5, r2
1a0008fe:	461e      	mov	r6, r3
	if(PcStringToSend != NULL) strcpy(PcStringToSend ,pbuf);
1a000900:	b119      	cbz	r1, 1a00090a <ModuleDinamicMemory_send2+0x16>
1a000902:	4608      	mov	r0, r1
1a000904:	9906      	ldr	r1, [sp, #24]
1a000906:	f003 fc4a 	bl	1a00419e <strcpy>

	/*Si uso el enviar en una isr*/
	if(Isr) obj->xQueueSendFromISRFunction(XpointerQueue ,&PcStringToSend,xHigherPriorityTaskWoken, 0);
1a00090a:	b93d      	cbnz	r5, 1a00091c <ModuleDinamicMemory_send2+0x28>
	else  obj->xQueueSendFunction(XpointerQueue ,&PcStringToSend,portMaxDelay, 0);
1a00090c:	68a4      	ldr	r4, [r4, #8]
1a00090e:	2300      	movs	r3, #0
1a000910:	9a08      	ldr	r2, [sp, #32]
1a000912:	a901      	add	r1, sp, #4
1a000914:	9807      	ldr	r0, [sp, #28]
1a000916:	47a0      	blx	r4
}
1a000918:	b002      	add	sp, #8
1a00091a:	bd70      	pop	{r4, r5, r6, pc}
	if(Isr) obj->xQueueSendFromISRFunction(XpointerQueue ,&PcStringToSend,xHigherPriorityTaskWoken, 0);
1a00091c:	68e4      	ldr	r4, [r4, #12]
1a00091e:	2300      	movs	r3, #0
1a000920:	4632      	mov	r2, r6
1a000922:	a901      	add	r1, sp, #4
1a000924:	9807      	ldr	r0, [sp, #28]
1a000926:	47a0      	blx	r4
1a000928:	e7f6      	b.n	1a000918 <ModuleDinamicMemory_send2+0x24>

1a00092a <ModuleDinamicMemory_receive>:

char* ModuleDinamicMemory_receive(Module_Data_t *obj ,char * XpointerQueue, uint32_t portMaxDelay){
1a00092a:	b510      	push	{r4, lr}
1a00092c:	b082      	sub	sp, #8
1a00092e:	460c      	mov	r4, r1

	char* pbuffer; /*Dato recibido*/
	obj->xQueueReceiveFunction(XpointerQueue , &pbuffer, portMaxDelay );
1a000930:	6903      	ldr	r3, [r0, #16]
1a000932:	a901      	add	r1, sp, #4
1a000934:	4620      	mov	r0, r4
1a000936:	4798      	blx	r3
	return pbuffer;
}
1a000938:	9801      	ldr	r0, [sp, #4]
1a00093a:	b002      	add	sp, #8
1a00093c:	bd10      	pop	{r4, pc}
1a00093e:	Address 0x000000001a00093e is out of bounds.


1a000940 <main>:
#include "sapi.h"
#include "semphr.h"
#include "sapi_uart.h"


int main(void){
1a000940:	b500      	push	{lr}
1a000942:	b087      	sub	sp, #28

	boardConfig();
1a000944:	f003 f9cc 	bl	1a003ce0 <boardInit>

	QmPoolOrMalloc = eUseMalloc ;//eUseQMPool;
1a000948:	2400      	movs	r4, #0
1a00094a:	4b16      	ldr	r3, [pc, #88]	; (1a0009a4 <main+0x64>)
1a00094c:	701c      	strb	r4, [r3, #0]

	/*=======Config Uart===============================*/
	uartConfig(UART_USB, 115200);
1a00094e:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
1a000952:	2003      	movs	r0, #3
1a000954:	f002 ff4a 	bl	1a0037ec <uartInit>
	/*Callback interrupt*/
	uartCallbackSet(UART_USB, UART_RECEIVE, CallbackRx, NULL);
1a000958:	4623      	mov	r3, r4
1a00095a:	4a13      	ldr	r2, [pc, #76]	; (1a0009a8 <main+0x68>)
1a00095c:	4621      	mov	r1, r4
1a00095e:	2003      	movs	r0, #3
1a000960:	f002 fede 	bl	1a003720 <uartCallbackSet>
	/*Habilito todas las interrupciones de UART_USB*/
	uartInterrupt(UART_USB, true);
1a000964:	2101      	movs	r1, #1
1a000966:	2003      	movs	r0, #3
1a000968:	f002 fe92 	bl	1a003690 <uartInterrupt>

	semaphoreCreateAll();
1a00096c:	f7ff fe04 	bl	1a000578 <semaphoreCreateAll>
	QueueCreateAll();
1a000970:	f7ff fdd2 	bl	1a000518 <QueueCreateAll>
	TaskCreateAll();
1a000974:	f7ff fd7e 	bl	1a000474 <TaskCreateAll>
	QMPools_inicializar();
1a000978:	f7ff ffa0 	bl	1a0008bc <QMPools_inicializar>


	/*Inicializar Driver memoria dinamica*/
	ModuleDinamicMemory_initialize(&ModuleData,50,xQueueGenericSend,xQueueGenericSendFromISR, xQueueReceive,xQueueGenericCreate, Memory_Get_,Memory_Free_, Add_IncommingFrame);
1a00097c:	4b0b      	ldr	r3, [pc, #44]	; (1a0009ac <main+0x6c>)
1a00097e:	9304      	str	r3, [sp, #16]
1a000980:	4b0b      	ldr	r3, [pc, #44]	; (1a0009b0 <main+0x70>)
1a000982:	9303      	str	r3, [sp, #12]
1a000984:	4b0b      	ldr	r3, [pc, #44]	; (1a0009b4 <main+0x74>)
1a000986:	9302      	str	r3, [sp, #8]
1a000988:	4b0b      	ldr	r3, [pc, #44]	; (1a0009b8 <main+0x78>)
1a00098a:	9301      	str	r3, [sp, #4]
1a00098c:	4b0b      	ldr	r3, [pc, #44]	; (1a0009bc <main+0x7c>)
1a00098e:	9300      	str	r3, [sp, #0]
1a000990:	4b0b      	ldr	r3, [pc, #44]	; (1a0009c0 <main+0x80>)
1a000992:	4a0c      	ldr	r2, [pc, #48]	; (1a0009c4 <main+0x84>)
1a000994:	2132      	movs	r1, #50	; 0x32
1a000996:	480c      	ldr	r0, [pc, #48]	; (1a0009c8 <main+0x88>)
1a000998:	f7ff ff9e 	bl	1a0008d8 <ModuleDinamicMemory_initialize>

	/* Iniciar scheduler*/
	vTaskStartScheduler();
1a00099c:	f000 ff84 	bl	1a0018a8 <vTaskStartScheduler>
1a0009a0:	e7fe      	b.n	1a0009a0 <main+0x60>
1a0009a2:	bf00      	nop
1a0009a4:	10002fa8 	.word	0x10002fa8
1a0009a8:	1a000849 	.word	0x1a000849
1a0009ac:	1a000301 	.word	0x1a000301
1a0009b0:	1a000c55 	.word	0x1a000c55
1a0009b4:	1a000b39 	.word	0x1a000b39
1a0009b8:	1a000f47 	.word	0x1a000f47
1a0009bc:	1a00120d 	.word	0x1a00120d
1a0009c0:	1a00113f 	.word	0x1a00113f
1a0009c4:	1a000f95 	.word	0x1a000f95
1a0009c8:	10003034 	.word	0x10003034

1a0009cc <initialise_monitor_handles>:
1a0009cc:	4770      	bx	lr
1a0009ce:	Address 0x000000001a0009ce is out of bounds.


1a0009d0 <Reset_Handler>:
1a0009d0:	b510      	push	{r4, lr}
1a0009d2:	b672      	cpsid	i
1a0009d4:	4b19      	ldr	r3, [pc, #100]	; (1a000a3c <Reset_Handler+0x6c>)
1a0009d6:	4a1a      	ldr	r2, [pc, #104]	; (1a000a40 <Reset_Handler+0x70>)
1a0009d8:	601a      	str	r2, [r3, #0]
1a0009da:	3304      	adds	r3, #4
1a0009dc:	4a19      	ldr	r2, [pc, #100]	; (1a000a44 <Reset_Handler+0x74>)
1a0009de:	601a      	str	r2, [r3, #0]
1a0009e0:	2300      	movs	r3, #0
1a0009e2:	e005      	b.n	1a0009f0 <Reset_Handler+0x20>
1a0009e4:	4a18      	ldr	r2, [pc, #96]	; (1a000a48 <Reset_Handler+0x78>)
1a0009e6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
1a0009ea:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
1a0009ee:	3301      	adds	r3, #1
1a0009f0:	2b07      	cmp	r3, #7
1a0009f2:	d9f7      	bls.n	1a0009e4 <Reset_Handler+0x14>
1a0009f4:	b662      	cpsie	i
1a0009f6:	4b15      	ldr	r3, [pc, #84]	; (1a000a4c <Reset_Handler+0x7c>)
1a0009f8:	e007      	b.n	1a000a0a <Reset_Handler+0x3a>
1a0009fa:	f103 040c 	add.w	r4, r3, #12
1a0009fe:	689a      	ldr	r2, [r3, #8]
1a000a00:	6859      	ldr	r1, [r3, #4]
1a000a02:	6818      	ldr	r0, [r3, #0]
1a000a04:	f7ff fbc1 	bl	1a00018a <data_init>
1a000a08:	4623      	mov	r3, r4
1a000a0a:	4a11      	ldr	r2, [pc, #68]	; (1a000a50 <Reset_Handler+0x80>)
1a000a0c:	4293      	cmp	r3, r2
1a000a0e:	d3f4      	bcc.n	1a0009fa <Reset_Handler+0x2a>
1a000a10:	e006      	b.n	1a000a20 <Reset_Handler+0x50>
1a000a12:	461c      	mov	r4, r3
1a000a14:	6859      	ldr	r1, [r3, #4]
1a000a16:	f854 0b08 	ldr.w	r0, [r4], #8
1a000a1a:	f7ff fbc5 	bl	1a0001a8 <bss_init>
1a000a1e:	4623      	mov	r3, r4
1a000a20:	4a0c      	ldr	r2, [pc, #48]	; (1a000a54 <Reset_Handler+0x84>)
1a000a22:	4293      	cmp	r3, r2
1a000a24:	d3f5      	bcc.n	1a000a12 <Reset_Handler+0x42>
1a000a26:	f002 fdb7 	bl	1a003598 <SystemInit>
1a000a2a:	f003 fb53 	bl	1a0040d4 <__libc_init_array>
1a000a2e:	f7ff ffcd 	bl	1a0009cc <initialise_monitor_handles>
1a000a32:	f7ff ff85 	bl	1a000940 <main>
1a000a36:	bf30      	wfi
1a000a38:	e7fd      	b.n	1a000a36 <Reset_Handler+0x66>
1a000a3a:	bf00      	nop
1a000a3c:	40053100 	.word	0x40053100
1a000a40:	10df1000 	.word	0x10df1000
1a000a44:	01dff7ff 	.word	0x01dff7ff
1a000a48:	e000e280 	.word	0xe000e280
1a000a4c:	1a000114 	.word	0x1a000114
1a000a50:	1a000150 	.word	0x1a000150
1a000a54:	1a000178 	.word	0x1a000178

1a000a58 <_fini>:
1a000a58:	4770      	bx	lr

1a000a5a <_init>:
1a000a5a:	4770      	bx	lr

1a000a5c <_sbrk_r>:
1a000a5c:	4b05      	ldr	r3, [pc, #20]	; (1a000a74 <_sbrk_r+0x18>)
1a000a5e:	681b      	ldr	r3, [r3, #0]
1a000a60:	b123      	cbz	r3, 1a000a6c <_sbrk_r+0x10>
1a000a62:	4b04      	ldr	r3, [pc, #16]	; (1a000a74 <_sbrk_r+0x18>)
1a000a64:	6818      	ldr	r0, [r3, #0]
1a000a66:	4401      	add	r1, r0
1a000a68:	6019      	str	r1, [r3, #0]
1a000a6a:	4770      	bx	lr
1a000a6c:	4b01      	ldr	r3, [pc, #4]	; (1a000a74 <_sbrk_r+0x18>)
1a000a6e:	4a02      	ldr	r2, [pc, #8]	; (1a000a78 <_sbrk_r+0x1c>)
1a000a70:	601a      	str	r2, [r3, #0]
1a000a72:	e7f6      	b.n	1a000a62 <_sbrk_r+0x6>
1a000a74:	100004fc 	.word	0x100004fc
1a000a78:	100030ec 	.word	0x100030ec

1a000a7c <prvHeapInit>:
1a000a7c:	4a12      	ldr	r2, [pc, #72]	; (1a000ac8 <prvHeapInit+0x4c>)
1a000a7e:	f012 0f07 	tst.w	r2, #7
1a000a82:	d01e      	beq.n	1a000ac2 <prvHeapInit+0x46>
1a000a84:	1dd1      	adds	r1, r2, #7
1a000a86:	f021 0107 	bic.w	r1, r1, #7
1a000a8a:	f5c1 5300 	rsb	r3, r1, #8192	; 0x2000
1a000a8e:	4413      	add	r3, r2
1a000a90:	460a      	mov	r2, r1
1a000a92:	480e      	ldr	r0, [pc, #56]	; (1a000acc <prvHeapInit+0x50>)
1a000a94:	6002      	str	r2, [r0, #0]
1a000a96:	2100      	movs	r1, #0
1a000a98:	6041      	str	r1, [r0, #4]
1a000a9a:	4413      	add	r3, r2
1a000a9c:	3b08      	subs	r3, #8
1a000a9e:	f023 0307 	bic.w	r3, r3, #7
1a000aa2:	480b      	ldr	r0, [pc, #44]	; (1a000ad0 <prvHeapInit+0x54>)
1a000aa4:	6003      	str	r3, [r0, #0]
1a000aa6:	6059      	str	r1, [r3, #4]
1a000aa8:	6019      	str	r1, [r3, #0]
1a000aaa:	1a99      	subs	r1, r3, r2
1a000aac:	6051      	str	r1, [r2, #4]
1a000aae:	6013      	str	r3, [r2, #0]
1a000ab0:	4b08      	ldr	r3, [pc, #32]	; (1a000ad4 <prvHeapInit+0x58>)
1a000ab2:	6019      	str	r1, [r3, #0]
1a000ab4:	4b08      	ldr	r3, [pc, #32]	; (1a000ad8 <prvHeapInit+0x5c>)
1a000ab6:	6019      	str	r1, [r3, #0]
1a000ab8:	4b08      	ldr	r3, [pc, #32]	; (1a000adc <prvHeapInit+0x60>)
1a000aba:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
1a000abe:	601a      	str	r2, [r3, #0]
1a000ac0:	4770      	bx	lr
1a000ac2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
1a000ac6:	e7e4      	b.n	1a000a92 <prvHeapInit+0x16>
1a000ac8:	10000504 	.word	0x10000504
1a000acc:	10002510 	.word	0x10002510
1a000ad0:	10000500 	.word	0x10000500
1a000ad4:	1000250c 	.word	0x1000250c
1a000ad8:	10002508 	.word	0x10002508
1a000adc:	10002504 	.word	0x10002504

1a000ae0 <prvInsertBlockIntoFreeList>:
1a000ae0:	b410      	push	{r4}
1a000ae2:	4b13      	ldr	r3, [pc, #76]	; (1a000b30 <prvInsertBlockIntoFreeList+0x50>)
1a000ae4:	681a      	ldr	r2, [r3, #0]
1a000ae6:	4282      	cmp	r2, r0
1a000ae8:	d31b      	bcc.n	1a000b22 <prvInsertBlockIntoFreeList+0x42>
1a000aea:	6859      	ldr	r1, [r3, #4]
1a000aec:	185c      	adds	r4, r3, r1
1a000aee:	4284      	cmp	r4, r0
1a000af0:	d103      	bne.n	1a000afa <prvInsertBlockIntoFreeList+0x1a>
1a000af2:	6840      	ldr	r0, [r0, #4]
1a000af4:	4401      	add	r1, r0
1a000af6:	6059      	str	r1, [r3, #4]
1a000af8:	4618      	mov	r0, r3
1a000afa:	6841      	ldr	r1, [r0, #4]
1a000afc:	1844      	adds	r4, r0, r1
1a000afe:	42a2      	cmp	r2, r4
1a000b00:	d113      	bne.n	1a000b2a <prvInsertBlockIntoFreeList+0x4a>
1a000b02:	4c0c      	ldr	r4, [pc, #48]	; (1a000b34 <prvInsertBlockIntoFreeList+0x54>)
1a000b04:	6824      	ldr	r4, [r4, #0]
1a000b06:	42a2      	cmp	r2, r4
1a000b08:	d00d      	beq.n	1a000b26 <prvInsertBlockIntoFreeList+0x46>
1a000b0a:	6852      	ldr	r2, [r2, #4]
1a000b0c:	4411      	add	r1, r2
1a000b0e:	6041      	str	r1, [r0, #4]
1a000b10:	681a      	ldr	r2, [r3, #0]
1a000b12:	6812      	ldr	r2, [r2, #0]
1a000b14:	6002      	str	r2, [r0, #0]
1a000b16:	4298      	cmp	r0, r3
1a000b18:	d000      	beq.n	1a000b1c <prvInsertBlockIntoFreeList+0x3c>
1a000b1a:	6018      	str	r0, [r3, #0]
1a000b1c:	f85d 4b04 	ldr.w	r4, [sp], #4
1a000b20:	4770      	bx	lr
1a000b22:	4613      	mov	r3, r2
1a000b24:	e7de      	b.n	1a000ae4 <prvInsertBlockIntoFreeList+0x4>
1a000b26:	6004      	str	r4, [r0, #0]
1a000b28:	e7f5      	b.n	1a000b16 <prvInsertBlockIntoFreeList+0x36>
1a000b2a:	6002      	str	r2, [r0, #0]
1a000b2c:	e7f3      	b.n	1a000b16 <prvInsertBlockIntoFreeList+0x36>
1a000b2e:	bf00      	nop
1a000b30:	10002510 	.word	0x10002510
1a000b34:	10000500 	.word	0x10000500

1a000b38 <pvPortMalloc>:
1a000b38:	b570      	push	{r4, r5, r6, lr}
1a000b3a:	4604      	mov	r4, r0
1a000b3c:	f000 fefe 	bl	1a00193c <vTaskSuspendAll>
1a000b40:	4b3f      	ldr	r3, [pc, #252]	; (1a000c40 <pvPortMalloc+0x108>)
1a000b42:	681b      	ldr	r3, [r3, #0]
1a000b44:	b1a3      	cbz	r3, 1a000b70 <pvPortMalloc+0x38>
1a000b46:	4b3f      	ldr	r3, [pc, #252]	; (1a000c44 <pvPortMalloc+0x10c>)
1a000b48:	681b      	ldr	r3, [r3, #0]
1a000b4a:	421c      	tst	r4, r3
1a000b4c:	d013      	beq.n	1a000b76 <pvPortMalloc+0x3e>
1a000b4e:	f000 ff8f 	bl	1a001a70 <xTaskResumeAll>
1a000b52:	2600      	movs	r6, #0
1a000b54:	f000 fca5 	bl	1a0014a2 <vApplicationMallocFailedHook>
1a000b58:	f016 0f07 	tst.w	r6, #7
1a000b5c:	d06e      	beq.n	1a000c3c <pvPortMalloc+0x104>
1a000b5e:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a000b62:	f383 8811 	msr	BASEPRI, r3
1a000b66:	f3bf 8f6f 	isb	sy
1a000b6a:	f3bf 8f4f 	dsb	sy
1a000b6e:	e7fe      	b.n	1a000b6e <pvPortMalloc+0x36>
1a000b70:	f7ff ff84 	bl	1a000a7c <prvHeapInit>
1a000b74:	e7e7      	b.n	1a000b46 <pvPortMalloc+0xe>
1a000b76:	b194      	cbz	r4, 1a000b9e <pvPortMalloc+0x66>
1a000b78:	3408      	adds	r4, #8
1a000b7a:	f014 0f07 	tst.w	r4, #7
1a000b7e:	d00e      	beq.n	1a000b9e <pvPortMalloc+0x66>
1a000b80:	f024 0407 	bic.w	r4, r4, #7
1a000b84:	3408      	adds	r4, #8
1a000b86:	f004 0307 	and.w	r3, r4, #7
1a000b8a:	b143      	cbz	r3, 1a000b9e <pvPortMalloc+0x66>
1a000b8c:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a000b90:	f383 8811 	msr	BASEPRI, r3
1a000b94:	f3bf 8f6f 	isb	sy
1a000b98:	f3bf 8f4f 	dsb	sy
1a000b9c:	e7fe      	b.n	1a000b9c <pvPortMalloc+0x64>
1a000b9e:	b134      	cbz	r4, 1a000bae <pvPortMalloc+0x76>
1a000ba0:	4b29      	ldr	r3, [pc, #164]	; (1a000c48 <pvPortMalloc+0x110>)
1a000ba2:	681b      	ldr	r3, [r3, #0]
1a000ba4:	42a3      	cmp	r3, r4
1a000ba6:	d306      	bcc.n	1a000bb6 <pvPortMalloc+0x7e>
1a000ba8:	4b28      	ldr	r3, [pc, #160]	; (1a000c4c <pvPortMalloc+0x114>)
1a000baa:	681d      	ldr	r5, [r3, #0]
1a000bac:	e009      	b.n	1a000bc2 <pvPortMalloc+0x8a>
1a000bae:	f000 ff5f 	bl	1a001a70 <xTaskResumeAll>
1a000bb2:	2600      	movs	r6, #0
1a000bb4:	e7ce      	b.n	1a000b54 <pvPortMalloc+0x1c>
1a000bb6:	f000 ff5b 	bl	1a001a70 <xTaskResumeAll>
1a000bba:	2600      	movs	r6, #0
1a000bbc:	e7ca      	b.n	1a000b54 <pvPortMalloc+0x1c>
1a000bbe:	462b      	mov	r3, r5
1a000bc0:	4615      	mov	r5, r2
1a000bc2:	686a      	ldr	r2, [r5, #4]
1a000bc4:	42a2      	cmp	r2, r4
1a000bc6:	d202      	bcs.n	1a000bce <pvPortMalloc+0x96>
1a000bc8:	682a      	ldr	r2, [r5, #0]
1a000bca:	2a00      	cmp	r2, #0
1a000bcc:	d1f7      	bne.n	1a000bbe <pvPortMalloc+0x86>
1a000bce:	4a1c      	ldr	r2, [pc, #112]	; (1a000c40 <pvPortMalloc+0x108>)
1a000bd0:	6812      	ldr	r2, [r2, #0]
1a000bd2:	42aa      	cmp	r2, r5
1a000bd4:	d014      	beq.n	1a000c00 <pvPortMalloc+0xc8>
1a000bd6:	681e      	ldr	r6, [r3, #0]
1a000bd8:	3608      	adds	r6, #8
1a000bda:	682a      	ldr	r2, [r5, #0]
1a000bdc:	601a      	str	r2, [r3, #0]
1a000bde:	686b      	ldr	r3, [r5, #4]
1a000be0:	1b1b      	subs	r3, r3, r4
1a000be2:	2b10      	cmp	r3, #16
1a000be4:	d914      	bls.n	1a000c10 <pvPortMalloc+0xd8>
1a000be6:	1928      	adds	r0, r5, r4
1a000be8:	f010 0f07 	tst.w	r0, #7
1a000bec:	d00c      	beq.n	1a000c08 <pvPortMalloc+0xd0>
1a000bee:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a000bf2:	f383 8811 	msr	BASEPRI, r3
1a000bf6:	f3bf 8f6f 	isb	sy
1a000bfa:	f3bf 8f4f 	dsb	sy
1a000bfe:	e7fe      	b.n	1a000bfe <pvPortMalloc+0xc6>
1a000c00:	f000 ff36 	bl	1a001a70 <xTaskResumeAll>
1a000c04:	2600      	movs	r6, #0
1a000c06:	e7a5      	b.n	1a000b54 <pvPortMalloc+0x1c>
1a000c08:	6043      	str	r3, [r0, #4]
1a000c0a:	606c      	str	r4, [r5, #4]
1a000c0c:	f7ff ff68 	bl	1a000ae0 <prvInsertBlockIntoFreeList>
1a000c10:	686a      	ldr	r2, [r5, #4]
1a000c12:	490d      	ldr	r1, [pc, #52]	; (1a000c48 <pvPortMalloc+0x110>)
1a000c14:	680b      	ldr	r3, [r1, #0]
1a000c16:	1a9b      	subs	r3, r3, r2
1a000c18:	600b      	str	r3, [r1, #0]
1a000c1a:	490d      	ldr	r1, [pc, #52]	; (1a000c50 <pvPortMalloc+0x118>)
1a000c1c:	6809      	ldr	r1, [r1, #0]
1a000c1e:	428b      	cmp	r3, r1
1a000c20:	d201      	bcs.n	1a000c26 <pvPortMalloc+0xee>
1a000c22:	490b      	ldr	r1, [pc, #44]	; (1a000c50 <pvPortMalloc+0x118>)
1a000c24:	600b      	str	r3, [r1, #0]
1a000c26:	4b07      	ldr	r3, [pc, #28]	; (1a000c44 <pvPortMalloc+0x10c>)
1a000c28:	681b      	ldr	r3, [r3, #0]
1a000c2a:	4313      	orrs	r3, r2
1a000c2c:	606b      	str	r3, [r5, #4]
1a000c2e:	2300      	movs	r3, #0
1a000c30:	602b      	str	r3, [r5, #0]
1a000c32:	f000 ff1d 	bl	1a001a70 <xTaskResumeAll>
1a000c36:	2e00      	cmp	r6, #0
1a000c38:	d18e      	bne.n	1a000b58 <pvPortMalloc+0x20>
1a000c3a:	e78b      	b.n	1a000b54 <pvPortMalloc+0x1c>
1a000c3c:	4630      	mov	r0, r6
1a000c3e:	bd70      	pop	{r4, r5, r6, pc}
1a000c40:	10000500 	.word	0x10000500
1a000c44:	10002504 	.word	0x10002504
1a000c48:	10002508 	.word	0x10002508
1a000c4c:	10002510 	.word	0x10002510
1a000c50:	1000250c 	.word	0x1000250c

1a000c54 <vPortFree>:
1a000c54:	b380      	cbz	r0, 1a000cb8 <vPortFree+0x64>
1a000c56:	b538      	push	{r3, r4, r5, lr}
1a000c58:	4604      	mov	r4, r0
1a000c5a:	f1a0 0508 	sub.w	r5, r0, #8
1a000c5e:	f850 2c04 	ldr.w	r2, [r0, #-4]
1a000c62:	4916      	ldr	r1, [pc, #88]	; (1a000cbc <vPortFree+0x68>)
1a000c64:	6809      	ldr	r1, [r1, #0]
1a000c66:	420a      	tst	r2, r1
1a000c68:	d108      	bne.n	1a000c7c <vPortFree+0x28>
1a000c6a:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a000c6e:	f383 8811 	msr	BASEPRI, r3
1a000c72:	f3bf 8f6f 	isb	sy
1a000c76:	f3bf 8f4f 	dsb	sy
1a000c7a:	e7fe      	b.n	1a000c7a <vPortFree+0x26>
1a000c7c:	f850 0c08 	ldr.w	r0, [r0, #-8]
1a000c80:	b140      	cbz	r0, 1a000c94 <vPortFree+0x40>
1a000c82:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a000c86:	f383 8811 	msr	BASEPRI, r3
1a000c8a:	f3bf 8f6f 	isb	sy
1a000c8e:	f3bf 8f4f 	dsb	sy
1a000c92:	e7fe      	b.n	1a000c92 <vPortFree+0x3e>
1a000c94:	ea22 0201 	bic.w	r2, r2, r1
1a000c98:	f844 2c04 	str.w	r2, [r4, #-4]
1a000c9c:	f000 fe4e 	bl	1a00193c <vTaskSuspendAll>
1a000ca0:	f854 1c04 	ldr.w	r1, [r4, #-4]
1a000ca4:	4a06      	ldr	r2, [pc, #24]	; (1a000cc0 <vPortFree+0x6c>)
1a000ca6:	6813      	ldr	r3, [r2, #0]
1a000ca8:	440b      	add	r3, r1
1a000caa:	6013      	str	r3, [r2, #0]
1a000cac:	4628      	mov	r0, r5
1a000cae:	f7ff ff17 	bl	1a000ae0 <prvInsertBlockIntoFreeList>
1a000cb2:	f000 fedd 	bl	1a001a70 <xTaskResumeAll>
1a000cb6:	bd38      	pop	{r3, r4, r5, pc}
1a000cb8:	4770      	bx	lr
1a000cba:	bf00      	nop
1a000cbc:	10002504 	.word	0x10002504
1a000cc0:	10002508 	.word	0x10002508

1a000cc4 <xPortGetFreeHeapSize>:
1a000cc4:	4b01      	ldr	r3, [pc, #4]	; (1a000ccc <xPortGetFreeHeapSize+0x8>)
1a000cc6:	6818      	ldr	r0, [r3, #0]
1a000cc8:	4770      	bx	lr
1a000cca:	bf00      	nop
1a000ccc:	10002508 	.word	0x10002508

1a000cd0 <prvIsQueueFull>:
1a000cd0:	b510      	push	{r4, lr}
1a000cd2:	4604      	mov	r4, r0
1a000cd4:	f001 fc8e 	bl	1a0025f4 <vPortEnterCritical>
1a000cd8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
1a000cda:	6be3      	ldr	r3, [r4, #60]	; 0x3c
1a000cdc:	429a      	cmp	r2, r3
1a000cde:	d004      	beq.n	1a000cea <prvIsQueueFull+0x1a>
1a000ce0:	2400      	movs	r4, #0
1a000ce2:	f001 fca9 	bl	1a002638 <vPortExitCritical>
1a000ce6:	4620      	mov	r0, r4
1a000ce8:	bd10      	pop	{r4, pc}
1a000cea:	2401      	movs	r4, #1
1a000cec:	e7f9      	b.n	1a000ce2 <prvIsQueueFull+0x12>

1a000cee <prvIsQueueEmpty>:
1a000cee:	b510      	push	{r4, lr}
1a000cf0:	4604      	mov	r4, r0
1a000cf2:	f001 fc7f 	bl	1a0025f4 <vPortEnterCritical>
1a000cf6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
1a000cf8:	b123      	cbz	r3, 1a000d04 <prvIsQueueEmpty+0x16>
1a000cfa:	2400      	movs	r4, #0
1a000cfc:	f001 fc9c 	bl	1a002638 <vPortExitCritical>
1a000d00:	4620      	mov	r0, r4
1a000d02:	bd10      	pop	{r4, pc}
1a000d04:	2401      	movs	r4, #1
1a000d06:	e7f9      	b.n	1a000cfc <prvIsQueueEmpty+0xe>

1a000d08 <prvCopyDataToQueue>:
1a000d08:	b570      	push	{r4, r5, r6, lr}
1a000d0a:	4604      	mov	r4, r0
1a000d0c:	4616      	mov	r6, r2
1a000d0e:	6b85      	ldr	r5, [r0, #56]	; 0x38
1a000d10:	6c02      	ldr	r2, [r0, #64]	; 0x40
1a000d12:	b95a      	cbnz	r2, 1a000d2c <prvCopyDataToQueue+0x24>
1a000d14:	6803      	ldr	r3, [r0, #0]
1a000d16:	b11b      	cbz	r3, 1a000d20 <prvCopyDataToQueue+0x18>
1a000d18:	2000      	movs	r0, #0
1a000d1a:	3501      	adds	r5, #1
1a000d1c:	63a5      	str	r5, [r4, #56]	; 0x38
1a000d1e:	bd70      	pop	{r4, r5, r6, pc}
1a000d20:	6840      	ldr	r0, [r0, #4]
1a000d22:	f001 f86b 	bl	1a001dfc <xTaskPriorityDisinherit>
1a000d26:	2300      	movs	r3, #0
1a000d28:	6063      	str	r3, [r4, #4]
1a000d2a:	e7f6      	b.n	1a000d1a <prvCopyDataToQueue+0x12>
1a000d2c:	b96e      	cbnz	r6, 1a000d4a <prvCopyDataToQueue+0x42>
1a000d2e:	6880      	ldr	r0, [r0, #8]
1a000d30:	f003 f9f4 	bl	1a00411c <memcpy>
1a000d34:	6c22      	ldr	r2, [r4, #64]	; 0x40
1a000d36:	68a3      	ldr	r3, [r4, #8]
1a000d38:	4413      	add	r3, r2
1a000d3a:	60a3      	str	r3, [r4, #8]
1a000d3c:	6862      	ldr	r2, [r4, #4]
1a000d3e:	4293      	cmp	r3, r2
1a000d40:	d319      	bcc.n	1a000d76 <prvCopyDataToQueue+0x6e>
1a000d42:	6823      	ldr	r3, [r4, #0]
1a000d44:	60a3      	str	r3, [r4, #8]
1a000d46:	2000      	movs	r0, #0
1a000d48:	e7e7      	b.n	1a000d1a <prvCopyDataToQueue+0x12>
1a000d4a:	68c0      	ldr	r0, [r0, #12]
1a000d4c:	f003 f9e6 	bl	1a00411c <memcpy>
1a000d50:	6c22      	ldr	r2, [r4, #64]	; 0x40
1a000d52:	4252      	negs	r2, r2
1a000d54:	68e3      	ldr	r3, [r4, #12]
1a000d56:	4413      	add	r3, r2
1a000d58:	60e3      	str	r3, [r4, #12]
1a000d5a:	6821      	ldr	r1, [r4, #0]
1a000d5c:	428b      	cmp	r3, r1
1a000d5e:	d202      	bcs.n	1a000d66 <prvCopyDataToQueue+0x5e>
1a000d60:	6863      	ldr	r3, [r4, #4]
1a000d62:	441a      	add	r2, r3
1a000d64:	60e2      	str	r2, [r4, #12]
1a000d66:	2e02      	cmp	r6, #2
1a000d68:	d001      	beq.n	1a000d6e <prvCopyDataToQueue+0x66>
1a000d6a:	2000      	movs	r0, #0
1a000d6c:	e7d5      	b.n	1a000d1a <prvCopyDataToQueue+0x12>
1a000d6e:	b125      	cbz	r5, 1a000d7a <prvCopyDataToQueue+0x72>
1a000d70:	3d01      	subs	r5, #1
1a000d72:	2000      	movs	r0, #0
1a000d74:	e7d1      	b.n	1a000d1a <prvCopyDataToQueue+0x12>
1a000d76:	2000      	movs	r0, #0
1a000d78:	e7cf      	b.n	1a000d1a <prvCopyDataToQueue+0x12>
1a000d7a:	2000      	movs	r0, #0
1a000d7c:	e7cd      	b.n	1a000d1a <prvCopyDataToQueue+0x12>

1a000d7e <prvCopyDataFromQueue>:
1a000d7e:	6c02      	ldr	r2, [r0, #64]	; 0x40
1a000d80:	b172      	cbz	r2, 1a000da0 <prvCopyDataFromQueue+0x22>
1a000d82:	b510      	push	{r4, lr}
1a000d84:	68c3      	ldr	r3, [r0, #12]
1a000d86:	4413      	add	r3, r2
1a000d88:	60c3      	str	r3, [r0, #12]
1a000d8a:	6844      	ldr	r4, [r0, #4]
1a000d8c:	42a3      	cmp	r3, r4
1a000d8e:	d301      	bcc.n	1a000d94 <prvCopyDataFromQueue+0x16>
1a000d90:	6803      	ldr	r3, [r0, #0]
1a000d92:	60c3      	str	r3, [r0, #12]
1a000d94:	460c      	mov	r4, r1
1a000d96:	68c1      	ldr	r1, [r0, #12]
1a000d98:	4620      	mov	r0, r4
1a000d9a:	f003 f9bf 	bl	1a00411c <memcpy>
1a000d9e:	bd10      	pop	{r4, pc}
1a000da0:	4770      	bx	lr

1a000da2 <prvUnlockQueue>:
1a000da2:	b538      	push	{r3, r4, r5, lr}
1a000da4:	4605      	mov	r5, r0
1a000da6:	f001 fc25 	bl	1a0025f4 <vPortEnterCritical>
1a000daa:	f895 4045 	ldrb.w	r4, [r5, #69]	; 0x45
1a000dae:	b264      	sxtb	r4, r4
1a000db0:	e003      	b.n	1a000dba <prvUnlockQueue+0x18>
1a000db2:	f001 f801 	bl	1a001db8 <vTaskMissedYield>
1a000db6:	3c01      	subs	r4, #1
1a000db8:	b264      	sxtb	r4, r4
1a000dba:	2c00      	cmp	r4, #0
1a000dbc:	dd08      	ble.n	1a000dd0 <prvUnlockQueue+0x2e>
1a000dbe:	6a6b      	ldr	r3, [r5, #36]	; 0x24
1a000dc0:	b133      	cbz	r3, 1a000dd0 <prvUnlockQueue+0x2e>
1a000dc2:	f105 0024 	add.w	r0, r5, #36	; 0x24
1a000dc6:	f000 ff65 	bl	1a001c94 <xTaskRemoveFromEventList>
1a000dca:	2800      	cmp	r0, #0
1a000dcc:	d0f3      	beq.n	1a000db6 <prvUnlockQueue+0x14>
1a000dce:	e7f0      	b.n	1a000db2 <prvUnlockQueue+0x10>
1a000dd0:	23ff      	movs	r3, #255	; 0xff
1a000dd2:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
1a000dd6:	f001 fc2f 	bl	1a002638 <vPortExitCritical>
1a000dda:	f001 fc0b 	bl	1a0025f4 <vPortEnterCritical>
1a000dde:	f895 4044 	ldrb.w	r4, [r5, #68]	; 0x44
1a000de2:	b264      	sxtb	r4, r4
1a000de4:	e003      	b.n	1a000dee <prvUnlockQueue+0x4c>
1a000de6:	f000 ffe7 	bl	1a001db8 <vTaskMissedYield>
1a000dea:	3c01      	subs	r4, #1
1a000dec:	b264      	sxtb	r4, r4
1a000dee:	2c00      	cmp	r4, #0
1a000df0:	dd08      	ble.n	1a000e04 <prvUnlockQueue+0x62>
1a000df2:	692b      	ldr	r3, [r5, #16]
1a000df4:	b133      	cbz	r3, 1a000e04 <prvUnlockQueue+0x62>
1a000df6:	f105 0010 	add.w	r0, r5, #16
1a000dfa:	f000 ff4b 	bl	1a001c94 <xTaskRemoveFromEventList>
1a000dfe:	2800      	cmp	r0, #0
1a000e00:	d0f3      	beq.n	1a000dea <prvUnlockQueue+0x48>
1a000e02:	e7f0      	b.n	1a000de6 <prvUnlockQueue+0x44>
1a000e04:	23ff      	movs	r3, #255	; 0xff
1a000e06:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
1a000e0a:	f001 fc15 	bl	1a002638 <vPortExitCritical>
1a000e0e:	bd38      	pop	{r3, r4, r5, pc}

1a000e10 <xQueueGenericReset>:
1a000e10:	b538      	push	{r3, r4, r5, lr}
1a000e12:	b940      	cbnz	r0, 1a000e26 <xQueueGenericReset+0x16>
1a000e14:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a000e18:	f383 8811 	msr	BASEPRI, r3
1a000e1c:	f3bf 8f6f 	isb	sy
1a000e20:	f3bf 8f4f 	dsb	sy
1a000e24:	e7fe      	b.n	1a000e24 <xQueueGenericReset+0x14>
1a000e26:	4604      	mov	r4, r0
1a000e28:	460d      	mov	r5, r1
1a000e2a:	f001 fbe3 	bl	1a0025f4 <vPortEnterCritical>
1a000e2e:	6821      	ldr	r1, [r4, #0]
1a000e30:	6be2      	ldr	r2, [r4, #60]	; 0x3c
1a000e32:	6c23      	ldr	r3, [r4, #64]	; 0x40
1a000e34:	fb03 1002 	mla	r0, r3, r2, r1
1a000e38:	6060      	str	r0, [r4, #4]
1a000e3a:	2000      	movs	r0, #0
1a000e3c:	63a0      	str	r0, [r4, #56]	; 0x38
1a000e3e:	60a1      	str	r1, [r4, #8]
1a000e40:	3a01      	subs	r2, #1
1a000e42:	fb02 1303 	mla	r3, r2, r3, r1
1a000e46:	60e3      	str	r3, [r4, #12]
1a000e48:	23ff      	movs	r3, #255	; 0xff
1a000e4a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
1a000e4e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
1a000e52:	b9a5      	cbnz	r5, 1a000e7e <xQueueGenericReset+0x6e>
1a000e54:	6923      	ldr	r3, [r4, #16]
1a000e56:	b91b      	cbnz	r3, 1a000e60 <xQueueGenericReset+0x50>
1a000e58:	f001 fbee 	bl	1a002638 <vPortExitCritical>
1a000e5c:	2001      	movs	r0, #1
1a000e5e:	bd38      	pop	{r3, r4, r5, pc}
1a000e60:	f104 0010 	add.w	r0, r4, #16
1a000e64:	f000 ff16 	bl	1a001c94 <xTaskRemoveFromEventList>
1a000e68:	2800      	cmp	r0, #0
1a000e6a:	d0f5      	beq.n	1a000e58 <xQueueGenericReset+0x48>
1a000e6c:	4b08      	ldr	r3, [pc, #32]	; (1a000e90 <xQueueGenericReset+0x80>)
1a000e6e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
1a000e72:	601a      	str	r2, [r3, #0]
1a000e74:	f3bf 8f4f 	dsb	sy
1a000e78:	f3bf 8f6f 	isb	sy
1a000e7c:	e7ec      	b.n	1a000e58 <xQueueGenericReset+0x48>
1a000e7e:	f104 0010 	add.w	r0, r4, #16
1a000e82:	f000 faac 	bl	1a0013de <vListInitialise>
1a000e86:	f104 0024 	add.w	r0, r4, #36	; 0x24
1a000e8a:	f000 faa8 	bl	1a0013de <vListInitialise>
1a000e8e:	e7e3      	b.n	1a000e58 <xQueueGenericReset+0x48>
1a000e90:	e000ed04 	.word	0xe000ed04

1a000e94 <prvInitialiseNewQueue>:
1a000e94:	b538      	push	{r3, r4, r5, lr}
1a000e96:	461d      	mov	r5, r3
1a000e98:	9c04      	ldr	r4, [sp, #16]
1a000e9a:	460b      	mov	r3, r1
1a000e9c:	b149      	cbz	r1, 1a000eb2 <prvInitialiseNewQueue+0x1e>
1a000e9e:	6022      	str	r2, [r4, #0]
1a000ea0:	63e0      	str	r0, [r4, #60]	; 0x3c
1a000ea2:	6423      	str	r3, [r4, #64]	; 0x40
1a000ea4:	2101      	movs	r1, #1
1a000ea6:	4620      	mov	r0, r4
1a000ea8:	f7ff ffb2 	bl	1a000e10 <xQueueGenericReset>
1a000eac:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
1a000eb0:	bd38      	pop	{r3, r4, r5, pc}
1a000eb2:	6024      	str	r4, [r4, #0]
1a000eb4:	e7f4      	b.n	1a000ea0 <prvInitialiseNewQueue+0xc>

1a000eb6 <xQueueGenericCreateStatic>:
1a000eb6:	b940      	cbnz	r0, 1a000eca <xQueueGenericCreateStatic+0x14>
1a000eb8:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a000ebc:	f383 8811 	msr	BASEPRI, r3
1a000ec0:	f3bf 8f6f 	isb	sy
1a000ec4:	f3bf 8f4f 	dsb	sy
1a000ec8:	e7fe      	b.n	1a000ec8 <xQueueGenericCreateStatic+0x12>
1a000eca:	b510      	push	{r4, lr}
1a000ecc:	b084      	sub	sp, #16
1a000ece:	4604      	mov	r4, r0
1a000ed0:	b153      	cbz	r3, 1a000ee8 <xQueueGenericCreateStatic+0x32>
1a000ed2:	b192      	cbz	r2, 1a000efa <xQueueGenericCreateStatic+0x44>
1a000ed4:	b989      	cbnz	r1, 1a000efa <xQueueGenericCreateStatic+0x44>
1a000ed6:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a000eda:	f383 8811 	msr	BASEPRI, r3
1a000ede:	f3bf 8f6f 	isb	sy
1a000ee2:	f3bf 8f4f 	dsb	sy
1a000ee6:	e7fe      	b.n	1a000ee6 <xQueueGenericCreateStatic+0x30>
1a000ee8:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a000eec:	f383 8811 	msr	BASEPRI, r3
1a000ef0:	f3bf 8f6f 	isb	sy
1a000ef4:	f3bf 8f4f 	dsb	sy
1a000ef8:	e7fe      	b.n	1a000ef8 <xQueueGenericCreateStatic+0x42>
1a000efa:	b94a      	cbnz	r2, 1a000f10 <xQueueGenericCreateStatic+0x5a>
1a000efc:	b141      	cbz	r1, 1a000f10 <xQueueGenericCreateStatic+0x5a>
1a000efe:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a000f02:	f383 8811 	msr	BASEPRI, r3
1a000f06:	f3bf 8f6f 	isb	sy
1a000f0a:	f3bf 8f4f 	dsb	sy
1a000f0e:	e7fe      	b.n	1a000f0e <xQueueGenericCreateStatic+0x58>
1a000f10:	2050      	movs	r0, #80	; 0x50
1a000f12:	9003      	str	r0, [sp, #12]
1a000f14:	9803      	ldr	r0, [sp, #12]
1a000f16:	2850      	cmp	r0, #80	; 0x50
1a000f18:	d008      	beq.n	1a000f2c <xQueueGenericCreateStatic+0x76>
1a000f1a:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a000f1e:	f383 8811 	msr	BASEPRI, r3
1a000f22:	f3bf 8f6f 	isb	sy
1a000f26:	f3bf 8f4f 	dsb	sy
1a000f2a:	e7fe      	b.n	1a000f2a <xQueueGenericCreateStatic+0x74>
1a000f2c:	4620      	mov	r0, r4
1a000f2e:	461c      	mov	r4, r3
1a000f30:	2301      	movs	r3, #1
1a000f32:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
1a000f36:	9400      	str	r4, [sp, #0]
1a000f38:	f89d 3018 	ldrb.w	r3, [sp, #24]
1a000f3c:	f7ff ffaa 	bl	1a000e94 <prvInitialiseNewQueue>
1a000f40:	4620      	mov	r0, r4
1a000f42:	b004      	add	sp, #16
1a000f44:	bd10      	pop	{r4, pc}

1a000f46 <xQueueGenericCreate>:
1a000f46:	b940      	cbnz	r0, 1a000f5a <xQueueGenericCreate+0x14>
1a000f48:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a000f4c:	f383 8811 	msr	BASEPRI, r3
1a000f50:	f3bf 8f6f 	isb	sy
1a000f54:	f3bf 8f4f 	dsb	sy
1a000f58:	e7fe      	b.n	1a000f58 <xQueueGenericCreate+0x12>
1a000f5a:	b5f0      	push	{r4, r5, r6, r7, lr}
1a000f5c:	b083      	sub	sp, #12
1a000f5e:	4606      	mov	r6, r0
1a000f60:	b111      	cbz	r1, 1a000f68 <xQueueGenericCreate+0x22>
1a000f62:	fb01 f000 	mul.w	r0, r1, r0
1a000f66:	e000      	b.n	1a000f6a <xQueueGenericCreate+0x24>
1a000f68:	2000      	movs	r0, #0
1a000f6a:	4617      	mov	r7, r2
1a000f6c:	460c      	mov	r4, r1
1a000f6e:	3050      	adds	r0, #80	; 0x50
1a000f70:	f7ff fde2 	bl	1a000b38 <pvPortMalloc>
1a000f74:	4605      	mov	r5, r0
1a000f76:	b150      	cbz	r0, 1a000f8e <xQueueGenericCreate+0x48>
1a000f78:	2300      	movs	r3, #0
1a000f7a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
1a000f7e:	9000      	str	r0, [sp, #0]
1a000f80:	463b      	mov	r3, r7
1a000f82:	f100 0250 	add.w	r2, r0, #80	; 0x50
1a000f86:	4621      	mov	r1, r4
1a000f88:	4630      	mov	r0, r6
1a000f8a:	f7ff ff83 	bl	1a000e94 <prvInitialiseNewQueue>
1a000f8e:	4628      	mov	r0, r5
1a000f90:	b003      	add	sp, #12
1a000f92:	bdf0      	pop	{r4, r5, r6, r7, pc}

1a000f94 <xQueueGenericSend>:
1a000f94:	b5f0      	push	{r4, r5, r6, r7, lr}
1a000f96:	b085      	sub	sp, #20
1a000f98:	9201      	str	r2, [sp, #4]
1a000f9a:	b160      	cbz	r0, 1a000fb6 <xQueueGenericSend+0x22>
1a000f9c:	4604      	mov	r4, r0
1a000f9e:	b999      	cbnz	r1, 1a000fc8 <xQueueGenericSend+0x34>
1a000fa0:	6c02      	ldr	r2, [r0, #64]	; 0x40
1a000fa2:	b18a      	cbz	r2, 1a000fc8 <xQueueGenericSend+0x34>
1a000fa4:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a000fa8:	f383 8811 	msr	BASEPRI, r3
1a000fac:	f3bf 8f6f 	isb	sy
1a000fb0:	f3bf 8f4f 	dsb	sy
1a000fb4:	e7fe      	b.n	1a000fb4 <xQueueGenericSend+0x20>
1a000fb6:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a000fba:	f383 8811 	msr	BASEPRI, r3
1a000fbe:	f3bf 8f6f 	isb	sy
1a000fc2:	f3bf 8f4f 	dsb	sy
1a000fc6:	e7fe      	b.n	1a000fc6 <xQueueGenericSend+0x32>
1a000fc8:	2b02      	cmp	r3, #2
1a000fca:	d10b      	bne.n	1a000fe4 <xQueueGenericSend+0x50>
1a000fcc:	6be2      	ldr	r2, [r4, #60]	; 0x3c
1a000fce:	2a01      	cmp	r2, #1
1a000fd0:	d008      	beq.n	1a000fe4 <xQueueGenericSend+0x50>
1a000fd2:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a000fd6:	f383 8811 	msr	BASEPRI, r3
1a000fda:	f3bf 8f6f 	isb	sy
1a000fde:	f3bf 8f4f 	dsb	sy
1a000fe2:	e7fe      	b.n	1a000fe2 <xQueueGenericSend+0x4e>
1a000fe4:	461e      	mov	r6, r3
1a000fe6:	460f      	mov	r7, r1
1a000fe8:	f000 fef8 	bl	1a001ddc <xTaskGetSchedulerState>
1a000fec:	b950      	cbnz	r0, 1a001004 <xQueueGenericSend+0x70>
1a000fee:	9b01      	ldr	r3, [sp, #4]
1a000ff0:	b153      	cbz	r3, 1a001008 <xQueueGenericSend+0x74>
1a000ff2:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a000ff6:	f383 8811 	msr	BASEPRI, r3
1a000ffa:	f3bf 8f6f 	isb	sy
1a000ffe:	f3bf 8f4f 	dsb	sy
1a001002:	e7fe      	b.n	1a001002 <xQueueGenericSend+0x6e>
1a001004:	2500      	movs	r5, #0
1a001006:	e03a      	b.n	1a00107e <xQueueGenericSend+0xea>
1a001008:	2500      	movs	r5, #0
1a00100a:	e038      	b.n	1a00107e <xQueueGenericSend+0xea>
1a00100c:	4632      	mov	r2, r6
1a00100e:	4639      	mov	r1, r7
1a001010:	4620      	mov	r0, r4
1a001012:	f7ff fe79 	bl	1a000d08 <prvCopyDataToQueue>
1a001016:	6a63      	ldr	r3, [r4, #36]	; 0x24
1a001018:	b94b      	cbnz	r3, 1a00102e <xQueueGenericSend+0x9a>
1a00101a:	b1a8      	cbz	r0, 1a001048 <xQueueGenericSend+0xb4>
1a00101c:	4b3b      	ldr	r3, [pc, #236]	; (1a00110c <xQueueGenericSend+0x178>)
1a00101e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
1a001022:	601a      	str	r2, [r3, #0]
1a001024:	f3bf 8f4f 	dsb	sy
1a001028:	f3bf 8f6f 	isb	sy
1a00102c:	e00c      	b.n	1a001048 <xQueueGenericSend+0xb4>
1a00102e:	f104 0024 	add.w	r0, r4, #36	; 0x24
1a001032:	f000 fe2f 	bl	1a001c94 <xTaskRemoveFromEventList>
1a001036:	b138      	cbz	r0, 1a001048 <xQueueGenericSend+0xb4>
1a001038:	4b34      	ldr	r3, [pc, #208]	; (1a00110c <xQueueGenericSend+0x178>)
1a00103a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
1a00103e:	601a      	str	r2, [r3, #0]
1a001040:	f3bf 8f4f 	dsb	sy
1a001044:	f3bf 8f6f 	isb	sy
1a001048:	f001 faf6 	bl	1a002638 <vPortExitCritical>
1a00104c:	2001      	movs	r0, #1
1a00104e:	b005      	add	sp, #20
1a001050:	bdf0      	pop	{r4, r5, r6, r7, pc}
1a001052:	f001 faf1 	bl	1a002638 <vPortExitCritical>
1a001056:	2000      	movs	r0, #0
1a001058:	e7f9      	b.n	1a00104e <xQueueGenericSend+0xba>
1a00105a:	a802      	add	r0, sp, #8
1a00105c:	f000 fe60 	bl	1a001d20 <vTaskInternalSetTimeOutState>
1a001060:	2501      	movs	r5, #1
1a001062:	e019      	b.n	1a001098 <xQueueGenericSend+0x104>
1a001064:	2300      	movs	r3, #0
1a001066:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
1a00106a:	e021      	b.n	1a0010b0 <xQueueGenericSend+0x11c>
1a00106c:	2300      	movs	r3, #0
1a00106e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
1a001072:	e023      	b.n	1a0010bc <xQueueGenericSend+0x128>
1a001074:	4620      	mov	r0, r4
1a001076:	f7ff fe94 	bl	1a000da2 <prvUnlockQueue>
1a00107a:	f000 fcf9 	bl	1a001a70 <xTaskResumeAll>
1a00107e:	f001 fab9 	bl	1a0025f4 <vPortEnterCritical>
1a001082:	6ba2      	ldr	r2, [r4, #56]	; 0x38
1a001084:	6be3      	ldr	r3, [r4, #60]	; 0x3c
1a001086:	429a      	cmp	r2, r3
1a001088:	d3c0      	bcc.n	1a00100c <xQueueGenericSend+0x78>
1a00108a:	2e02      	cmp	r6, #2
1a00108c:	d0be      	beq.n	1a00100c <xQueueGenericSend+0x78>
1a00108e:	9b01      	ldr	r3, [sp, #4]
1a001090:	2b00      	cmp	r3, #0
1a001092:	d0de      	beq.n	1a001052 <xQueueGenericSend+0xbe>
1a001094:	2d00      	cmp	r5, #0
1a001096:	d0e0      	beq.n	1a00105a <xQueueGenericSend+0xc6>
1a001098:	f001 face 	bl	1a002638 <vPortExitCritical>
1a00109c:	f000 fc4e 	bl	1a00193c <vTaskSuspendAll>
1a0010a0:	f001 faa8 	bl	1a0025f4 <vPortEnterCritical>
1a0010a4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
1a0010a8:	b25b      	sxtb	r3, r3
1a0010aa:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
1a0010ae:	d0d9      	beq.n	1a001064 <xQueueGenericSend+0xd0>
1a0010b0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
1a0010b4:	b25b      	sxtb	r3, r3
1a0010b6:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
1a0010ba:	d0d7      	beq.n	1a00106c <xQueueGenericSend+0xd8>
1a0010bc:	f001 fabc 	bl	1a002638 <vPortExitCritical>
1a0010c0:	a901      	add	r1, sp, #4
1a0010c2:	a802      	add	r0, sp, #8
1a0010c4:	f000 fe38 	bl	1a001d38 <xTaskCheckForTimeOut>
1a0010c8:	b9c8      	cbnz	r0, 1a0010fe <xQueueGenericSend+0x16a>
1a0010ca:	4620      	mov	r0, r4
1a0010cc:	f7ff fe00 	bl	1a000cd0 <prvIsQueueFull>
1a0010d0:	2800      	cmp	r0, #0
1a0010d2:	d0cf      	beq.n	1a001074 <xQueueGenericSend+0xe0>
1a0010d4:	9901      	ldr	r1, [sp, #4]
1a0010d6:	f104 0010 	add.w	r0, r4, #16
1a0010da:	f000 fda7 	bl	1a001c2c <vTaskPlaceOnEventList>
1a0010de:	4620      	mov	r0, r4
1a0010e0:	f7ff fe5f 	bl	1a000da2 <prvUnlockQueue>
1a0010e4:	f000 fcc4 	bl	1a001a70 <xTaskResumeAll>
1a0010e8:	2800      	cmp	r0, #0
1a0010ea:	d1c8      	bne.n	1a00107e <xQueueGenericSend+0xea>
1a0010ec:	4b07      	ldr	r3, [pc, #28]	; (1a00110c <xQueueGenericSend+0x178>)
1a0010ee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
1a0010f2:	601a      	str	r2, [r3, #0]
1a0010f4:	f3bf 8f4f 	dsb	sy
1a0010f8:	f3bf 8f6f 	isb	sy
1a0010fc:	e7bf      	b.n	1a00107e <xQueueGenericSend+0xea>
1a0010fe:	4620      	mov	r0, r4
1a001100:	f7ff fe4f 	bl	1a000da2 <prvUnlockQueue>
1a001104:	f000 fcb4 	bl	1a001a70 <xTaskResumeAll>
1a001108:	2000      	movs	r0, #0
1a00110a:	e7a0      	b.n	1a00104e <xQueueGenericSend+0xba>
1a00110c:	e000ed04 	.word	0xe000ed04

1a001110 <prvInitialiseMutex>:
1a001110:	b148      	cbz	r0, 1a001126 <prvInitialiseMutex+0x16>
1a001112:	b508      	push	{r3, lr}
1a001114:	2100      	movs	r1, #0
1a001116:	6041      	str	r1, [r0, #4]
1a001118:	6001      	str	r1, [r0, #0]
1a00111a:	60c1      	str	r1, [r0, #12]
1a00111c:	460b      	mov	r3, r1
1a00111e:	460a      	mov	r2, r1
1a001120:	f7ff ff38 	bl	1a000f94 <xQueueGenericSend>
1a001124:	bd08      	pop	{r3, pc}
1a001126:	4770      	bx	lr

1a001128 <xQueueCreateMutex>:
1a001128:	b510      	push	{r4, lr}
1a00112a:	4602      	mov	r2, r0
1a00112c:	2100      	movs	r1, #0
1a00112e:	2001      	movs	r0, #1
1a001130:	f7ff ff09 	bl	1a000f46 <xQueueGenericCreate>
1a001134:	4604      	mov	r4, r0
1a001136:	f7ff ffeb 	bl	1a001110 <prvInitialiseMutex>
1a00113a:	4620      	mov	r0, r4
1a00113c:	bd10      	pop	{r4, pc}

1a00113e <xQueueGenericSendFromISR>:
1a00113e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a001142:	b160      	cbz	r0, 1a00115e <xQueueGenericSendFromISR+0x20>
1a001144:	4604      	mov	r4, r0
1a001146:	b999      	cbnz	r1, 1a001170 <xQueueGenericSendFromISR+0x32>
1a001148:	6c00      	ldr	r0, [r0, #64]	; 0x40
1a00114a:	b188      	cbz	r0, 1a001170 <xQueueGenericSendFromISR+0x32>
1a00114c:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a001150:	f383 8811 	msr	BASEPRI, r3
1a001154:	f3bf 8f6f 	isb	sy
1a001158:	f3bf 8f4f 	dsb	sy
1a00115c:	e7fe      	b.n	1a00115c <xQueueGenericSendFromISR+0x1e>
1a00115e:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a001162:	f383 8811 	msr	BASEPRI, r3
1a001166:	f3bf 8f6f 	isb	sy
1a00116a:	f3bf 8f4f 	dsb	sy
1a00116e:	e7fe      	b.n	1a00116e <xQueueGenericSendFromISR+0x30>
1a001170:	2b02      	cmp	r3, #2
1a001172:	d10b      	bne.n	1a00118c <xQueueGenericSendFromISR+0x4e>
1a001174:	6be0      	ldr	r0, [r4, #60]	; 0x3c
1a001176:	2801      	cmp	r0, #1
1a001178:	d008      	beq.n	1a00118c <xQueueGenericSendFromISR+0x4e>
1a00117a:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a00117e:	f383 8811 	msr	BASEPRI, r3
1a001182:	f3bf 8f6f 	isb	sy
1a001186:	f3bf 8f4f 	dsb	sy
1a00118a:	e7fe      	b.n	1a00118a <xQueueGenericSendFromISR+0x4c>
1a00118c:	461f      	mov	r7, r3
1a00118e:	4690      	mov	r8, r2
1a001190:	4689      	mov	r9, r1
1a001192:	f001 fb59 	bl	1a002848 <vPortValidateInterruptPriority>
1a001196:	f3ef 8611 	mrs	r6, BASEPRI
1a00119a:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a00119e:	f383 8811 	msr	BASEPRI, r3
1a0011a2:	f3bf 8f6f 	isb	sy
1a0011a6:	f3bf 8f4f 	dsb	sy
1a0011aa:	6ba2      	ldr	r2, [r4, #56]	; 0x38
1a0011ac:	6be3      	ldr	r3, [r4, #60]	; 0x3c
1a0011ae:	429a      	cmp	r2, r3
1a0011b0:	d303      	bcc.n	1a0011ba <xQueueGenericSendFromISR+0x7c>
1a0011b2:	2f02      	cmp	r7, #2
1a0011b4:	d001      	beq.n	1a0011ba <xQueueGenericSendFromISR+0x7c>
1a0011b6:	2000      	movs	r0, #0
1a0011b8:	e00f      	b.n	1a0011da <xQueueGenericSendFromISR+0x9c>
1a0011ba:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
1a0011be:	b26d      	sxtb	r5, r5
1a0011c0:	463a      	mov	r2, r7
1a0011c2:	4649      	mov	r1, r9
1a0011c4:	4620      	mov	r0, r4
1a0011c6:	f7ff fd9f 	bl	1a000d08 <prvCopyDataToQueue>
1a0011ca:	f1b5 3fff 	cmp.w	r5, #4294967295	; 0xffffffff
1a0011ce:	d008      	beq.n	1a0011e2 <xQueueGenericSendFromISR+0xa4>
1a0011d0:	1c6b      	adds	r3, r5, #1
1a0011d2:	b25b      	sxtb	r3, r3
1a0011d4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
1a0011d8:	2001      	movs	r0, #1
1a0011da:	f386 8811 	msr	BASEPRI, r6
1a0011de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a0011e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
1a0011e4:	b15b      	cbz	r3, 1a0011fe <xQueueGenericSendFromISR+0xc0>
1a0011e6:	f104 0024 	add.w	r0, r4, #36	; 0x24
1a0011ea:	f000 fd53 	bl	1a001c94 <xTaskRemoveFromEventList>
1a0011ee:	b140      	cbz	r0, 1a001202 <xQueueGenericSendFromISR+0xc4>
1a0011f0:	f1b8 0f00 	cmp.w	r8, #0
1a0011f4:	d007      	beq.n	1a001206 <xQueueGenericSendFromISR+0xc8>
1a0011f6:	2001      	movs	r0, #1
1a0011f8:	f8c8 0000 	str.w	r0, [r8]
1a0011fc:	e7ed      	b.n	1a0011da <xQueueGenericSendFromISR+0x9c>
1a0011fe:	2001      	movs	r0, #1
1a001200:	e7eb      	b.n	1a0011da <xQueueGenericSendFromISR+0x9c>
1a001202:	2001      	movs	r0, #1
1a001204:	e7e9      	b.n	1a0011da <xQueueGenericSendFromISR+0x9c>
1a001206:	2001      	movs	r0, #1
1a001208:	e7e7      	b.n	1a0011da <xQueueGenericSendFromISR+0x9c>
1a00120a:	Address 0x000000001a00120a is out of bounds.


1a00120c <xQueueReceive>:
1a00120c:	b5f0      	push	{r4, r5, r6, r7, lr}
1a00120e:	b085      	sub	sp, #20
1a001210:	9201      	str	r2, [sp, #4]
1a001212:	b160      	cbz	r0, 1a00122e <xQueueReceive+0x22>
1a001214:	4604      	mov	r4, r0
1a001216:	b999      	cbnz	r1, 1a001240 <xQueueReceive+0x34>
1a001218:	6c03      	ldr	r3, [r0, #64]	; 0x40
1a00121a:	b18b      	cbz	r3, 1a001240 <xQueueReceive+0x34>
1a00121c:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a001220:	f383 8811 	msr	BASEPRI, r3
1a001224:	f3bf 8f6f 	isb	sy
1a001228:	f3bf 8f4f 	dsb	sy
1a00122c:	e7fe      	b.n	1a00122c <xQueueReceive+0x20>
1a00122e:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a001232:	f383 8811 	msr	BASEPRI, r3
1a001236:	f3bf 8f6f 	isb	sy
1a00123a:	f3bf 8f4f 	dsb	sy
1a00123e:	e7fe      	b.n	1a00123e <xQueueReceive+0x32>
1a001240:	460f      	mov	r7, r1
1a001242:	f000 fdcb 	bl	1a001ddc <xTaskGetSchedulerState>
1a001246:	b950      	cbnz	r0, 1a00125e <xQueueReceive+0x52>
1a001248:	9b01      	ldr	r3, [sp, #4]
1a00124a:	b153      	cbz	r3, 1a001262 <xQueueReceive+0x56>
1a00124c:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a001250:	f383 8811 	msr	BASEPRI, r3
1a001254:	f3bf 8f6f 	isb	sy
1a001258:	f3bf 8f4f 	dsb	sy
1a00125c:	e7fe      	b.n	1a00125c <xQueueReceive+0x50>
1a00125e:	2600      	movs	r6, #0
1a001260:	e03e      	b.n	1a0012e0 <xQueueReceive+0xd4>
1a001262:	2600      	movs	r6, #0
1a001264:	e03c      	b.n	1a0012e0 <xQueueReceive+0xd4>
1a001266:	4639      	mov	r1, r7
1a001268:	4620      	mov	r0, r4
1a00126a:	f7ff fd88 	bl	1a000d7e <prvCopyDataFromQueue>
1a00126e:	3d01      	subs	r5, #1
1a001270:	63a5      	str	r5, [r4, #56]	; 0x38
1a001272:	6923      	ldr	r3, [r4, #16]
1a001274:	b923      	cbnz	r3, 1a001280 <xQueueReceive+0x74>
1a001276:	f001 f9df 	bl	1a002638 <vPortExitCritical>
1a00127a:	2001      	movs	r0, #1
1a00127c:	b005      	add	sp, #20
1a00127e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1a001280:	f104 0010 	add.w	r0, r4, #16
1a001284:	f000 fd06 	bl	1a001c94 <xTaskRemoveFromEventList>
1a001288:	2800      	cmp	r0, #0
1a00128a:	d0f4      	beq.n	1a001276 <xQueueReceive+0x6a>
1a00128c:	4b34      	ldr	r3, [pc, #208]	; (1a001360 <xQueueReceive+0x154>)
1a00128e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
1a001292:	601a      	str	r2, [r3, #0]
1a001294:	f3bf 8f4f 	dsb	sy
1a001298:	f3bf 8f6f 	isb	sy
1a00129c:	e7eb      	b.n	1a001276 <xQueueReceive+0x6a>
1a00129e:	f001 f9cb 	bl	1a002638 <vPortExitCritical>
1a0012a2:	2000      	movs	r0, #0
1a0012a4:	e7ea      	b.n	1a00127c <xQueueReceive+0x70>
1a0012a6:	a802      	add	r0, sp, #8
1a0012a8:	f000 fd3a 	bl	1a001d20 <vTaskInternalSetTimeOutState>
1a0012ac:	2601      	movs	r6, #1
1a0012ae:	e021      	b.n	1a0012f4 <xQueueReceive+0xe8>
1a0012b0:	2300      	movs	r3, #0
1a0012b2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
1a0012b6:	e029      	b.n	1a00130c <xQueueReceive+0x100>
1a0012b8:	2300      	movs	r3, #0
1a0012ba:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
1a0012be:	e02b      	b.n	1a001318 <xQueueReceive+0x10c>
1a0012c0:	4620      	mov	r0, r4
1a0012c2:	f7ff fd6e 	bl	1a000da2 <prvUnlockQueue>
1a0012c6:	f000 fbd3 	bl	1a001a70 <xTaskResumeAll>
1a0012ca:	e009      	b.n	1a0012e0 <xQueueReceive+0xd4>
1a0012cc:	4620      	mov	r0, r4
1a0012ce:	f7ff fd68 	bl	1a000da2 <prvUnlockQueue>
1a0012d2:	f000 fbcd 	bl	1a001a70 <xTaskResumeAll>
1a0012d6:	4620      	mov	r0, r4
1a0012d8:	f7ff fd09 	bl	1a000cee <prvIsQueueEmpty>
1a0012dc:	2800      	cmp	r0, #0
1a0012de:	d13d      	bne.n	1a00135c <xQueueReceive+0x150>
1a0012e0:	f001 f988 	bl	1a0025f4 <vPortEnterCritical>
1a0012e4:	6ba5      	ldr	r5, [r4, #56]	; 0x38
1a0012e6:	2d00      	cmp	r5, #0
1a0012e8:	d1bd      	bne.n	1a001266 <xQueueReceive+0x5a>
1a0012ea:	9b01      	ldr	r3, [sp, #4]
1a0012ec:	2b00      	cmp	r3, #0
1a0012ee:	d0d6      	beq.n	1a00129e <xQueueReceive+0x92>
1a0012f0:	2e00      	cmp	r6, #0
1a0012f2:	d0d8      	beq.n	1a0012a6 <xQueueReceive+0x9a>
1a0012f4:	f001 f9a0 	bl	1a002638 <vPortExitCritical>
1a0012f8:	f000 fb20 	bl	1a00193c <vTaskSuspendAll>
1a0012fc:	f001 f97a 	bl	1a0025f4 <vPortEnterCritical>
1a001300:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
1a001304:	b25b      	sxtb	r3, r3
1a001306:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
1a00130a:	d0d1      	beq.n	1a0012b0 <xQueueReceive+0xa4>
1a00130c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
1a001310:	b25b      	sxtb	r3, r3
1a001312:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
1a001316:	d0cf      	beq.n	1a0012b8 <xQueueReceive+0xac>
1a001318:	f001 f98e 	bl	1a002638 <vPortExitCritical>
1a00131c:	a901      	add	r1, sp, #4
1a00131e:	a802      	add	r0, sp, #8
1a001320:	f000 fd0a 	bl	1a001d38 <xTaskCheckForTimeOut>
1a001324:	2800      	cmp	r0, #0
1a001326:	d1d1      	bne.n	1a0012cc <xQueueReceive+0xc0>
1a001328:	4620      	mov	r0, r4
1a00132a:	f7ff fce0 	bl	1a000cee <prvIsQueueEmpty>
1a00132e:	2800      	cmp	r0, #0
1a001330:	d0c6      	beq.n	1a0012c0 <xQueueReceive+0xb4>
1a001332:	9901      	ldr	r1, [sp, #4]
1a001334:	f104 0024 	add.w	r0, r4, #36	; 0x24
1a001338:	f000 fc78 	bl	1a001c2c <vTaskPlaceOnEventList>
1a00133c:	4620      	mov	r0, r4
1a00133e:	f7ff fd30 	bl	1a000da2 <prvUnlockQueue>
1a001342:	f000 fb95 	bl	1a001a70 <xTaskResumeAll>
1a001346:	2800      	cmp	r0, #0
1a001348:	d1ca      	bne.n	1a0012e0 <xQueueReceive+0xd4>
1a00134a:	4b05      	ldr	r3, [pc, #20]	; (1a001360 <xQueueReceive+0x154>)
1a00134c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
1a001350:	601a      	str	r2, [r3, #0]
1a001352:	f3bf 8f4f 	dsb	sy
1a001356:	f3bf 8f6f 	isb	sy
1a00135a:	e7c1      	b.n	1a0012e0 <xQueueReceive+0xd4>
1a00135c:	2000      	movs	r0, #0
1a00135e:	e78d      	b.n	1a00127c <xQueueReceive+0x70>
1a001360:	e000ed04 	.word	0xe000ed04

1a001364 <vQueueAddToRegistry>:
1a001364:	2300      	movs	r3, #0
1a001366:	2b07      	cmp	r3, #7
1a001368:	d80c      	bhi.n	1a001384 <vQueueAddToRegistry+0x20>
1a00136a:	4a07      	ldr	r2, [pc, #28]	; (1a001388 <vQueueAddToRegistry+0x24>)
1a00136c:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
1a001370:	b10a      	cbz	r2, 1a001376 <vQueueAddToRegistry+0x12>
1a001372:	3301      	adds	r3, #1
1a001374:	e7f7      	b.n	1a001366 <vQueueAddToRegistry+0x2>
1a001376:	4a04      	ldr	r2, [pc, #16]	; (1a001388 <vQueueAddToRegistry+0x24>)
1a001378:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
1a00137c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
1a001380:	6058      	str	r0, [r3, #4]
1a001382:	4770      	bx	lr
1a001384:	4770      	bx	lr
1a001386:	bf00      	nop
1a001388:	100030a4 	.word	0x100030a4

1a00138c <vQueueWaitForMessageRestricted>:
1a00138c:	b570      	push	{r4, r5, r6, lr}
1a00138e:	4604      	mov	r4, r0
1a001390:	460d      	mov	r5, r1
1a001392:	4616      	mov	r6, r2
1a001394:	f001 f92e 	bl	1a0025f4 <vPortEnterCritical>
1a001398:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
1a00139c:	b25b      	sxtb	r3, r3
1a00139e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
1a0013a2:	d00d      	beq.n	1a0013c0 <vQueueWaitForMessageRestricted+0x34>
1a0013a4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
1a0013a8:	b25b      	sxtb	r3, r3
1a0013aa:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
1a0013ae:	d00b      	beq.n	1a0013c8 <vQueueWaitForMessageRestricted+0x3c>
1a0013b0:	f001 f942 	bl	1a002638 <vPortExitCritical>
1a0013b4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
1a0013b6:	b15b      	cbz	r3, 1a0013d0 <vQueueWaitForMessageRestricted+0x44>
1a0013b8:	4620      	mov	r0, r4
1a0013ba:	f7ff fcf2 	bl	1a000da2 <prvUnlockQueue>
1a0013be:	bd70      	pop	{r4, r5, r6, pc}
1a0013c0:	2300      	movs	r3, #0
1a0013c2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
1a0013c6:	e7ed      	b.n	1a0013a4 <vQueueWaitForMessageRestricted+0x18>
1a0013c8:	2300      	movs	r3, #0
1a0013ca:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
1a0013ce:	e7ef      	b.n	1a0013b0 <vQueueWaitForMessageRestricted+0x24>
1a0013d0:	4632      	mov	r2, r6
1a0013d2:	4629      	mov	r1, r5
1a0013d4:	f104 0024 	add.w	r0, r4, #36	; 0x24
1a0013d8:	f000 fc40 	bl	1a001c5c <vTaskPlaceOnEventListRestricted>
1a0013dc:	e7ec      	b.n	1a0013b8 <vQueueWaitForMessageRestricted+0x2c>

1a0013de <vListInitialise>:
1a0013de:	f100 0308 	add.w	r3, r0, #8
1a0013e2:	6043      	str	r3, [r0, #4]
1a0013e4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
1a0013e8:	6082      	str	r2, [r0, #8]
1a0013ea:	60c3      	str	r3, [r0, #12]
1a0013ec:	6103      	str	r3, [r0, #16]
1a0013ee:	2300      	movs	r3, #0
1a0013f0:	6003      	str	r3, [r0, #0]
1a0013f2:	4770      	bx	lr

1a0013f4 <vListInitialiseItem>:
1a0013f4:	2300      	movs	r3, #0
1a0013f6:	6103      	str	r3, [r0, #16]
1a0013f8:	4770      	bx	lr

1a0013fa <vListInsertEnd>:
1a0013fa:	6843      	ldr	r3, [r0, #4]
1a0013fc:	604b      	str	r3, [r1, #4]
1a0013fe:	689a      	ldr	r2, [r3, #8]
1a001400:	608a      	str	r2, [r1, #8]
1a001402:	689a      	ldr	r2, [r3, #8]
1a001404:	6051      	str	r1, [r2, #4]
1a001406:	6099      	str	r1, [r3, #8]
1a001408:	6108      	str	r0, [r1, #16]
1a00140a:	6803      	ldr	r3, [r0, #0]
1a00140c:	3301      	adds	r3, #1
1a00140e:	6003      	str	r3, [r0, #0]
1a001410:	4770      	bx	lr

1a001412 <vListInsert>:
1a001412:	b430      	push	{r4, r5}
1a001414:	680d      	ldr	r5, [r1, #0]
1a001416:	f1b5 3fff 	cmp.w	r5, #4294967295	; 0xffffffff
1a00141a:	d002      	beq.n	1a001422 <vListInsert+0x10>
1a00141c:	f100 0208 	add.w	r2, r0, #8
1a001420:	e002      	b.n	1a001428 <vListInsert+0x16>
1a001422:	6902      	ldr	r2, [r0, #16]
1a001424:	e004      	b.n	1a001430 <vListInsert+0x1e>
1a001426:	461a      	mov	r2, r3
1a001428:	6853      	ldr	r3, [r2, #4]
1a00142a:	681c      	ldr	r4, [r3, #0]
1a00142c:	42ac      	cmp	r4, r5
1a00142e:	d9fa      	bls.n	1a001426 <vListInsert+0x14>
1a001430:	6853      	ldr	r3, [r2, #4]
1a001432:	604b      	str	r3, [r1, #4]
1a001434:	6099      	str	r1, [r3, #8]
1a001436:	608a      	str	r2, [r1, #8]
1a001438:	6051      	str	r1, [r2, #4]
1a00143a:	6108      	str	r0, [r1, #16]
1a00143c:	6803      	ldr	r3, [r0, #0]
1a00143e:	3301      	adds	r3, #1
1a001440:	6003      	str	r3, [r0, #0]
1a001442:	bc30      	pop	{r4, r5}
1a001444:	4770      	bx	lr

1a001446 <uxListRemove>:
1a001446:	6903      	ldr	r3, [r0, #16]
1a001448:	6842      	ldr	r2, [r0, #4]
1a00144a:	6881      	ldr	r1, [r0, #8]
1a00144c:	6091      	str	r1, [r2, #8]
1a00144e:	6882      	ldr	r2, [r0, #8]
1a001450:	6841      	ldr	r1, [r0, #4]
1a001452:	6051      	str	r1, [r2, #4]
1a001454:	685a      	ldr	r2, [r3, #4]
1a001456:	4282      	cmp	r2, r0
1a001458:	d006      	beq.n	1a001468 <uxListRemove+0x22>
1a00145a:	2200      	movs	r2, #0
1a00145c:	6102      	str	r2, [r0, #16]
1a00145e:	681a      	ldr	r2, [r3, #0]
1a001460:	3a01      	subs	r2, #1
1a001462:	601a      	str	r2, [r3, #0]
1a001464:	6818      	ldr	r0, [r3, #0]
1a001466:	4770      	bx	lr
1a001468:	6882      	ldr	r2, [r0, #8]
1a00146a:	605a      	str	r2, [r3, #4]
1a00146c:	e7f5      	b.n	1a00145a <uxListRemove+0x14>
1a00146e:	Address 0x000000001a00146e is out of bounds.


1a001470 <vApplicationGetIdleTaskMemory>:
1a001470:	4b03      	ldr	r3, [pc, #12]	; (1a001480 <vApplicationGetIdleTaskMemory+0x10>)
1a001472:	6003      	str	r3, [r0, #0]
1a001474:	4b03      	ldr	r3, [pc, #12]	; (1a001484 <vApplicationGetIdleTaskMemory+0x14>)
1a001476:	600b      	str	r3, [r1, #0]
1a001478:	235a      	movs	r3, #90	; 0x5a
1a00147a:	6013      	str	r3, [r2, #0]
1a00147c:	4770      	bx	lr
1a00147e:	bf00      	nop
1a001480:	10002c20 	.word	0x10002c20
1a001484:	10002518 	.word	0x10002518

1a001488 <vApplicationGetTimerTaskMemory>:
1a001488:	4b03      	ldr	r3, [pc, #12]	; (1a001498 <vApplicationGetTimerTaskMemory+0x10>)
1a00148a:	6003      	str	r3, [r0, #0]
1a00148c:	4b03      	ldr	r3, [pc, #12]	; (1a00149c <vApplicationGetTimerTaskMemory+0x14>)
1a00148e:	600b      	str	r3, [r1, #0]
1a001490:	f44f 73b4 	mov.w	r3, #360	; 0x168
1a001494:	6013      	str	r3, [r2, #0]
1a001496:	4770      	bx	lr
1a001498:	10002c80 	.word	0x10002c80
1a00149c:	10002680 	.word	0x10002680

1a0014a0 <vApplicationStackOverflowHook>:
1a0014a0:	e7fe      	b.n	1a0014a0 <vApplicationStackOverflowHook>

1a0014a2 <vApplicationMallocFailedHook>:
1a0014a2:	e7fe      	b.n	1a0014a2 <vApplicationMallocFailedHook>

1a0014a4 <prvTaskCheckFreeStackSpace>:
1a0014a4:	2300      	movs	r3, #0
1a0014a6:	e001      	b.n	1a0014ac <prvTaskCheckFreeStackSpace+0x8>
1a0014a8:	3001      	adds	r0, #1
1a0014aa:	3301      	adds	r3, #1
1a0014ac:	7802      	ldrb	r2, [r0, #0]
1a0014ae:	2aa5      	cmp	r2, #165	; 0xa5
1a0014b0:	d0fa      	beq.n	1a0014a8 <prvTaskCheckFreeStackSpace+0x4>
1a0014b2:	f3c3 008f 	ubfx	r0, r3, #2, #16
1a0014b6:	4770      	bx	lr

1a0014b8 <prvResetNextTaskUnblockTime>:
1a0014b8:	4b08      	ldr	r3, [pc, #32]	; (1a0014dc <prvResetNextTaskUnblockTime+0x24>)
1a0014ba:	681b      	ldr	r3, [r3, #0]
1a0014bc:	681b      	ldr	r3, [r3, #0]
1a0014be:	b13b      	cbz	r3, 1a0014d0 <prvResetNextTaskUnblockTime+0x18>
1a0014c0:	4b06      	ldr	r3, [pc, #24]	; (1a0014dc <prvResetNextTaskUnblockTime+0x24>)
1a0014c2:	681b      	ldr	r3, [r3, #0]
1a0014c4:	68db      	ldr	r3, [r3, #12]
1a0014c6:	68db      	ldr	r3, [r3, #12]
1a0014c8:	685a      	ldr	r2, [r3, #4]
1a0014ca:	4b05      	ldr	r3, [pc, #20]	; (1a0014e0 <prvResetNextTaskUnblockTime+0x28>)
1a0014cc:	601a      	str	r2, [r3, #0]
1a0014ce:	4770      	bx	lr
1a0014d0:	4b03      	ldr	r3, [pc, #12]	; (1a0014e0 <prvResetNextTaskUnblockTime+0x28>)
1a0014d2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
1a0014d6:	601a      	str	r2, [r3, #0]
1a0014d8:	4770      	bx	lr
1a0014da:	bf00      	nop
1a0014dc:	10002ce4 	.word	0x10002ce4
1a0014e0:	10002db8 	.word	0x10002db8

1a0014e4 <prvInitialiseNewTask>:
1a0014e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1a0014e8:	4681      	mov	r9, r0
1a0014ea:	460d      	mov	r5, r1
1a0014ec:	4617      	mov	r7, r2
1a0014ee:	469a      	mov	sl, r3
1a0014f0:	9e08      	ldr	r6, [sp, #32]
1a0014f2:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
1a0014f6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
1a0014f8:	0092      	lsls	r2, r2, #2
1a0014fa:	21a5      	movs	r1, #165	; 0xa5
1a0014fc:	6b20      	ldr	r0, [r4, #48]	; 0x30
1a0014fe:	f002 fe18 	bl	1a004132 <memset>
1a001502:	6b23      	ldr	r3, [r4, #48]	; 0x30
1a001504:	f107 4280 	add.w	r2, r7, #1073741824	; 0x40000000
1a001508:	3a01      	subs	r2, #1
1a00150a:	eb03 0782 	add.w	r7, r3, r2, lsl #2
1a00150e:	f027 0707 	bic.w	r7, r7, #7
1a001512:	6467      	str	r7, [r4, #68]	; 0x44
1a001514:	2300      	movs	r3, #0
1a001516:	2b0f      	cmp	r3, #15
1a001518:	d807      	bhi.n	1a00152a <prvInitialiseNewTask+0x46>
1a00151a:	5ce9      	ldrb	r1, [r5, r3]
1a00151c:	18e2      	adds	r2, r4, r3
1a00151e:	f882 1034 	strb.w	r1, [r2, #52]	; 0x34
1a001522:	5cea      	ldrb	r2, [r5, r3]
1a001524:	b10a      	cbz	r2, 1a00152a <prvInitialiseNewTask+0x46>
1a001526:	3301      	adds	r3, #1
1a001528:	e7f5      	b.n	1a001516 <prvInitialiseNewTask+0x32>
1a00152a:	2300      	movs	r3, #0
1a00152c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
1a001530:	2e06      	cmp	r6, #6
1a001532:	d900      	bls.n	1a001536 <prvInitialiseNewTask+0x52>
1a001534:	2606      	movs	r6, #6
1a001536:	62e6      	str	r6, [r4, #44]	; 0x2c
1a001538:	6526      	str	r6, [r4, #80]	; 0x50
1a00153a:	2500      	movs	r5, #0
1a00153c:	6565      	str	r5, [r4, #84]	; 0x54
1a00153e:	1d20      	adds	r0, r4, #4
1a001540:	f7ff ff58 	bl	1a0013f4 <vListInitialiseItem>
1a001544:	f104 0018 	add.w	r0, r4, #24
1a001548:	f7ff ff54 	bl	1a0013f4 <vListInitialiseItem>
1a00154c:	6124      	str	r4, [r4, #16]
1a00154e:	f1c6 0607 	rsb	r6, r6, #7
1a001552:	61a6      	str	r6, [r4, #24]
1a001554:	6264      	str	r4, [r4, #36]	; 0x24
1a001556:	65a5      	str	r5, [r4, #88]	; 0x58
1a001558:	f884 505c 	strb.w	r5, [r4, #92]	; 0x5c
1a00155c:	4652      	mov	r2, sl
1a00155e:	4649      	mov	r1, r9
1a001560:	4638      	mov	r0, r7
1a001562:	f001 f81d 	bl	1a0025a0 <pxPortInitialiseStack>
1a001566:	6020      	str	r0, [r4, #0]
1a001568:	f1b8 0f00 	cmp.w	r8, #0
1a00156c:	d001      	beq.n	1a001572 <prvInitialiseNewTask+0x8e>
1a00156e:	f8c8 4000 	str.w	r4, [r8]
1a001572:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a001576:	Address 0x000000001a001576 is out of bounds.


1a001578 <prvInitialiseTaskLists>:
1a001578:	b538      	push	{r3, r4, r5, lr}
1a00157a:	2400      	movs	r4, #0
1a00157c:	e007      	b.n	1a00158e <prvInitialiseTaskLists+0x16>
1a00157e:	eb04 0284 	add.w	r2, r4, r4, lsl #2
1a001582:	0093      	lsls	r3, r2, #2
1a001584:	480e      	ldr	r0, [pc, #56]	; (1a0015c0 <prvInitialiseTaskLists+0x48>)
1a001586:	4418      	add	r0, r3
1a001588:	f7ff ff29 	bl	1a0013de <vListInitialise>
1a00158c:	3401      	adds	r4, #1
1a00158e:	2c06      	cmp	r4, #6
1a001590:	d9f5      	bls.n	1a00157e <prvInitialiseTaskLists+0x6>
1a001592:	4d0c      	ldr	r5, [pc, #48]	; (1a0015c4 <prvInitialiseTaskLists+0x4c>)
1a001594:	4628      	mov	r0, r5
1a001596:	f7ff ff22 	bl	1a0013de <vListInitialise>
1a00159a:	4c0b      	ldr	r4, [pc, #44]	; (1a0015c8 <prvInitialiseTaskLists+0x50>)
1a00159c:	4620      	mov	r0, r4
1a00159e:	f7ff ff1e 	bl	1a0013de <vListInitialise>
1a0015a2:	480a      	ldr	r0, [pc, #40]	; (1a0015cc <prvInitialiseTaskLists+0x54>)
1a0015a4:	f7ff ff1b 	bl	1a0013de <vListInitialise>
1a0015a8:	4809      	ldr	r0, [pc, #36]	; (1a0015d0 <prvInitialiseTaskLists+0x58>)
1a0015aa:	f7ff ff18 	bl	1a0013de <vListInitialise>
1a0015ae:	4809      	ldr	r0, [pc, #36]	; (1a0015d4 <prvInitialiseTaskLists+0x5c>)
1a0015b0:	f7ff ff15 	bl	1a0013de <vListInitialise>
1a0015b4:	4b08      	ldr	r3, [pc, #32]	; (1a0015d8 <prvInitialiseTaskLists+0x60>)
1a0015b6:	601d      	str	r5, [r3, #0]
1a0015b8:	4b08      	ldr	r3, [pc, #32]	; (1a0015dc <prvInitialiseTaskLists+0x64>)
1a0015ba:	601c      	str	r4, [r3, #0]
1a0015bc:	bd38      	pop	{r3, r4, r5, pc}
1a0015be:	bf00      	nop
1a0015c0:	10002cec 	.word	0x10002cec
1a0015c4:	10002d90 	.word	0x10002d90
1a0015c8:	10002da4 	.word	0x10002da4
1a0015cc:	10002dc0 	.word	0x10002dc0
1a0015d0:	10002dec 	.word	0x10002dec
1a0015d4:	10002dd8 	.word	0x10002dd8
1a0015d8:	10002ce4 	.word	0x10002ce4
1a0015dc:	10002ce8 	.word	0x10002ce8

1a0015e0 <prvAddNewTaskToReadyList>:
1a0015e0:	b510      	push	{r4, lr}
1a0015e2:	4604      	mov	r4, r0
1a0015e4:	f001 f806 	bl	1a0025f4 <vPortEnterCritical>
1a0015e8:	4a21      	ldr	r2, [pc, #132]	; (1a001670 <prvAddNewTaskToReadyList+0x90>)
1a0015ea:	6813      	ldr	r3, [r2, #0]
1a0015ec:	3301      	adds	r3, #1
1a0015ee:	6013      	str	r3, [r2, #0]
1a0015f0:	4b20      	ldr	r3, [pc, #128]	; (1a001674 <prvAddNewTaskToReadyList+0x94>)
1a0015f2:	681b      	ldr	r3, [r3, #0]
1a0015f4:	b15b      	cbz	r3, 1a00160e <prvAddNewTaskToReadyList+0x2e>
1a0015f6:	4b20      	ldr	r3, [pc, #128]	; (1a001678 <prvAddNewTaskToReadyList+0x98>)
1a0015f8:	681b      	ldr	r3, [r3, #0]
1a0015fa:	b96b      	cbnz	r3, 1a001618 <prvAddNewTaskToReadyList+0x38>
1a0015fc:	4b1d      	ldr	r3, [pc, #116]	; (1a001674 <prvAddNewTaskToReadyList+0x94>)
1a0015fe:	681b      	ldr	r3, [r3, #0]
1a001600:	6ada      	ldr	r2, [r3, #44]	; 0x2c
1a001602:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
1a001604:	429a      	cmp	r2, r3
1a001606:	d807      	bhi.n	1a001618 <prvAddNewTaskToReadyList+0x38>
1a001608:	4b1a      	ldr	r3, [pc, #104]	; (1a001674 <prvAddNewTaskToReadyList+0x94>)
1a00160a:	601c      	str	r4, [r3, #0]
1a00160c:	e004      	b.n	1a001618 <prvAddNewTaskToReadyList+0x38>
1a00160e:	4b19      	ldr	r3, [pc, #100]	; (1a001674 <prvAddNewTaskToReadyList+0x94>)
1a001610:	601c      	str	r4, [r3, #0]
1a001612:	6813      	ldr	r3, [r2, #0]
1a001614:	2b01      	cmp	r3, #1
1a001616:	d027      	beq.n	1a001668 <prvAddNewTaskToReadyList+0x88>
1a001618:	4a18      	ldr	r2, [pc, #96]	; (1a00167c <prvAddNewTaskToReadyList+0x9c>)
1a00161a:	6813      	ldr	r3, [r2, #0]
1a00161c:	3301      	adds	r3, #1
1a00161e:	6013      	str	r3, [r2, #0]
1a001620:	64a3      	str	r3, [r4, #72]	; 0x48
1a001622:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
1a001624:	2201      	movs	r2, #1
1a001626:	409a      	lsls	r2, r3
1a001628:	4915      	ldr	r1, [pc, #84]	; (1a001680 <prvAddNewTaskToReadyList+0xa0>)
1a00162a:	6808      	ldr	r0, [r1, #0]
1a00162c:	4302      	orrs	r2, r0
1a00162e:	600a      	str	r2, [r1, #0]
1a001630:	eb03 0383 	add.w	r3, r3, r3, lsl #2
1a001634:	009a      	lsls	r2, r3, #2
1a001636:	1d21      	adds	r1, r4, #4
1a001638:	4812      	ldr	r0, [pc, #72]	; (1a001684 <prvAddNewTaskToReadyList+0xa4>)
1a00163a:	4410      	add	r0, r2
1a00163c:	f7ff fedd 	bl	1a0013fa <vListInsertEnd>
1a001640:	f000 fffa 	bl	1a002638 <vPortExitCritical>
1a001644:	4b0c      	ldr	r3, [pc, #48]	; (1a001678 <prvAddNewTaskToReadyList+0x98>)
1a001646:	681b      	ldr	r3, [r3, #0]
1a001648:	b16b      	cbz	r3, 1a001666 <prvAddNewTaskToReadyList+0x86>
1a00164a:	4b0a      	ldr	r3, [pc, #40]	; (1a001674 <prvAddNewTaskToReadyList+0x94>)
1a00164c:	681b      	ldr	r3, [r3, #0]
1a00164e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
1a001650:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
1a001652:	429a      	cmp	r2, r3
1a001654:	d207      	bcs.n	1a001666 <prvAddNewTaskToReadyList+0x86>
1a001656:	4b0c      	ldr	r3, [pc, #48]	; (1a001688 <prvAddNewTaskToReadyList+0xa8>)
1a001658:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
1a00165c:	601a      	str	r2, [r3, #0]
1a00165e:	f3bf 8f4f 	dsb	sy
1a001662:	f3bf 8f6f 	isb	sy
1a001666:	bd10      	pop	{r4, pc}
1a001668:	f7ff ff86 	bl	1a001578 <prvInitialiseTaskLists>
1a00166c:	e7d4      	b.n	1a001618 <prvAddNewTaskToReadyList+0x38>
1a00166e:	bf00      	nop
1a001670:	10002d78 	.word	0x10002d78
1a001674:	10002ce0 	.word	0x10002ce0
1a001678:	10002dd4 	.word	0x10002dd4
1a00167c:	10002d88 	.word	0x10002d88
1a001680:	10002d8c 	.word	0x10002d8c
1a001684:	10002cec 	.word	0x10002cec
1a001688:	e000ed04 	.word	0xe000ed04

1a00168c <prvDeleteTCB>:
1a00168c:	b510      	push	{r4, lr}
1a00168e:	4604      	mov	r4, r0
1a001690:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
1a001694:	b933      	cbnz	r3, 1a0016a4 <prvDeleteTCB+0x18>
1a001696:	6b00      	ldr	r0, [r0, #48]	; 0x30
1a001698:	f7ff fadc 	bl	1a000c54 <vPortFree>
1a00169c:	4620      	mov	r0, r4
1a00169e:	f7ff fad9 	bl	1a000c54 <vPortFree>
1a0016a2:	bd10      	pop	{r4, pc}
1a0016a4:	2b01      	cmp	r3, #1
1a0016a6:	d00a      	beq.n	1a0016be <prvDeleteTCB+0x32>
1a0016a8:	2b02      	cmp	r3, #2
1a0016aa:	d0fa      	beq.n	1a0016a2 <prvDeleteTCB+0x16>
1a0016ac:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a0016b0:	f383 8811 	msr	BASEPRI, r3
1a0016b4:	f3bf 8f6f 	isb	sy
1a0016b8:	f3bf 8f4f 	dsb	sy
1a0016bc:	e7fe      	b.n	1a0016bc <prvDeleteTCB+0x30>
1a0016be:	f7ff fac9 	bl	1a000c54 <vPortFree>
1a0016c2:	e7ee      	b.n	1a0016a2 <prvDeleteTCB+0x16>

1a0016c4 <prvCheckTasksWaitingTermination>:
1a0016c4:	4b0f      	ldr	r3, [pc, #60]	; (1a001704 <prvCheckTasksWaitingTermination+0x40>)
1a0016c6:	681b      	ldr	r3, [r3, #0]
1a0016c8:	b1d3      	cbz	r3, 1a001700 <prvCheckTasksWaitingTermination+0x3c>
1a0016ca:	b510      	push	{r4, lr}
1a0016cc:	f000 ff92 	bl	1a0025f4 <vPortEnterCritical>
1a0016d0:	4b0d      	ldr	r3, [pc, #52]	; (1a001708 <prvCheckTasksWaitingTermination+0x44>)
1a0016d2:	68db      	ldr	r3, [r3, #12]
1a0016d4:	68dc      	ldr	r4, [r3, #12]
1a0016d6:	1d20      	adds	r0, r4, #4
1a0016d8:	f7ff feb5 	bl	1a001446 <uxListRemove>
1a0016dc:	4a0b      	ldr	r2, [pc, #44]	; (1a00170c <prvCheckTasksWaitingTermination+0x48>)
1a0016de:	6813      	ldr	r3, [r2, #0]
1a0016e0:	3b01      	subs	r3, #1
1a0016e2:	6013      	str	r3, [r2, #0]
1a0016e4:	4a07      	ldr	r2, [pc, #28]	; (1a001704 <prvCheckTasksWaitingTermination+0x40>)
1a0016e6:	6813      	ldr	r3, [r2, #0]
1a0016e8:	3b01      	subs	r3, #1
1a0016ea:	6013      	str	r3, [r2, #0]
1a0016ec:	f000 ffa4 	bl	1a002638 <vPortExitCritical>
1a0016f0:	4620      	mov	r0, r4
1a0016f2:	f7ff ffcb 	bl	1a00168c <prvDeleteTCB>
1a0016f6:	4b03      	ldr	r3, [pc, #12]	; (1a001704 <prvCheckTasksWaitingTermination+0x40>)
1a0016f8:	681b      	ldr	r3, [r3, #0]
1a0016fa:	2b00      	cmp	r3, #0
1a0016fc:	d1e6      	bne.n	1a0016cc <prvCheckTasksWaitingTermination+0x8>
1a0016fe:	bd10      	pop	{r4, pc}
1a001700:	4770      	bx	lr
1a001702:	bf00      	nop
1a001704:	10002d7c 	.word	0x10002d7c
1a001708:	10002dec 	.word	0x10002dec
1a00170c:	10002d78 	.word	0x10002d78

1a001710 <prvIdleTask>:
1a001710:	b508      	push	{r3, lr}
1a001712:	f7ff ffd7 	bl	1a0016c4 <prvCheckTasksWaitingTermination>
1a001716:	4b06      	ldr	r3, [pc, #24]	; (1a001730 <prvIdleTask+0x20>)
1a001718:	681b      	ldr	r3, [r3, #0]
1a00171a:	2b01      	cmp	r3, #1
1a00171c:	d9f9      	bls.n	1a001712 <prvIdleTask+0x2>
1a00171e:	4b05      	ldr	r3, [pc, #20]	; (1a001734 <prvIdleTask+0x24>)
1a001720:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
1a001724:	601a      	str	r2, [r3, #0]
1a001726:	f3bf 8f4f 	dsb	sy
1a00172a:	f3bf 8f6f 	isb	sy
1a00172e:	e7f0      	b.n	1a001712 <prvIdleTask+0x2>
1a001730:	10002cec 	.word	0x10002cec
1a001734:	e000ed04 	.word	0xe000ed04

1a001738 <prvAddCurrentTaskToDelayedList>:
1a001738:	b570      	push	{r4, r5, r6, lr}
1a00173a:	4604      	mov	r4, r0
1a00173c:	460e      	mov	r6, r1
1a00173e:	4b1d      	ldr	r3, [pc, #116]	; (1a0017b4 <prvAddCurrentTaskToDelayedList+0x7c>)
1a001740:	681d      	ldr	r5, [r3, #0]
1a001742:	4b1d      	ldr	r3, [pc, #116]	; (1a0017b8 <prvAddCurrentTaskToDelayedList+0x80>)
1a001744:	6818      	ldr	r0, [r3, #0]
1a001746:	3004      	adds	r0, #4
1a001748:	f7ff fe7d 	bl	1a001446 <uxListRemove>
1a00174c:	b950      	cbnz	r0, 1a001764 <prvAddCurrentTaskToDelayedList+0x2c>
1a00174e:	4b1a      	ldr	r3, [pc, #104]	; (1a0017b8 <prvAddCurrentTaskToDelayedList+0x80>)
1a001750:	681b      	ldr	r3, [r3, #0]
1a001752:	6ada      	ldr	r2, [r3, #44]	; 0x2c
1a001754:	2301      	movs	r3, #1
1a001756:	fa03 f202 	lsl.w	r2, r3, r2
1a00175a:	4918      	ldr	r1, [pc, #96]	; (1a0017bc <prvAddCurrentTaskToDelayedList+0x84>)
1a00175c:	680b      	ldr	r3, [r1, #0]
1a00175e:	ea23 0302 	bic.w	r3, r3, r2
1a001762:	600b      	str	r3, [r1, #0]
1a001764:	f1b4 3fff 	cmp.w	r4, #4294967295	; 0xffffffff
1a001768:	d013      	beq.n	1a001792 <prvAddCurrentTaskToDelayedList+0x5a>
1a00176a:	442c      	add	r4, r5
1a00176c:	4b12      	ldr	r3, [pc, #72]	; (1a0017b8 <prvAddCurrentTaskToDelayedList+0x80>)
1a00176e:	681b      	ldr	r3, [r3, #0]
1a001770:	605c      	str	r4, [r3, #4]
1a001772:	42a5      	cmp	r5, r4
1a001774:	d816      	bhi.n	1a0017a4 <prvAddCurrentTaskToDelayedList+0x6c>
1a001776:	4b12      	ldr	r3, [pc, #72]	; (1a0017c0 <prvAddCurrentTaskToDelayedList+0x88>)
1a001778:	6818      	ldr	r0, [r3, #0]
1a00177a:	4b0f      	ldr	r3, [pc, #60]	; (1a0017b8 <prvAddCurrentTaskToDelayedList+0x80>)
1a00177c:	6819      	ldr	r1, [r3, #0]
1a00177e:	3104      	adds	r1, #4
1a001780:	f7ff fe47 	bl	1a001412 <vListInsert>
1a001784:	4b0f      	ldr	r3, [pc, #60]	; (1a0017c4 <prvAddCurrentTaskToDelayedList+0x8c>)
1a001786:	681b      	ldr	r3, [r3, #0]
1a001788:	42a3      	cmp	r3, r4
1a00178a:	d912      	bls.n	1a0017b2 <prvAddCurrentTaskToDelayedList+0x7a>
1a00178c:	4b0d      	ldr	r3, [pc, #52]	; (1a0017c4 <prvAddCurrentTaskToDelayedList+0x8c>)
1a00178e:	601c      	str	r4, [r3, #0]
1a001790:	e00f      	b.n	1a0017b2 <prvAddCurrentTaskToDelayedList+0x7a>
1a001792:	2e00      	cmp	r6, #0
1a001794:	d0e9      	beq.n	1a00176a <prvAddCurrentTaskToDelayedList+0x32>
1a001796:	4b08      	ldr	r3, [pc, #32]	; (1a0017b8 <prvAddCurrentTaskToDelayedList+0x80>)
1a001798:	6819      	ldr	r1, [r3, #0]
1a00179a:	3104      	adds	r1, #4
1a00179c:	480a      	ldr	r0, [pc, #40]	; (1a0017c8 <prvAddCurrentTaskToDelayedList+0x90>)
1a00179e:	f7ff fe2c 	bl	1a0013fa <vListInsertEnd>
1a0017a2:	e006      	b.n	1a0017b2 <prvAddCurrentTaskToDelayedList+0x7a>
1a0017a4:	4b09      	ldr	r3, [pc, #36]	; (1a0017cc <prvAddCurrentTaskToDelayedList+0x94>)
1a0017a6:	6818      	ldr	r0, [r3, #0]
1a0017a8:	4b03      	ldr	r3, [pc, #12]	; (1a0017b8 <prvAddCurrentTaskToDelayedList+0x80>)
1a0017aa:	6819      	ldr	r1, [r3, #0]
1a0017ac:	3104      	adds	r1, #4
1a0017ae:	f7ff fe30 	bl	1a001412 <vListInsert>
1a0017b2:	bd70      	pop	{r4, r5, r6, pc}
1a0017b4:	10002e00 	.word	0x10002e00
1a0017b8:	10002ce0 	.word	0x10002ce0
1a0017bc:	10002d8c 	.word	0x10002d8c
1a0017c0:	10002ce4 	.word	0x10002ce4
1a0017c4:	10002db8 	.word	0x10002db8
1a0017c8:	10002dd8 	.word	0x10002dd8
1a0017cc:	10002ce8 	.word	0x10002ce8

1a0017d0 <xTaskCreateStatic>:
1a0017d0:	b570      	push	{r4, r5, r6, lr}
1a0017d2:	b086      	sub	sp, #24
1a0017d4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
1a0017d6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
1a0017d8:	b945      	cbnz	r5, 1a0017ec <xTaskCreateStatic+0x1c>
1a0017da:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a0017de:	f383 8811 	msr	BASEPRI, r3
1a0017e2:	f3bf 8f6f 	isb	sy
1a0017e6:	f3bf 8f4f 	dsb	sy
1a0017ea:	e7fe      	b.n	1a0017ea <xTaskCreateStatic+0x1a>
1a0017ec:	b944      	cbnz	r4, 1a001800 <xTaskCreateStatic+0x30>
1a0017ee:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a0017f2:	f383 8811 	msr	BASEPRI, r3
1a0017f6:	f3bf 8f6f 	isb	sy
1a0017fa:	f3bf 8f4f 	dsb	sy
1a0017fe:	e7fe      	b.n	1a0017fe <xTaskCreateStatic+0x2e>
1a001800:	2660      	movs	r6, #96	; 0x60
1a001802:	9604      	str	r6, [sp, #16]
1a001804:	9e04      	ldr	r6, [sp, #16]
1a001806:	2e60      	cmp	r6, #96	; 0x60
1a001808:	d008      	beq.n	1a00181c <xTaskCreateStatic+0x4c>
1a00180a:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a00180e:	f383 8811 	msr	BASEPRI, r3
1a001812:	f3bf 8f6f 	isb	sy
1a001816:	f3bf 8f4f 	dsb	sy
1a00181a:	e7fe      	b.n	1a00181a <xTaskCreateStatic+0x4a>
1a00181c:	6325      	str	r5, [r4, #48]	; 0x30
1a00181e:	2502      	movs	r5, #2
1a001820:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
1a001824:	2500      	movs	r5, #0
1a001826:	9503      	str	r5, [sp, #12]
1a001828:	9402      	str	r4, [sp, #8]
1a00182a:	ad05      	add	r5, sp, #20
1a00182c:	9501      	str	r5, [sp, #4]
1a00182e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
1a001830:	9500      	str	r5, [sp, #0]
1a001832:	f7ff fe57 	bl	1a0014e4 <prvInitialiseNewTask>
1a001836:	4620      	mov	r0, r4
1a001838:	f7ff fed2 	bl	1a0015e0 <prvAddNewTaskToReadyList>
1a00183c:	9805      	ldr	r0, [sp, #20]
1a00183e:	b006      	add	sp, #24
1a001840:	bd70      	pop	{r4, r5, r6, pc}

1a001842 <xTaskCreate>:
1a001842:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1a001846:	b085      	sub	sp, #20
1a001848:	4607      	mov	r7, r0
1a00184a:	4688      	mov	r8, r1
1a00184c:	4615      	mov	r5, r2
1a00184e:	4699      	mov	r9, r3
1a001850:	0090      	lsls	r0, r2, #2
1a001852:	f7ff f971 	bl	1a000b38 <pvPortMalloc>
1a001856:	b308      	cbz	r0, 1a00189c <xTaskCreate+0x5a>
1a001858:	4606      	mov	r6, r0
1a00185a:	2060      	movs	r0, #96	; 0x60
1a00185c:	f7ff f96c 	bl	1a000b38 <pvPortMalloc>
1a001860:	4604      	mov	r4, r0
1a001862:	b1b8      	cbz	r0, 1a001894 <xTaskCreate+0x52>
1a001864:	6306      	str	r6, [r0, #48]	; 0x30
1a001866:	b1e4      	cbz	r4, 1a0018a2 <xTaskCreate+0x60>
1a001868:	2300      	movs	r3, #0
1a00186a:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
1a00186e:	9303      	str	r3, [sp, #12]
1a001870:	9402      	str	r4, [sp, #8]
1a001872:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1a001874:	9301      	str	r3, [sp, #4]
1a001876:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a001878:	9300      	str	r3, [sp, #0]
1a00187a:	464b      	mov	r3, r9
1a00187c:	462a      	mov	r2, r5
1a00187e:	4641      	mov	r1, r8
1a001880:	4638      	mov	r0, r7
1a001882:	f7ff fe2f 	bl	1a0014e4 <prvInitialiseNewTask>
1a001886:	4620      	mov	r0, r4
1a001888:	f7ff feaa 	bl	1a0015e0 <prvAddNewTaskToReadyList>
1a00188c:	2001      	movs	r0, #1
1a00188e:	b005      	add	sp, #20
1a001890:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1a001894:	4630      	mov	r0, r6
1a001896:	f7ff f9dd 	bl	1a000c54 <vPortFree>
1a00189a:	e7e4      	b.n	1a001866 <xTaskCreate+0x24>
1a00189c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a0018a0:	e7f5      	b.n	1a00188e <xTaskCreate+0x4c>
1a0018a2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a0018a6:	e7f2      	b.n	1a00188e <xTaskCreate+0x4c>

1a0018a8 <vTaskStartScheduler>:
1a0018a8:	b510      	push	{r4, lr}
1a0018aa:	b088      	sub	sp, #32
1a0018ac:	2400      	movs	r4, #0
1a0018ae:	9405      	str	r4, [sp, #20]
1a0018b0:	9406      	str	r4, [sp, #24]
1a0018b2:	aa07      	add	r2, sp, #28
1a0018b4:	a906      	add	r1, sp, #24
1a0018b6:	a805      	add	r0, sp, #20
1a0018b8:	f7ff fdda 	bl	1a001470 <vApplicationGetIdleTaskMemory>
1a0018bc:	9b05      	ldr	r3, [sp, #20]
1a0018be:	9302      	str	r3, [sp, #8]
1a0018c0:	9b06      	ldr	r3, [sp, #24]
1a0018c2:	9301      	str	r3, [sp, #4]
1a0018c4:	9400      	str	r4, [sp, #0]
1a0018c6:	4623      	mov	r3, r4
1a0018c8:	9a07      	ldr	r2, [sp, #28]
1a0018ca:	4917      	ldr	r1, [pc, #92]	; (1a001928 <vTaskStartScheduler+0x80>)
1a0018cc:	4817      	ldr	r0, [pc, #92]	; (1a00192c <vTaskStartScheduler+0x84>)
1a0018ce:	f7ff ff7f 	bl	1a0017d0 <xTaskCreateStatic>
1a0018d2:	b140      	cbz	r0, 1a0018e6 <vTaskStartScheduler+0x3e>
1a0018d4:	f000 fc52 	bl	1a00217c <xTimerCreateTimerTask>
1a0018d8:	2801      	cmp	r0, #1
1a0018da:	d006      	beq.n	1a0018ea <vTaskStartScheduler+0x42>
1a0018dc:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
1a0018e0:	d018      	beq.n	1a001914 <vTaskStartScheduler+0x6c>
1a0018e2:	b008      	add	sp, #32
1a0018e4:	bd10      	pop	{r4, pc}
1a0018e6:	2000      	movs	r0, #0
1a0018e8:	e7f6      	b.n	1a0018d8 <vTaskStartScheduler+0x30>
1a0018ea:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a0018ee:	f383 8811 	msr	BASEPRI, r3
1a0018f2:	f3bf 8f6f 	isb	sy
1a0018f6:	f3bf 8f4f 	dsb	sy
1a0018fa:	4b0d      	ldr	r3, [pc, #52]	; (1a001930 <vTaskStartScheduler+0x88>)
1a0018fc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
1a001900:	601a      	str	r2, [r3, #0]
1a001902:	4b0c      	ldr	r3, [pc, #48]	; (1a001934 <vTaskStartScheduler+0x8c>)
1a001904:	2201      	movs	r2, #1
1a001906:	601a      	str	r2, [r3, #0]
1a001908:	4b0b      	ldr	r3, [pc, #44]	; (1a001938 <vTaskStartScheduler+0x90>)
1a00190a:	2200      	movs	r2, #0
1a00190c:	601a      	str	r2, [r3, #0]
1a00190e:	f000 ff13 	bl	1a002738 <xPortStartScheduler>
1a001912:	e7e6      	b.n	1a0018e2 <vTaskStartScheduler+0x3a>
1a001914:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a001918:	f383 8811 	msr	BASEPRI, r3
1a00191c:	f3bf 8f6f 	isb	sy
1a001920:	f3bf 8f4f 	dsb	sy
1a001924:	e7fe      	b.n	1a001924 <vTaskStartScheduler+0x7c>
1a001926:	bf00      	nop
1a001928:	1a004acc 	.word	0x1a004acc
1a00192c:	1a001711 	.word	0x1a001711
1a001930:	10002db8 	.word	0x10002db8
1a001934:	10002dd4 	.word	0x10002dd4
1a001938:	10002e00 	.word	0x10002e00

1a00193c <vTaskSuspendAll>:
1a00193c:	4a02      	ldr	r2, [pc, #8]	; (1a001948 <vTaskSuspendAll+0xc>)
1a00193e:	6813      	ldr	r3, [r2, #0]
1a001940:	3301      	adds	r3, #1
1a001942:	6013      	str	r3, [r2, #0]
1a001944:	4770      	bx	lr
1a001946:	bf00      	nop
1a001948:	10002d84 	.word	0x10002d84

1a00194c <xTaskGetTickCount>:
1a00194c:	4b01      	ldr	r3, [pc, #4]	; (1a001954 <xTaskGetTickCount+0x8>)
1a00194e:	6818      	ldr	r0, [r3, #0]
1a001950:	4770      	bx	lr
1a001952:	bf00      	nop
1a001954:	10002e00 	.word	0x10002e00

1a001958 <xTaskIncrementTick>:
1a001958:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a00195a:	4b3a      	ldr	r3, [pc, #232]	; (1a001a44 <xTaskIncrementTick+0xec>)
1a00195c:	681b      	ldr	r3, [r3, #0]
1a00195e:	2b00      	cmp	r3, #0
1a001960:	d164      	bne.n	1a001a2c <xTaskIncrementTick+0xd4>
1a001962:	4b39      	ldr	r3, [pc, #228]	; (1a001a48 <xTaskIncrementTick+0xf0>)
1a001964:	681d      	ldr	r5, [r3, #0]
1a001966:	3501      	adds	r5, #1
1a001968:	601d      	str	r5, [r3, #0]
1a00196a:	b9c5      	cbnz	r5, 1a00199e <xTaskIncrementTick+0x46>
1a00196c:	4b37      	ldr	r3, [pc, #220]	; (1a001a4c <xTaskIncrementTick+0xf4>)
1a00196e:	681b      	ldr	r3, [r3, #0]
1a001970:	681b      	ldr	r3, [r3, #0]
1a001972:	b143      	cbz	r3, 1a001986 <xTaskIncrementTick+0x2e>
1a001974:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a001978:	f383 8811 	msr	BASEPRI, r3
1a00197c:	f3bf 8f6f 	isb	sy
1a001980:	f3bf 8f4f 	dsb	sy
1a001984:	e7fe      	b.n	1a001984 <xTaskIncrementTick+0x2c>
1a001986:	4a31      	ldr	r2, [pc, #196]	; (1a001a4c <xTaskIncrementTick+0xf4>)
1a001988:	6811      	ldr	r1, [r2, #0]
1a00198a:	4b31      	ldr	r3, [pc, #196]	; (1a001a50 <xTaskIncrementTick+0xf8>)
1a00198c:	6818      	ldr	r0, [r3, #0]
1a00198e:	6010      	str	r0, [r2, #0]
1a001990:	6019      	str	r1, [r3, #0]
1a001992:	4a30      	ldr	r2, [pc, #192]	; (1a001a54 <xTaskIncrementTick+0xfc>)
1a001994:	6813      	ldr	r3, [r2, #0]
1a001996:	3301      	adds	r3, #1
1a001998:	6013      	str	r3, [r2, #0]
1a00199a:	f7ff fd8d 	bl	1a0014b8 <prvResetNextTaskUnblockTime>
1a00199e:	4b2e      	ldr	r3, [pc, #184]	; (1a001a58 <xTaskIncrementTick+0x100>)
1a0019a0:	681b      	ldr	r3, [r3, #0]
1a0019a2:	42ab      	cmp	r3, r5
1a0019a4:	d938      	bls.n	1a001a18 <xTaskIncrementTick+0xc0>
1a0019a6:	2400      	movs	r4, #0
1a0019a8:	4b2c      	ldr	r3, [pc, #176]	; (1a001a5c <xTaskIncrementTick+0x104>)
1a0019aa:	681b      	ldr	r3, [r3, #0]
1a0019ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
1a0019ae:	eb03 0383 	add.w	r3, r3, r3, lsl #2
1a0019b2:	009a      	lsls	r2, r3, #2
1a0019b4:	4b2a      	ldr	r3, [pc, #168]	; (1a001a60 <xTaskIncrementTick+0x108>)
1a0019b6:	589b      	ldr	r3, [r3, r2]
1a0019b8:	2b01      	cmp	r3, #1
1a0019ba:	d93c      	bls.n	1a001a36 <xTaskIncrementTick+0xde>
1a0019bc:	2401      	movs	r4, #1
1a0019be:	e03a      	b.n	1a001a36 <xTaskIncrementTick+0xde>
1a0019c0:	2401      	movs	r4, #1
1a0019c2:	4b22      	ldr	r3, [pc, #136]	; (1a001a4c <xTaskIncrementTick+0xf4>)
1a0019c4:	681b      	ldr	r3, [r3, #0]
1a0019c6:	681b      	ldr	r3, [r3, #0]
1a0019c8:	b343      	cbz	r3, 1a001a1c <xTaskIncrementTick+0xc4>
1a0019ca:	4b20      	ldr	r3, [pc, #128]	; (1a001a4c <xTaskIncrementTick+0xf4>)
1a0019cc:	681b      	ldr	r3, [r3, #0]
1a0019ce:	68db      	ldr	r3, [r3, #12]
1a0019d0:	68de      	ldr	r6, [r3, #12]
1a0019d2:	6873      	ldr	r3, [r6, #4]
1a0019d4:	429d      	cmp	r5, r3
1a0019d6:	d326      	bcc.n	1a001a26 <xTaskIncrementTick+0xce>
1a0019d8:	1d37      	adds	r7, r6, #4
1a0019da:	4638      	mov	r0, r7
1a0019dc:	f7ff fd33 	bl	1a001446 <uxListRemove>
1a0019e0:	6ab3      	ldr	r3, [r6, #40]	; 0x28
1a0019e2:	b11b      	cbz	r3, 1a0019ec <xTaskIncrementTick+0x94>
1a0019e4:	f106 0018 	add.w	r0, r6, #24
1a0019e8:	f7ff fd2d 	bl	1a001446 <uxListRemove>
1a0019ec:	6af3      	ldr	r3, [r6, #44]	; 0x2c
1a0019ee:	2201      	movs	r2, #1
1a0019f0:	409a      	lsls	r2, r3
1a0019f2:	491c      	ldr	r1, [pc, #112]	; (1a001a64 <xTaskIncrementTick+0x10c>)
1a0019f4:	6808      	ldr	r0, [r1, #0]
1a0019f6:	4302      	orrs	r2, r0
1a0019f8:	600a      	str	r2, [r1, #0]
1a0019fa:	eb03 0383 	add.w	r3, r3, r3, lsl #2
1a0019fe:	009a      	lsls	r2, r3, #2
1a001a00:	4639      	mov	r1, r7
1a001a02:	4817      	ldr	r0, [pc, #92]	; (1a001a60 <xTaskIncrementTick+0x108>)
1a001a04:	4410      	add	r0, r2
1a001a06:	f7ff fcf8 	bl	1a0013fa <vListInsertEnd>
1a001a0a:	6af2      	ldr	r2, [r6, #44]	; 0x2c
1a001a0c:	4b13      	ldr	r3, [pc, #76]	; (1a001a5c <xTaskIncrementTick+0x104>)
1a001a0e:	681b      	ldr	r3, [r3, #0]
1a001a10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
1a001a12:	429a      	cmp	r2, r3
1a001a14:	d2d4      	bcs.n	1a0019c0 <xTaskIncrementTick+0x68>
1a001a16:	e7d4      	b.n	1a0019c2 <xTaskIncrementTick+0x6a>
1a001a18:	2400      	movs	r4, #0
1a001a1a:	e7d2      	b.n	1a0019c2 <xTaskIncrementTick+0x6a>
1a001a1c:	4b0e      	ldr	r3, [pc, #56]	; (1a001a58 <xTaskIncrementTick+0x100>)
1a001a1e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
1a001a22:	601a      	str	r2, [r3, #0]
1a001a24:	e7c0      	b.n	1a0019a8 <xTaskIncrementTick+0x50>
1a001a26:	4a0c      	ldr	r2, [pc, #48]	; (1a001a58 <xTaskIncrementTick+0x100>)
1a001a28:	6013      	str	r3, [r2, #0]
1a001a2a:	e7bd      	b.n	1a0019a8 <xTaskIncrementTick+0x50>
1a001a2c:	4a0e      	ldr	r2, [pc, #56]	; (1a001a68 <xTaskIncrementTick+0x110>)
1a001a2e:	6813      	ldr	r3, [r2, #0]
1a001a30:	3301      	adds	r3, #1
1a001a32:	6013      	str	r3, [r2, #0]
1a001a34:	2400      	movs	r4, #0
1a001a36:	4b0d      	ldr	r3, [pc, #52]	; (1a001a6c <xTaskIncrementTick+0x114>)
1a001a38:	681b      	ldr	r3, [r3, #0]
1a001a3a:	b103      	cbz	r3, 1a001a3e <xTaskIncrementTick+0xe6>
1a001a3c:	2401      	movs	r4, #1
1a001a3e:	4620      	mov	r0, r4
1a001a40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a001a42:	bf00      	nop
1a001a44:	10002d84 	.word	0x10002d84
1a001a48:	10002e00 	.word	0x10002e00
1a001a4c:	10002ce4 	.word	0x10002ce4
1a001a50:	10002ce8 	.word	0x10002ce8
1a001a54:	10002dbc 	.word	0x10002dbc
1a001a58:	10002db8 	.word	0x10002db8
1a001a5c:	10002ce0 	.word	0x10002ce0
1a001a60:	10002cec 	.word	0x10002cec
1a001a64:	10002d8c 	.word	0x10002d8c
1a001a68:	10002d80 	.word	0x10002d80
1a001a6c:	10002e04 	.word	0x10002e04

1a001a70 <xTaskResumeAll>:
1a001a70:	b538      	push	{r3, r4, r5, lr}
1a001a72:	4b33      	ldr	r3, [pc, #204]	; (1a001b40 <xTaskResumeAll+0xd0>)
1a001a74:	681b      	ldr	r3, [r3, #0]
1a001a76:	b943      	cbnz	r3, 1a001a8a <xTaskResumeAll+0x1a>
1a001a78:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a001a7c:	f383 8811 	msr	BASEPRI, r3
1a001a80:	f3bf 8f6f 	isb	sy
1a001a84:	f3bf 8f4f 	dsb	sy
1a001a88:	e7fe      	b.n	1a001a88 <xTaskResumeAll+0x18>
1a001a8a:	f000 fdb3 	bl	1a0025f4 <vPortEnterCritical>
1a001a8e:	4b2c      	ldr	r3, [pc, #176]	; (1a001b40 <xTaskResumeAll+0xd0>)
1a001a90:	681a      	ldr	r2, [r3, #0]
1a001a92:	3a01      	subs	r2, #1
1a001a94:	601a      	str	r2, [r3, #0]
1a001a96:	681b      	ldr	r3, [r3, #0]
1a001a98:	2b00      	cmp	r3, #0
1a001a9a:	d14d      	bne.n	1a001b38 <xTaskResumeAll+0xc8>
1a001a9c:	4b29      	ldr	r3, [pc, #164]	; (1a001b44 <xTaskResumeAll+0xd4>)
1a001a9e:	681b      	ldr	r3, [r3, #0]
1a001aa0:	b923      	cbnz	r3, 1a001aac <xTaskResumeAll+0x3c>
1a001aa2:	2400      	movs	r4, #0
1a001aa4:	f000 fdc8 	bl	1a002638 <vPortExitCritical>
1a001aa8:	4620      	mov	r0, r4
1a001aaa:	bd38      	pop	{r3, r4, r5, pc}
1a001aac:	2400      	movs	r4, #0
1a001aae:	4b26      	ldr	r3, [pc, #152]	; (1a001b48 <xTaskResumeAll+0xd8>)
1a001ab0:	681b      	ldr	r3, [r3, #0]
1a001ab2:	b31b      	cbz	r3, 1a001afc <xTaskResumeAll+0x8c>
1a001ab4:	4b24      	ldr	r3, [pc, #144]	; (1a001b48 <xTaskResumeAll+0xd8>)
1a001ab6:	68db      	ldr	r3, [r3, #12]
1a001ab8:	68dc      	ldr	r4, [r3, #12]
1a001aba:	f104 0018 	add.w	r0, r4, #24
1a001abe:	f7ff fcc2 	bl	1a001446 <uxListRemove>
1a001ac2:	1d25      	adds	r5, r4, #4
1a001ac4:	4628      	mov	r0, r5
1a001ac6:	f7ff fcbe 	bl	1a001446 <uxListRemove>
1a001aca:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
1a001acc:	2201      	movs	r2, #1
1a001ace:	409a      	lsls	r2, r3
1a001ad0:	491e      	ldr	r1, [pc, #120]	; (1a001b4c <xTaskResumeAll+0xdc>)
1a001ad2:	6808      	ldr	r0, [r1, #0]
1a001ad4:	4302      	orrs	r2, r0
1a001ad6:	600a      	str	r2, [r1, #0]
1a001ad8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
1a001adc:	009a      	lsls	r2, r3, #2
1a001ade:	4629      	mov	r1, r5
1a001ae0:	481b      	ldr	r0, [pc, #108]	; (1a001b50 <xTaskResumeAll+0xe0>)
1a001ae2:	4410      	add	r0, r2
1a001ae4:	f7ff fc89 	bl	1a0013fa <vListInsertEnd>
1a001ae8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
1a001aea:	4b1a      	ldr	r3, [pc, #104]	; (1a001b54 <xTaskResumeAll+0xe4>)
1a001aec:	681b      	ldr	r3, [r3, #0]
1a001aee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
1a001af0:	429a      	cmp	r2, r3
1a001af2:	d3dc      	bcc.n	1a001aae <xTaskResumeAll+0x3e>
1a001af4:	4b18      	ldr	r3, [pc, #96]	; (1a001b58 <xTaskResumeAll+0xe8>)
1a001af6:	2201      	movs	r2, #1
1a001af8:	601a      	str	r2, [r3, #0]
1a001afa:	e7d8      	b.n	1a001aae <xTaskResumeAll+0x3e>
1a001afc:	b10c      	cbz	r4, 1a001b02 <xTaskResumeAll+0x92>
1a001afe:	f7ff fcdb 	bl	1a0014b8 <prvResetNextTaskUnblockTime>
1a001b02:	4b16      	ldr	r3, [pc, #88]	; (1a001b5c <xTaskResumeAll+0xec>)
1a001b04:	681c      	ldr	r4, [r3, #0]
1a001b06:	b154      	cbz	r4, 1a001b1e <xTaskResumeAll+0xae>
1a001b08:	f7ff ff26 	bl	1a001958 <xTaskIncrementTick>
1a001b0c:	b110      	cbz	r0, 1a001b14 <xTaskResumeAll+0xa4>
1a001b0e:	4b12      	ldr	r3, [pc, #72]	; (1a001b58 <xTaskResumeAll+0xe8>)
1a001b10:	2201      	movs	r2, #1
1a001b12:	601a      	str	r2, [r3, #0]
1a001b14:	3c01      	subs	r4, #1
1a001b16:	d1f7      	bne.n	1a001b08 <xTaskResumeAll+0x98>
1a001b18:	4b10      	ldr	r3, [pc, #64]	; (1a001b5c <xTaskResumeAll+0xec>)
1a001b1a:	2200      	movs	r2, #0
1a001b1c:	601a      	str	r2, [r3, #0]
1a001b1e:	4b0e      	ldr	r3, [pc, #56]	; (1a001b58 <xTaskResumeAll+0xe8>)
1a001b20:	681b      	ldr	r3, [r3, #0]
1a001b22:	b15b      	cbz	r3, 1a001b3c <xTaskResumeAll+0xcc>
1a001b24:	4b0e      	ldr	r3, [pc, #56]	; (1a001b60 <xTaskResumeAll+0xf0>)
1a001b26:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
1a001b2a:	601a      	str	r2, [r3, #0]
1a001b2c:	f3bf 8f4f 	dsb	sy
1a001b30:	f3bf 8f6f 	isb	sy
1a001b34:	2401      	movs	r4, #1
1a001b36:	e7b5      	b.n	1a001aa4 <xTaskResumeAll+0x34>
1a001b38:	2400      	movs	r4, #0
1a001b3a:	e7b3      	b.n	1a001aa4 <xTaskResumeAll+0x34>
1a001b3c:	2400      	movs	r4, #0
1a001b3e:	e7b1      	b.n	1a001aa4 <xTaskResumeAll+0x34>
1a001b40:	10002d84 	.word	0x10002d84
1a001b44:	10002d78 	.word	0x10002d78
1a001b48:	10002dc0 	.word	0x10002dc0
1a001b4c:	10002d8c 	.word	0x10002d8c
1a001b50:	10002cec 	.word	0x10002cec
1a001b54:	10002ce0 	.word	0x10002ce0
1a001b58:	10002e04 	.word	0x10002e04
1a001b5c:	10002d80 	.word	0x10002d80
1a001b60:	e000ed04 	.word	0xe000ed04

1a001b64 <vTaskSwitchContext>:
1a001b64:	4b2c      	ldr	r3, [pc, #176]	; (1a001c18 <vTaskSwitchContext+0xb4>)
1a001b66:	681b      	ldr	r3, [r3, #0]
1a001b68:	b11b      	cbz	r3, 1a001b72 <vTaskSwitchContext+0xe>
1a001b6a:	4b2c      	ldr	r3, [pc, #176]	; (1a001c1c <vTaskSwitchContext+0xb8>)
1a001b6c:	2201      	movs	r2, #1
1a001b6e:	601a      	str	r2, [r3, #0]
1a001b70:	4770      	bx	lr
1a001b72:	b510      	push	{r4, lr}
1a001b74:	4b29      	ldr	r3, [pc, #164]	; (1a001c1c <vTaskSwitchContext+0xb8>)
1a001b76:	2200      	movs	r2, #0
1a001b78:	601a      	str	r2, [r3, #0]
1a001b7a:	4b29      	ldr	r3, [pc, #164]	; (1a001c20 <vTaskSwitchContext+0xbc>)
1a001b7c:	681b      	ldr	r3, [r3, #0]
1a001b7e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
1a001b80:	681a      	ldr	r2, [r3, #0]
1a001b82:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
1a001b86:	d103      	bne.n	1a001b90 <vTaskSwitchContext+0x2c>
1a001b88:	685a      	ldr	r2, [r3, #4]
1a001b8a:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
1a001b8e:	d01b      	beq.n	1a001bc8 <vTaskSwitchContext+0x64>
1a001b90:	4b23      	ldr	r3, [pc, #140]	; (1a001c20 <vTaskSwitchContext+0xbc>)
1a001b92:	6818      	ldr	r0, [r3, #0]
1a001b94:	6819      	ldr	r1, [r3, #0]
1a001b96:	3134      	adds	r1, #52	; 0x34
1a001b98:	f7ff fc82 	bl	1a0014a0 <vApplicationStackOverflowHook>
1a001b9c:	4b21      	ldr	r3, [pc, #132]	; (1a001c24 <vTaskSwitchContext+0xc0>)
1a001b9e:	681b      	ldr	r3, [r3, #0]
1a001ba0:	fab3 f383 	clz	r3, r3
1a001ba4:	b2db      	uxtb	r3, r3
1a001ba6:	f1c3 031f 	rsb	r3, r3, #31
1a001baa:	eb03 0183 	add.w	r1, r3, r3, lsl #2
1a001bae:	008a      	lsls	r2, r1, #2
1a001bb0:	491d      	ldr	r1, [pc, #116]	; (1a001c28 <vTaskSwitchContext+0xc4>)
1a001bb2:	588a      	ldr	r2, [r1, r2]
1a001bb4:	b98a      	cbnz	r2, 1a001bda <vTaskSwitchContext+0x76>
1a001bb6:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a001bba:	f383 8811 	msr	BASEPRI, r3
1a001bbe:	f3bf 8f6f 	isb	sy
1a001bc2:	f3bf 8f4f 	dsb	sy
1a001bc6:	e7fe      	b.n	1a001bc6 <vTaskSwitchContext+0x62>
1a001bc8:	689a      	ldr	r2, [r3, #8]
1a001bca:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
1a001bce:	d1df      	bne.n	1a001b90 <vTaskSwitchContext+0x2c>
1a001bd0:	68db      	ldr	r3, [r3, #12]
1a001bd2:	f1b3 3fa5 	cmp.w	r3, #2779096485	; 0xa5a5a5a5
1a001bd6:	d1db      	bne.n	1a001b90 <vTaskSwitchContext+0x2c>
1a001bd8:	e7e0      	b.n	1a001b9c <vTaskSwitchContext+0x38>
1a001bda:	4813      	ldr	r0, [pc, #76]	; (1a001c28 <vTaskSwitchContext+0xc4>)
1a001bdc:	009a      	lsls	r2, r3, #2
1a001bde:	18d4      	adds	r4, r2, r3
1a001be0:	00a1      	lsls	r1, r4, #2
1a001be2:	4401      	add	r1, r0
1a001be4:	684c      	ldr	r4, [r1, #4]
1a001be6:	6864      	ldr	r4, [r4, #4]
1a001be8:	604c      	str	r4, [r1, #4]
1a001bea:	441a      	add	r2, r3
1a001bec:	0091      	lsls	r1, r2, #2
1a001bee:	3108      	adds	r1, #8
1a001bf0:	4408      	add	r0, r1
1a001bf2:	4284      	cmp	r4, r0
1a001bf4:	d009      	beq.n	1a001c0a <vTaskSwitchContext+0xa6>
1a001bf6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
1a001bfa:	009a      	lsls	r2, r3, #2
1a001bfc:	4b0a      	ldr	r3, [pc, #40]	; (1a001c28 <vTaskSwitchContext+0xc4>)
1a001bfe:	4413      	add	r3, r2
1a001c00:	685b      	ldr	r3, [r3, #4]
1a001c02:	68da      	ldr	r2, [r3, #12]
1a001c04:	4b06      	ldr	r3, [pc, #24]	; (1a001c20 <vTaskSwitchContext+0xbc>)
1a001c06:	601a      	str	r2, [r3, #0]
1a001c08:	bd10      	pop	{r4, pc}
1a001c0a:	6861      	ldr	r1, [r4, #4]
1a001c0c:	4806      	ldr	r0, [pc, #24]	; (1a001c28 <vTaskSwitchContext+0xc4>)
1a001c0e:	2214      	movs	r2, #20
1a001c10:	fb02 0203 	mla	r2, r2, r3, r0
1a001c14:	6051      	str	r1, [r2, #4]
1a001c16:	e7ee      	b.n	1a001bf6 <vTaskSwitchContext+0x92>
1a001c18:	10002d84 	.word	0x10002d84
1a001c1c:	10002e04 	.word	0x10002e04
1a001c20:	10002ce0 	.word	0x10002ce0
1a001c24:	10002d8c 	.word	0x10002d8c
1a001c28:	10002cec 	.word	0x10002cec

1a001c2c <vTaskPlaceOnEventList>:
1a001c2c:	b940      	cbnz	r0, 1a001c40 <vTaskPlaceOnEventList+0x14>
1a001c2e:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a001c32:	f383 8811 	msr	BASEPRI, r3
1a001c36:	f3bf 8f6f 	isb	sy
1a001c3a:	f3bf 8f4f 	dsb	sy
1a001c3e:	e7fe      	b.n	1a001c3e <vTaskPlaceOnEventList+0x12>
1a001c40:	b510      	push	{r4, lr}
1a001c42:	460c      	mov	r4, r1
1a001c44:	4b04      	ldr	r3, [pc, #16]	; (1a001c58 <vTaskPlaceOnEventList+0x2c>)
1a001c46:	6819      	ldr	r1, [r3, #0]
1a001c48:	3118      	adds	r1, #24
1a001c4a:	f7ff fbe2 	bl	1a001412 <vListInsert>
1a001c4e:	2101      	movs	r1, #1
1a001c50:	4620      	mov	r0, r4
1a001c52:	f7ff fd71 	bl	1a001738 <prvAddCurrentTaskToDelayedList>
1a001c56:	bd10      	pop	{r4, pc}
1a001c58:	10002ce0 	.word	0x10002ce0

1a001c5c <vTaskPlaceOnEventListRestricted>:
1a001c5c:	b538      	push	{r3, r4, r5, lr}
1a001c5e:	b940      	cbnz	r0, 1a001c72 <vTaskPlaceOnEventListRestricted+0x16>
1a001c60:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a001c64:	f383 8811 	msr	BASEPRI, r3
1a001c68:	f3bf 8f6f 	isb	sy
1a001c6c:	f3bf 8f4f 	dsb	sy
1a001c70:	e7fe      	b.n	1a001c70 <vTaskPlaceOnEventListRestricted+0x14>
1a001c72:	460c      	mov	r4, r1
1a001c74:	4615      	mov	r5, r2
1a001c76:	4a06      	ldr	r2, [pc, #24]	; (1a001c90 <vTaskPlaceOnEventListRestricted+0x34>)
1a001c78:	6811      	ldr	r1, [r2, #0]
1a001c7a:	3118      	adds	r1, #24
1a001c7c:	f7ff fbbd 	bl	1a0013fa <vListInsertEnd>
1a001c80:	b10d      	cbz	r5, 1a001c86 <vTaskPlaceOnEventListRestricted+0x2a>
1a001c82:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
1a001c86:	4629      	mov	r1, r5
1a001c88:	4620      	mov	r0, r4
1a001c8a:	f7ff fd55 	bl	1a001738 <prvAddCurrentTaskToDelayedList>
1a001c8e:	bd38      	pop	{r3, r4, r5, pc}
1a001c90:	10002ce0 	.word	0x10002ce0

1a001c94 <xTaskRemoveFromEventList>:
1a001c94:	b538      	push	{r3, r4, r5, lr}
1a001c96:	68c3      	ldr	r3, [r0, #12]
1a001c98:	68dc      	ldr	r4, [r3, #12]
1a001c9a:	b944      	cbnz	r4, 1a001cae <xTaskRemoveFromEventList+0x1a>
1a001c9c:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a001ca0:	f383 8811 	msr	BASEPRI, r3
1a001ca4:	f3bf 8f6f 	isb	sy
1a001ca8:	f3bf 8f4f 	dsb	sy
1a001cac:	e7fe      	b.n	1a001cac <xTaskRemoveFromEventList+0x18>
1a001cae:	f104 0518 	add.w	r5, r4, #24
1a001cb2:	4628      	mov	r0, r5
1a001cb4:	f7ff fbc7 	bl	1a001446 <uxListRemove>
1a001cb8:	4b13      	ldr	r3, [pc, #76]	; (1a001d08 <xTaskRemoveFromEventList+0x74>)
1a001cba:	681b      	ldr	r3, [r3, #0]
1a001cbc:	b9e3      	cbnz	r3, 1a001cf8 <xTaskRemoveFromEventList+0x64>
1a001cbe:	1d25      	adds	r5, r4, #4
1a001cc0:	4628      	mov	r0, r5
1a001cc2:	f7ff fbc0 	bl	1a001446 <uxListRemove>
1a001cc6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
1a001cc8:	2201      	movs	r2, #1
1a001cca:	409a      	lsls	r2, r3
1a001ccc:	490f      	ldr	r1, [pc, #60]	; (1a001d0c <xTaskRemoveFromEventList+0x78>)
1a001cce:	6808      	ldr	r0, [r1, #0]
1a001cd0:	4302      	orrs	r2, r0
1a001cd2:	600a      	str	r2, [r1, #0]
1a001cd4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
1a001cd8:	009a      	lsls	r2, r3, #2
1a001cda:	4629      	mov	r1, r5
1a001cdc:	480c      	ldr	r0, [pc, #48]	; (1a001d10 <xTaskRemoveFromEventList+0x7c>)
1a001cde:	4410      	add	r0, r2
1a001ce0:	f7ff fb8b 	bl	1a0013fa <vListInsertEnd>
1a001ce4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
1a001ce6:	4b0b      	ldr	r3, [pc, #44]	; (1a001d14 <xTaskRemoveFromEventList+0x80>)
1a001ce8:	681b      	ldr	r3, [r3, #0]
1a001cea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
1a001cec:	429a      	cmp	r2, r3
1a001cee:	d908      	bls.n	1a001d02 <xTaskRemoveFromEventList+0x6e>
1a001cf0:	2001      	movs	r0, #1
1a001cf2:	4b09      	ldr	r3, [pc, #36]	; (1a001d18 <xTaskRemoveFromEventList+0x84>)
1a001cf4:	6018      	str	r0, [r3, #0]
1a001cf6:	bd38      	pop	{r3, r4, r5, pc}
1a001cf8:	4629      	mov	r1, r5
1a001cfa:	4808      	ldr	r0, [pc, #32]	; (1a001d1c <xTaskRemoveFromEventList+0x88>)
1a001cfc:	f7ff fb7d 	bl	1a0013fa <vListInsertEnd>
1a001d00:	e7f0      	b.n	1a001ce4 <xTaskRemoveFromEventList+0x50>
1a001d02:	2000      	movs	r0, #0
1a001d04:	e7f7      	b.n	1a001cf6 <xTaskRemoveFromEventList+0x62>
1a001d06:	bf00      	nop
1a001d08:	10002d84 	.word	0x10002d84
1a001d0c:	10002d8c 	.word	0x10002d8c
1a001d10:	10002cec 	.word	0x10002cec
1a001d14:	10002ce0 	.word	0x10002ce0
1a001d18:	10002e04 	.word	0x10002e04
1a001d1c:	10002dc0 	.word	0x10002dc0

1a001d20 <vTaskInternalSetTimeOutState>:
1a001d20:	4b03      	ldr	r3, [pc, #12]	; (1a001d30 <vTaskInternalSetTimeOutState+0x10>)
1a001d22:	681b      	ldr	r3, [r3, #0]
1a001d24:	6003      	str	r3, [r0, #0]
1a001d26:	4b03      	ldr	r3, [pc, #12]	; (1a001d34 <vTaskInternalSetTimeOutState+0x14>)
1a001d28:	681b      	ldr	r3, [r3, #0]
1a001d2a:	6043      	str	r3, [r0, #4]
1a001d2c:	4770      	bx	lr
1a001d2e:	bf00      	nop
1a001d30:	10002dbc 	.word	0x10002dbc
1a001d34:	10002e00 	.word	0x10002e00

1a001d38 <xTaskCheckForTimeOut>:
1a001d38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a001d3a:	b150      	cbz	r0, 1a001d52 <xTaskCheckForTimeOut+0x1a>
1a001d3c:	4605      	mov	r5, r0
1a001d3e:	b989      	cbnz	r1, 1a001d64 <xTaskCheckForTimeOut+0x2c>
1a001d40:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a001d44:	f383 8811 	msr	BASEPRI, r3
1a001d48:	f3bf 8f6f 	isb	sy
1a001d4c:	f3bf 8f4f 	dsb	sy
1a001d50:	e7fe      	b.n	1a001d50 <xTaskCheckForTimeOut+0x18>
1a001d52:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a001d56:	f383 8811 	msr	BASEPRI, r3
1a001d5a:	f3bf 8f6f 	isb	sy
1a001d5e:	f3bf 8f4f 	dsb	sy
1a001d62:	e7fe      	b.n	1a001d62 <xTaskCheckForTimeOut+0x2a>
1a001d64:	460c      	mov	r4, r1
1a001d66:	f000 fc45 	bl	1a0025f4 <vPortEnterCritical>
1a001d6a:	4b11      	ldr	r3, [pc, #68]	; (1a001db0 <xTaskCheckForTimeOut+0x78>)
1a001d6c:	6819      	ldr	r1, [r3, #0]
1a001d6e:	6868      	ldr	r0, [r5, #4]
1a001d70:	1a0a      	subs	r2, r1, r0
1a001d72:	6823      	ldr	r3, [r4, #0]
1a001d74:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
1a001d78:	d016      	beq.n	1a001da8 <xTaskCheckForTimeOut+0x70>
1a001d7a:	682f      	ldr	r7, [r5, #0]
1a001d7c:	4e0d      	ldr	r6, [pc, #52]	; (1a001db4 <xTaskCheckForTimeOut+0x7c>)
1a001d7e:	6836      	ldr	r6, [r6, #0]
1a001d80:	42b7      	cmp	r7, r6
1a001d82:	d001      	beq.n	1a001d88 <xTaskCheckForTimeOut+0x50>
1a001d84:	4288      	cmp	r0, r1
1a001d86:	d911      	bls.n	1a001dac <xTaskCheckForTimeOut+0x74>
1a001d88:	4293      	cmp	r3, r2
1a001d8a:	d803      	bhi.n	1a001d94 <xTaskCheckForTimeOut+0x5c>
1a001d8c:	2300      	movs	r3, #0
1a001d8e:	6023      	str	r3, [r4, #0]
1a001d90:	2401      	movs	r4, #1
1a001d92:	e005      	b.n	1a001da0 <xTaskCheckForTimeOut+0x68>
1a001d94:	1a9b      	subs	r3, r3, r2
1a001d96:	6023      	str	r3, [r4, #0]
1a001d98:	4628      	mov	r0, r5
1a001d9a:	f7ff ffc1 	bl	1a001d20 <vTaskInternalSetTimeOutState>
1a001d9e:	2400      	movs	r4, #0
1a001da0:	f000 fc4a 	bl	1a002638 <vPortExitCritical>
1a001da4:	4620      	mov	r0, r4
1a001da6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a001da8:	2400      	movs	r4, #0
1a001daa:	e7f9      	b.n	1a001da0 <xTaskCheckForTimeOut+0x68>
1a001dac:	2401      	movs	r4, #1
1a001dae:	e7f7      	b.n	1a001da0 <xTaskCheckForTimeOut+0x68>
1a001db0:	10002e00 	.word	0x10002e00
1a001db4:	10002dbc 	.word	0x10002dbc

1a001db8 <vTaskMissedYield>:
1a001db8:	4b01      	ldr	r3, [pc, #4]	; (1a001dc0 <vTaskMissedYield+0x8>)
1a001dba:	2201      	movs	r2, #1
1a001dbc:	601a      	str	r2, [r3, #0]
1a001dbe:	4770      	bx	lr
1a001dc0:	10002e04 	.word	0x10002e04

1a001dc4 <uxTaskGetStackHighWaterMark>:
1a001dc4:	b508      	push	{r3, lr}
1a001dc6:	4603      	mov	r3, r0
1a001dc8:	b118      	cbz	r0, 1a001dd2 <uxTaskGetStackHighWaterMark+0xe>
1a001dca:	6b18      	ldr	r0, [r3, #48]	; 0x30
1a001dcc:	f7ff fb6a 	bl	1a0014a4 <prvTaskCheckFreeStackSpace>
1a001dd0:	bd08      	pop	{r3, pc}
1a001dd2:	4b01      	ldr	r3, [pc, #4]	; (1a001dd8 <uxTaskGetStackHighWaterMark+0x14>)
1a001dd4:	681b      	ldr	r3, [r3, #0]
1a001dd6:	e7f8      	b.n	1a001dca <uxTaskGetStackHighWaterMark+0x6>
1a001dd8:	10002ce0 	.word	0x10002ce0

1a001ddc <xTaskGetSchedulerState>:
1a001ddc:	4b05      	ldr	r3, [pc, #20]	; (1a001df4 <xTaskGetSchedulerState+0x18>)
1a001dde:	681b      	ldr	r3, [r3, #0]
1a001de0:	b133      	cbz	r3, 1a001df0 <xTaskGetSchedulerState+0x14>
1a001de2:	4b05      	ldr	r3, [pc, #20]	; (1a001df8 <xTaskGetSchedulerState+0x1c>)
1a001de4:	681b      	ldr	r3, [r3, #0]
1a001de6:	b10b      	cbz	r3, 1a001dec <xTaskGetSchedulerState+0x10>
1a001de8:	2000      	movs	r0, #0
1a001dea:	4770      	bx	lr
1a001dec:	2002      	movs	r0, #2
1a001dee:	4770      	bx	lr
1a001df0:	2001      	movs	r0, #1
1a001df2:	4770      	bx	lr
1a001df4:	10002dd4 	.word	0x10002dd4
1a001df8:	10002d84 	.word	0x10002d84

1a001dfc <xTaskPriorityDisinherit>:
1a001dfc:	2800      	cmp	r0, #0
1a001dfe:	d049      	beq.n	1a001e94 <xTaskPriorityDisinherit+0x98>
1a001e00:	b538      	push	{r3, r4, r5, lr}
1a001e02:	4604      	mov	r4, r0
1a001e04:	4a26      	ldr	r2, [pc, #152]	; (1a001ea0 <xTaskPriorityDisinherit+0xa4>)
1a001e06:	6812      	ldr	r2, [r2, #0]
1a001e08:	4282      	cmp	r2, r0
1a001e0a:	d008      	beq.n	1a001e1e <xTaskPriorityDisinherit+0x22>
1a001e0c:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a001e10:	f383 8811 	msr	BASEPRI, r3
1a001e14:	f3bf 8f6f 	isb	sy
1a001e18:	f3bf 8f4f 	dsb	sy
1a001e1c:	e7fe      	b.n	1a001e1c <xTaskPriorityDisinherit+0x20>
1a001e1e:	6d42      	ldr	r2, [r0, #84]	; 0x54
1a001e20:	b942      	cbnz	r2, 1a001e34 <xTaskPriorityDisinherit+0x38>
1a001e22:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a001e26:	f383 8811 	msr	BASEPRI, r3
1a001e2a:	f3bf 8f6f 	isb	sy
1a001e2e:	f3bf 8f4f 	dsb	sy
1a001e32:	e7fe      	b.n	1a001e32 <xTaskPriorityDisinherit+0x36>
1a001e34:	3a01      	subs	r2, #1
1a001e36:	6542      	str	r2, [r0, #84]	; 0x54
1a001e38:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
1a001e3a:	6d21      	ldr	r1, [r4, #80]	; 0x50
1a001e3c:	4288      	cmp	r0, r1
1a001e3e:	d02b      	beq.n	1a001e98 <xTaskPriorityDisinherit+0x9c>
1a001e40:	bb62      	cbnz	r2, 1a001e9c <xTaskPriorityDisinherit+0xa0>
1a001e42:	1d25      	adds	r5, r4, #4
1a001e44:	4628      	mov	r0, r5
1a001e46:	f7ff fafe 	bl	1a001446 <uxListRemove>
1a001e4a:	b970      	cbnz	r0, 1a001e6a <xTaskPriorityDisinherit+0x6e>
1a001e4c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
1a001e4e:	2314      	movs	r3, #20
1a001e50:	fb03 f302 	mul.w	r3, r3, r2
1a001e54:	4913      	ldr	r1, [pc, #76]	; (1a001ea4 <xTaskPriorityDisinherit+0xa8>)
1a001e56:	58cb      	ldr	r3, [r1, r3]
1a001e58:	b93b      	cbnz	r3, 1a001e6a <xTaskPriorityDisinherit+0x6e>
1a001e5a:	2301      	movs	r3, #1
1a001e5c:	fa03 f202 	lsl.w	r2, r3, r2
1a001e60:	4911      	ldr	r1, [pc, #68]	; (1a001ea8 <xTaskPriorityDisinherit+0xac>)
1a001e62:	680b      	ldr	r3, [r1, #0]
1a001e64:	ea23 0302 	bic.w	r3, r3, r2
1a001e68:	600b      	str	r3, [r1, #0]
1a001e6a:	6d23      	ldr	r3, [r4, #80]	; 0x50
1a001e6c:	62e3      	str	r3, [r4, #44]	; 0x2c
1a001e6e:	f1c3 0207 	rsb	r2, r3, #7
1a001e72:	61a2      	str	r2, [r4, #24]
1a001e74:	2401      	movs	r4, #1
1a001e76:	fa04 f203 	lsl.w	r2, r4, r3
1a001e7a:	490b      	ldr	r1, [pc, #44]	; (1a001ea8 <xTaskPriorityDisinherit+0xac>)
1a001e7c:	6808      	ldr	r0, [r1, #0]
1a001e7e:	4302      	orrs	r2, r0
1a001e80:	600a      	str	r2, [r1, #0]
1a001e82:	4629      	mov	r1, r5
1a001e84:	4a07      	ldr	r2, [pc, #28]	; (1a001ea4 <xTaskPriorityDisinherit+0xa8>)
1a001e86:	2014      	movs	r0, #20
1a001e88:	fb00 2003 	mla	r0, r0, r3, r2
1a001e8c:	f7ff fab5 	bl	1a0013fa <vListInsertEnd>
1a001e90:	4620      	mov	r0, r4
1a001e92:	bd38      	pop	{r3, r4, r5, pc}
1a001e94:	2000      	movs	r0, #0
1a001e96:	4770      	bx	lr
1a001e98:	2000      	movs	r0, #0
1a001e9a:	e7fa      	b.n	1a001e92 <xTaskPriorityDisinherit+0x96>
1a001e9c:	2000      	movs	r0, #0
1a001e9e:	e7f8      	b.n	1a001e92 <xTaskPriorityDisinherit+0x96>
1a001ea0:	10002ce0 	.word	0x10002ce0
1a001ea4:	10002cec 	.word	0x10002cec
1a001ea8:	10002d8c 	.word	0x10002d8c

1a001eac <xTaskNotifyWait>:
1a001eac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a001eae:	4607      	mov	r7, r0
1a001eb0:	460d      	mov	r5, r1
1a001eb2:	4614      	mov	r4, r2
1a001eb4:	461e      	mov	r6, r3
1a001eb6:	f000 fb9d 	bl	1a0025f4 <vPortEnterCritical>
1a001eba:	4b20      	ldr	r3, [pc, #128]	; (1a001f3c <xTaskNotifyWait+0x90>)
1a001ebc:	681b      	ldr	r3, [r3, #0]
1a001ebe:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
1a001ec2:	b2db      	uxtb	r3, r3
1a001ec4:	2b02      	cmp	r3, #2
1a001ec6:	d00a      	beq.n	1a001ede <xTaskNotifyWait+0x32>
1a001ec8:	4b1c      	ldr	r3, [pc, #112]	; (1a001f3c <xTaskNotifyWait+0x90>)
1a001eca:	681a      	ldr	r2, [r3, #0]
1a001ecc:	6d90      	ldr	r0, [r2, #88]	; 0x58
1a001ece:	ea20 0007 	bic.w	r0, r0, r7
1a001ed2:	6590      	str	r0, [r2, #88]	; 0x58
1a001ed4:	681b      	ldr	r3, [r3, #0]
1a001ed6:	2201      	movs	r2, #1
1a001ed8:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
1a001edc:	b9ce      	cbnz	r6, 1a001f12 <xTaskNotifyWait+0x66>
1a001ede:	f000 fbab 	bl	1a002638 <vPortExitCritical>
1a001ee2:	f000 fb87 	bl	1a0025f4 <vPortEnterCritical>
1a001ee6:	b11c      	cbz	r4, 1a001ef0 <xTaskNotifyWait+0x44>
1a001ee8:	4b14      	ldr	r3, [pc, #80]	; (1a001f3c <xTaskNotifyWait+0x90>)
1a001eea:	681b      	ldr	r3, [r3, #0]
1a001eec:	6d9b      	ldr	r3, [r3, #88]	; 0x58
1a001eee:	6023      	str	r3, [r4, #0]
1a001ef0:	4b12      	ldr	r3, [pc, #72]	; (1a001f3c <xTaskNotifyWait+0x90>)
1a001ef2:	681b      	ldr	r3, [r3, #0]
1a001ef4:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
1a001ef8:	b2db      	uxtb	r3, r3
1a001efa:	2b02      	cmp	r3, #2
1a001efc:	d016      	beq.n	1a001f2c <xTaskNotifyWait+0x80>
1a001efe:	2400      	movs	r4, #0
1a001f00:	4b0e      	ldr	r3, [pc, #56]	; (1a001f3c <xTaskNotifyWait+0x90>)
1a001f02:	681b      	ldr	r3, [r3, #0]
1a001f04:	2200      	movs	r2, #0
1a001f06:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
1a001f0a:	f000 fb95 	bl	1a002638 <vPortExitCritical>
1a001f0e:	4620      	mov	r0, r4
1a001f10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a001f12:	4611      	mov	r1, r2
1a001f14:	4630      	mov	r0, r6
1a001f16:	f7ff fc0f 	bl	1a001738 <prvAddCurrentTaskToDelayedList>
1a001f1a:	4b09      	ldr	r3, [pc, #36]	; (1a001f40 <xTaskNotifyWait+0x94>)
1a001f1c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
1a001f20:	601a      	str	r2, [r3, #0]
1a001f22:	f3bf 8f4f 	dsb	sy
1a001f26:	f3bf 8f6f 	isb	sy
1a001f2a:	e7d8      	b.n	1a001ede <xTaskNotifyWait+0x32>
1a001f2c:	4b03      	ldr	r3, [pc, #12]	; (1a001f3c <xTaskNotifyWait+0x90>)
1a001f2e:	681a      	ldr	r2, [r3, #0]
1a001f30:	6d93      	ldr	r3, [r2, #88]	; 0x58
1a001f32:	ea23 0505 	bic.w	r5, r3, r5
1a001f36:	6595      	str	r5, [r2, #88]	; 0x58
1a001f38:	2401      	movs	r4, #1
1a001f3a:	e7e1      	b.n	1a001f00 <xTaskNotifyWait+0x54>
1a001f3c:	10002ce0 	.word	0x10002ce0
1a001f40:	e000ed04 	.word	0xe000ed04

1a001f44 <xTaskGenericNotifyFromISR>:
1a001f44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a001f48:	9e08      	ldr	r6, [sp, #32]
1a001f4a:	b940      	cbnz	r0, 1a001f5e <xTaskGenericNotifyFromISR+0x1a>
1a001f4c:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a001f50:	f383 8811 	msr	BASEPRI, r3
1a001f54:	f3bf 8f6f 	isb	sy
1a001f58:	f3bf 8f4f 	dsb	sy
1a001f5c:	e7fe      	b.n	1a001f5c <xTaskGenericNotifyFromISR+0x18>
1a001f5e:	4604      	mov	r4, r0
1a001f60:	4699      	mov	r9, r3
1a001f62:	4615      	mov	r5, r2
1a001f64:	4688      	mov	r8, r1
1a001f66:	f000 fc6f 	bl	1a002848 <vPortValidateInterruptPriority>
1a001f6a:	f3ef 8711 	mrs	r7, BASEPRI
1a001f6e:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a001f72:	f383 8811 	msr	BASEPRI, r3
1a001f76:	f3bf 8f6f 	isb	sy
1a001f7a:	f3bf 8f4f 	dsb	sy
1a001f7e:	f1b9 0f00 	cmp.w	r9, #0
1a001f82:	d002      	beq.n	1a001f8a <xTaskGenericNotifyFromISR+0x46>
1a001f84:	6da3      	ldr	r3, [r4, #88]	; 0x58
1a001f86:	f8c9 3000 	str.w	r3, [r9]
1a001f8a:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
1a001f8e:	b2db      	uxtb	r3, r3
1a001f90:	2202      	movs	r2, #2
1a001f92:	f884 205c 	strb.w	r2, [r4, #92]	; 0x5c
1a001f96:	1e6a      	subs	r2, r5, #1
1a001f98:	2a03      	cmp	r2, #3
1a001f9a:	d81e      	bhi.n	1a001fda <xTaskGenericNotifyFromISR+0x96>
1a001f9c:	e8df f002 	tbb	[pc, r2]
1a001fa0:	17130e02 	.word	0x17130e02
1a001fa4:	6da2      	ldr	r2, [r4, #88]	; 0x58
1a001fa6:	ea42 0208 	orr.w	r2, r2, r8
1a001faa:	65a2      	str	r2, [r4, #88]	; 0x58
1a001fac:	2501      	movs	r5, #1
1a001fae:	2b01      	cmp	r3, #1
1a001fb0:	d017      	beq.n	1a001fe2 <xTaskGenericNotifyFromISR+0x9e>
1a001fb2:	f387 8811 	msr	BASEPRI, r7
1a001fb6:	4628      	mov	r0, r5
1a001fb8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a001fbc:	6da2      	ldr	r2, [r4, #88]	; 0x58
1a001fbe:	3201      	adds	r2, #1
1a001fc0:	65a2      	str	r2, [r4, #88]	; 0x58
1a001fc2:	2501      	movs	r5, #1
1a001fc4:	e7f3      	b.n	1a001fae <xTaskGenericNotifyFromISR+0x6a>
1a001fc6:	f8c4 8058 	str.w	r8, [r4, #88]	; 0x58
1a001fca:	2501      	movs	r5, #1
1a001fcc:	e7ef      	b.n	1a001fae <xTaskGenericNotifyFromISR+0x6a>
1a001fce:	2b02      	cmp	r3, #2
1a001fd0:	d005      	beq.n	1a001fde <xTaskGenericNotifyFromISR+0x9a>
1a001fd2:	f8c4 8058 	str.w	r8, [r4, #88]	; 0x58
1a001fd6:	2501      	movs	r5, #1
1a001fd8:	e7e9      	b.n	1a001fae <xTaskGenericNotifyFromISR+0x6a>
1a001fda:	2501      	movs	r5, #1
1a001fdc:	e7e7      	b.n	1a001fae <xTaskGenericNotifyFromISR+0x6a>
1a001fde:	2500      	movs	r5, #0
1a001fe0:	e7e5      	b.n	1a001fae <xTaskGenericNotifyFromISR+0x6a>
1a001fe2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
1a001fe4:	b143      	cbz	r3, 1a001ff8 <xTaskGenericNotifyFromISR+0xb4>
1a001fe6:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a001fea:	f383 8811 	msr	BASEPRI, r3
1a001fee:	f3bf 8f6f 	isb	sy
1a001ff2:	f3bf 8f4f 	dsb	sy
1a001ff6:	e7fe      	b.n	1a001ff6 <xTaskGenericNotifyFromISR+0xb2>
1a001ff8:	4b14      	ldr	r3, [pc, #80]	; (1a00204c <xTaskGenericNotifyFromISR+0x108>)
1a001ffa:	681b      	ldr	r3, [r3, #0]
1a001ffc:	b9e3      	cbnz	r3, 1a002038 <xTaskGenericNotifyFromISR+0xf4>
1a001ffe:	f104 0804 	add.w	r8, r4, #4
1a002002:	4640      	mov	r0, r8
1a002004:	f7ff fa1f 	bl	1a001446 <uxListRemove>
1a002008:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
1a00200a:	2301      	movs	r3, #1
1a00200c:	4093      	lsls	r3, r2
1a00200e:	4910      	ldr	r1, [pc, #64]	; (1a002050 <xTaskGenericNotifyFromISR+0x10c>)
1a002010:	6808      	ldr	r0, [r1, #0]
1a002012:	4303      	orrs	r3, r0
1a002014:	600b      	str	r3, [r1, #0]
1a002016:	4641      	mov	r1, r8
1a002018:	4b0e      	ldr	r3, [pc, #56]	; (1a002054 <xTaskGenericNotifyFromISR+0x110>)
1a00201a:	2014      	movs	r0, #20
1a00201c:	fb00 3002 	mla	r0, r0, r2, r3
1a002020:	f7ff f9eb 	bl	1a0013fa <vListInsertEnd>
1a002024:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
1a002026:	4b0c      	ldr	r3, [pc, #48]	; (1a002058 <xTaskGenericNotifyFromISR+0x114>)
1a002028:	681b      	ldr	r3, [r3, #0]
1a00202a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
1a00202c:	429a      	cmp	r2, r3
1a00202e:	d9c0      	bls.n	1a001fb2 <xTaskGenericNotifyFromISR+0x6e>
1a002030:	b146      	cbz	r6, 1a002044 <xTaskGenericNotifyFromISR+0x100>
1a002032:	2301      	movs	r3, #1
1a002034:	6033      	str	r3, [r6, #0]
1a002036:	e7bc      	b.n	1a001fb2 <xTaskGenericNotifyFromISR+0x6e>
1a002038:	f104 0118 	add.w	r1, r4, #24
1a00203c:	4807      	ldr	r0, [pc, #28]	; (1a00205c <xTaskGenericNotifyFromISR+0x118>)
1a00203e:	f7ff f9dc 	bl	1a0013fa <vListInsertEnd>
1a002042:	e7ef      	b.n	1a002024 <xTaskGenericNotifyFromISR+0xe0>
1a002044:	4b06      	ldr	r3, [pc, #24]	; (1a002060 <xTaskGenericNotifyFromISR+0x11c>)
1a002046:	2201      	movs	r2, #1
1a002048:	601a      	str	r2, [r3, #0]
1a00204a:	e7b2      	b.n	1a001fb2 <xTaskGenericNotifyFromISR+0x6e>
1a00204c:	10002d84 	.word	0x10002d84
1a002050:	10002d8c 	.word	0x10002d8c
1a002054:	10002cec 	.word	0x10002cec
1a002058:	10002ce0 	.word	0x10002ce0
1a00205c:	10002dc0 	.word	0x10002dc0
1a002060:	10002e04 	.word	0x10002e04

1a002064 <prvGetNextExpireTime>:
1a002064:	4b06      	ldr	r3, [pc, #24]	; (1a002080 <prvGetNextExpireTime+0x1c>)
1a002066:	681a      	ldr	r2, [r3, #0]
1a002068:	6813      	ldr	r3, [r2, #0]
1a00206a:	fab3 f383 	clz	r3, r3
1a00206e:	095b      	lsrs	r3, r3, #5
1a002070:	6003      	str	r3, [r0, #0]
1a002072:	b913      	cbnz	r3, 1a00207a <prvGetNextExpireTime+0x16>
1a002074:	68d3      	ldr	r3, [r2, #12]
1a002076:	6818      	ldr	r0, [r3, #0]
1a002078:	4770      	bx	lr
1a00207a:	2000      	movs	r0, #0
1a00207c:	4770      	bx	lr
1a00207e:	bf00      	nop
1a002080:	10002e08 	.word	0x10002e08

1a002084 <prvInsertTimerInActiveList>:
1a002084:	b508      	push	{r3, lr}
1a002086:	6041      	str	r1, [r0, #4]
1a002088:	6100      	str	r0, [r0, #16]
1a00208a:	4291      	cmp	r1, r2
1a00208c:	d80c      	bhi.n	1a0020a8 <prvInsertTimerInActiveList+0x24>
1a00208e:	1ad2      	subs	r2, r2, r3
1a002090:	6983      	ldr	r3, [r0, #24]
1a002092:	429a      	cmp	r2, r3
1a002094:	d301      	bcc.n	1a00209a <prvInsertTimerInActiveList+0x16>
1a002096:	2001      	movs	r0, #1
1a002098:	e010      	b.n	1a0020bc <prvInsertTimerInActiveList+0x38>
1a00209a:	1d01      	adds	r1, r0, #4
1a00209c:	4b09      	ldr	r3, [pc, #36]	; (1a0020c4 <prvInsertTimerInActiveList+0x40>)
1a00209e:	6818      	ldr	r0, [r3, #0]
1a0020a0:	f7ff f9b7 	bl	1a001412 <vListInsert>
1a0020a4:	2000      	movs	r0, #0
1a0020a6:	e009      	b.n	1a0020bc <prvInsertTimerInActiveList+0x38>
1a0020a8:	429a      	cmp	r2, r3
1a0020aa:	d201      	bcs.n	1a0020b0 <prvInsertTimerInActiveList+0x2c>
1a0020ac:	4299      	cmp	r1, r3
1a0020ae:	d206      	bcs.n	1a0020be <prvInsertTimerInActiveList+0x3a>
1a0020b0:	1d01      	adds	r1, r0, #4
1a0020b2:	4b05      	ldr	r3, [pc, #20]	; (1a0020c8 <prvInsertTimerInActiveList+0x44>)
1a0020b4:	6818      	ldr	r0, [r3, #0]
1a0020b6:	f7ff f9ac 	bl	1a001412 <vListInsert>
1a0020ba:	2000      	movs	r0, #0
1a0020bc:	bd08      	pop	{r3, pc}
1a0020be:	2001      	movs	r0, #1
1a0020c0:	e7fc      	b.n	1a0020bc <prvInsertTimerInActiveList+0x38>
1a0020c2:	bf00      	nop
1a0020c4:	10002e0c 	.word	0x10002e0c
1a0020c8:	10002e08 	.word	0x10002e08

1a0020cc <prvCheckForValidListAndQueue>:
1a0020cc:	b530      	push	{r4, r5, lr}
1a0020ce:	b083      	sub	sp, #12
1a0020d0:	f000 fa90 	bl	1a0025f4 <vPortEnterCritical>
1a0020d4:	4b11      	ldr	r3, [pc, #68]	; (1a00211c <prvCheckForValidListAndQueue+0x50>)
1a0020d6:	681b      	ldr	r3, [r3, #0]
1a0020d8:	b11b      	cbz	r3, 1a0020e2 <prvCheckForValidListAndQueue+0x16>
1a0020da:	f000 faad 	bl	1a002638 <vPortExitCritical>
1a0020de:	b003      	add	sp, #12
1a0020e0:	bd30      	pop	{r4, r5, pc}
1a0020e2:	4d0f      	ldr	r5, [pc, #60]	; (1a002120 <prvCheckForValidListAndQueue+0x54>)
1a0020e4:	4628      	mov	r0, r5
1a0020e6:	f7ff f97a 	bl	1a0013de <vListInitialise>
1a0020ea:	4c0e      	ldr	r4, [pc, #56]	; (1a002124 <prvCheckForValidListAndQueue+0x58>)
1a0020ec:	4620      	mov	r0, r4
1a0020ee:	f7ff f976 	bl	1a0013de <vListInitialise>
1a0020f2:	4b0d      	ldr	r3, [pc, #52]	; (1a002128 <prvCheckForValidListAndQueue+0x5c>)
1a0020f4:	601d      	str	r5, [r3, #0]
1a0020f6:	4b0d      	ldr	r3, [pc, #52]	; (1a00212c <prvCheckForValidListAndQueue+0x60>)
1a0020f8:	601c      	str	r4, [r3, #0]
1a0020fa:	2300      	movs	r3, #0
1a0020fc:	9300      	str	r3, [sp, #0]
1a0020fe:	4b0c      	ldr	r3, [pc, #48]	; (1a002130 <prvCheckForValidListAndQueue+0x64>)
1a002100:	4a0c      	ldr	r2, [pc, #48]	; (1a002134 <prvCheckForValidListAndQueue+0x68>)
1a002102:	2110      	movs	r1, #16
1a002104:	200a      	movs	r0, #10
1a002106:	f7fe fed6 	bl	1a000eb6 <xQueueGenericCreateStatic>
1a00210a:	4b04      	ldr	r3, [pc, #16]	; (1a00211c <prvCheckForValidListAndQueue+0x50>)
1a00210c:	6018      	str	r0, [r3, #0]
1a00210e:	2800      	cmp	r0, #0
1a002110:	d0e3      	beq.n	1a0020da <prvCheckForValidListAndQueue+0xe>
1a002112:	4909      	ldr	r1, [pc, #36]	; (1a002138 <prvCheckForValidListAndQueue+0x6c>)
1a002114:	f7ff f926 	bl	1a001364 <vQueueAddToRegistry>
1a002118:	e7df      	b.n	1a0020da <prvCheckForValidListAndQueue+0xe>
1a00211a:	bf00      	nop
1a00211c:	10002f2c 	.word	0x10002f2c
1a002120:	10002eb0 	.word	0x10002eb0
1a002124:	10002ec4 	.word	0x10002ec4
1a002128:	10002e08 	.word	0x10002e08
1a00212c:	10002e0c 	.word	0x10002e0c
1a002130:	10002edc 	.word	0x10002edc
1a002134:	10002e10 	.word	0x10002e10
1a002138:	1a004ad4 	.word	0x1a004ad4

1a00213c <prvInitialiseNewTimer>:
1a00213c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a002140:	9c07      	ldr	r4, [sp, #28]
1a002142:	b941      	cbnz	r1, 1a002156 <prvInitialiseNewTimer+0x1a>
1a002144:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a002148:	f383 8811 	msr	BASEPRI, r3
1a00214c:	f3bf 8f6f 	isb	sy
1a002150:	f3bf 8f4f 	dsb	sy
1a002154:	e7fe      	b.n	1a002154 <prvInitialiseNewTimer+0x18>
1a002156:	460f      	mov	r7, r1
1a002158:	b174      	cbz	r4, 1a002178 <prvInitialiseNewTimer+0x3c>
1a00215a:	461d      	mov	r5, r3
1a00215c:	4616      	mov	r6, r2
1a00215e:	4680      	mov	r8, r0
1a002160:	f7ff ffb4 	bl	1a0020cc <prvCheckForValidListAndQueue>
1a002164:	f8c4 8000 	str.w	r8, [r4]
1a002168:	61a7      	str	r7, [r4, #24]
1a00216a:	61e6      	str	r6, [r4, #28]
1a00216c:	6225      	str	r5, [r4, #32]
1a00216e:	9b06      	ldr	r3, [sp, #24]
1a002170:	6263      	str	r3, [r4, #36]	; 0x24
1a002172:	1d20      	adds	r0, r4, #4
1a002174:	f7ff f93e 	bl	1a0013f4 <vListInitialiseItem>
1a002178:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

1a00217c <xTimerCreateTimerTask>:
1a00217c:	b510      	push	{r4, lr}
1a00217e:	b088      	sub	sp, #32
1a002180:	f7ff ffa4 	bl	1a0020cc <prvCheckForValidListAndQueue>
1a002184:	4b12      	ldr	r3, [pc, #72]	; (1a0021d0 <xTimerCreateTimerTask+0x54>)
1a002186:	681b      	ldr	r3, [r3, #0]
1a002188:	b1cb      	cbz	r3, 1a0021be <xTimerCreateTimerTask+0x42>
1a00218a:	2400      	movs	r4, #0
1a00218c:	9405      	str	r4, [sp, #20]
1a00218e:	9406      	str	r4, [sp, #24]
1a002190:	aa07      	add	r2, sp, #28
1a002192:	a906      	add	r1, sp, #24
1a002194:	a805      	add	r0, sp, #20
1a002196:	f7ff f977 	bl	1a001488 <vApplicationGetTimerTaskMemory>
1a00219a:	9b05      	ldr	r3, [sp, #20]
1a00219c:	9302      	str	r3, [sp, #8]
1a00219e:	9b06      	ldr	r3, [sp, #24]
1a0021a0:	9301      	str	r3, [sp, #4]
1a0021a2:	2304      	movs	r3, #4
1a0021a4:	9300      	str	r3, [sp, #0]
1a0021a6:	4623      	mov	r3, r4
1a0021a8:	9a07      	ldr	r2, [sp, #28]
1a0021aa:	490a      	ldr	r1, [pc, #40]	; (1a0021d4 <xTimerCreateTimerTask+0x58>)
1a0021ac:	480a      	ldr	r0, [pc, #40]	; (1a0021d8 <xTimerCreateTimerTask+0x5c>)
1a0021ae:	f7ff fb0f 	bl	1a0017d0 <xTaskCreateStatic>
1a0021b2:	4b0a      	ldr	r3, [pc, #40]	; (1a0021dc <xTimerCreateTimerTask+0x60>)
1a0021b4:	6018      	str	r0, [r3, #0]
1a0021b6:	b110      	cbz	r0, 1a0021be <xTimerCreateTimerTask+0x42>
1a0021b8:	2001      	movs	r0, #1
1a0021ba:	b008      	add	sp, #32
1a0021bc:	bd10      	pop	{r4, pc}
1a0021be:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a0021c2:	f383 8811 	msr	BASEPRI, r3
1a0021c6:	f3bf 8f6f 	isb	sy
1a0021ca:	f3bf 8f4f 	dsb	sy
1a0021ce:	e7fe      	b.n	1a0021ce <xTimerCreateTimerTask+0x52>
1a0021d0:	10002f2c 	.word	0x10002f2c
1a0021d4:	1a004adc 	.word	0x1a004adc
1a0021d8:	1a00250d 	.word	0x1a00250d
1a0021dc:	10002f30 	.word	0x10002f30

1a0021e0 <xTimerCreateStatic>:
1a0021e0:	b530      	push	{r4, r5, lr}
1a0021e2:	b085      	sub	sp, #20
1a0021e4:	9c09      	ldr	r4, [sp, #36]	; 0x24
1a0021e6:	2530      	movs	r5, #48	; 0x30
1a0021e8:	9503      	str	r5, [sp, #12]
1a0021ea:	9d03      	ldr	r5, [sp, #12]
1a0021ec:	2d30      	cmp	r5, #48	; 0x30
1a0021ee:	d008      	beq.n	1a002202 <xTimerCreateStatic+0x22>
1a0021f0:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a0021f4:	f383 8811 	msr	BASEPRI, r3
1a0021f8:	f3bf 8f6f 	isb	sy
1a0021fc:	f3bf 8f4f 	dsb	sy
1a002200:	e7fe      	b.n	1a002200 <xTimerCreateStatic+0x20>
1a002202:	b944      	cbnz	r4, 1a002216 <xTimerCreateStatic+0x36>
1a002204:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a002208:	f383 8811 	msr	BASEPRI, r3
1a00220c:	f3bf 8f6f 	isb	sy
1a002210:	f3bf 8f4f 	dsb	sy
1a002214:	e7fe      	b.n	1a002214 <xTimerCreateStatic+0x34>
1a002216:	9401      	str	r4, [sp, #4]
1a002218:	9d08      	ldr	r5, [sp, #32]
1a00221a:	9500      	str	r5, [sp, #0]
1a00221c:	f7ff ff8e 	bl	1a00213c <prvInitialiseNewTimer>
1a002220:	2301      	movs	r3, #1
1a002222:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
1a002226:	4620      	mov	r0, r4
1a002228:	b005      	add	sp, #20
1a00222a:	bd30      	pop	{r4, r5, pc}

1a00222c <xTimerGenericCommand>:
1a00222c:	b1c8      	cbz	r0, 1a002262 <xTimerGenericCommand+0x36>
1a00222e:	b530      	push	{r4, r5, lr}
1a002230:	b085      	sub	sp, #20
1a002232:	4615      	mov	r5, r2
1a002234:	4604      	mov	r4, r0
1a002236:	4a17      	ldr	r2, [pc, #92]	; (1a002294 <xTimerGenericCommand+0x68>)
1a002238:	6810      	ldr	r0, [r2, #0]
1a00223a:	b340      	cbz	r0, 1a00228e <xTimerGenericCommand+0x62>
1a00223c:	461a      	mov	r2, r3
1a00223e:	9100      	str	r1, [sp, #0]
1a002240:	9501      	str	r5, [sp, #4]
1a002242:	9402      	str	r4, [sp, #8]
1a002244:	2905      	cmp	r1, #5
1a002246:	dc1d      	bgt.n	1a002284 <xTimerGenericCommand+0x58>
1a002248:	f7ff fdc8 	bl	1a001ddc <xTaskGetSchedulerState>
1a00224c:	2802      	cmp	r0, #2
1a00224e:	d011      	beq.n	1a002274 <xTimerGenericCommand+0x48>
1a002250:	2300      	movs	r3, #0
1a002252:	461a      	mov	r2, r3
1a002254:	4669      	mov	r1, sp
1a002256:	480f      	ldr	r0, [pc, #60]	; (1a002294 <xTimerGenericCommand+0x68>)
1a002258:	6800      	ldr	r0, [r0, #0]
1a00225a:	f7fe fe9b 	bl	1a000f94 <xQueueGenericSend>
1a00225e:	b005      	add	sp, #20
1a002260:	bd30      	pop	{r4, r5, pc}
1a002262:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a002266:	f383 8811 	msr	BASEPRI, r3
1a00226a:	f3bf 8f6f 	isb	sy
1a00226e:	f3bf 8f4f 	dsb	sy
1a002272:	e7fe      	b.n	1a002272 <xTimerGenericCommand+0x46>
1a002274:	2300      	movs	r3, #0
1a002276:	9a08      	ldr	r2, [sp, #32]
1a002278:	4669      	mov	r1, sp
1a00227a:	4806      	ldr	r0, [pc, #24]	; (1a002294 <xTimerGenericCommand+0x68>)
1a00227c:	6800      	ldr	r0, [r0, #0]
1a00227e:	f7fe fe89 	bl	1a000f94 <xQueueGenericSend>
1a002282:	e7ec      	b.n	1a00225e <xTimerGenericCommand+0x32>
1a002284:	2300      	movs	r3, #0
1a002286:	4669      	mov	r1, sp
1a002288:	f7fe ff59 	bl	1a00113e <xQueueGenericSendFromISR>
1a00228c:	e7e7      	b.n	1a00225e <xTimerGenericCommand+0x32>
1a00228e:	2000      	movs	r0, #0
1a002290:	e7e5      	b.n	1a00225e <xTimerGenericCommand+0x32>
1a002292:	bf00      	nop
1a002294:	10002f2c 	.word	0x10002f2c

1a002298 <prvSwitchTimerLists>:
1a002298:	b570      	push	{r4, r5, r6, lr}
1a00229a:	b082      	sub	sp, #8
1a00229c:	4b1a      	ldr	r3, [pc, #104]	; (1a002308 <prvSwitchTimerLists+0x70>)
1a00229e:	681b      	ldr	r3, [r3, #0]
1a0022a0:	681a      	ldr	r2, [r3, #0]
1a0022a2:	b352      	cbz	r2, 1a0022fa <prvSwitchTimerLists+0x62>
1a0022a4:	68db      	ldr	r3, [r3, #12]
1a0022a6:	681e      	ldr	r6, [r3, #0]
1a0022a8:	68dc      	ldr	r4, [r3, #12]
1a0022aa:	1d25      	adds	r5, r4, #4
1a0022ac:	4628      	mov	r0, r5
1a0022ae:	f7ff f8ca 	bl	1a001446 <uxListRemove>
1a0022b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
1a0022b4:	4620      	mov	r0, r4
1a0022b6:	4798      	blx	r3
1a0022b8:	69e3      	ldr	r3, [r4, #28]
1a0022ba:	2b01      	cmp	r3, #1
1a0022bc:	d1ee      	bne.n	1a00229c <prvSwitchTimerLists+0x4>
1a0022be:	69a3      	ldr	r3, [r4, #24]
1a0022c0:	4433      	add	r3, r6
1a0022c2:	429e      	cmp	r6, r3
1a0022c4:	d207      	bcs.n	1a0022d6 <prvSwitchTimerLists+0x3e>
1a0022c6:	6063      	str	r3, [r4, #4]
1a0022c8:	6124      	str	r4, [r4, #16]
1a0022ca:	4629      	mov	r1, r5
1a0022cc:	4b0e      	ldr	r3, [pc, #56]	; (1a002308 <prvSwitchTimerLists+0x70>)
1a0022ce:	6818      	ldr	r0, [r3, #0]
1a0022d0:	f7ff f89f 	bl	1a001412 <vListInsert>
1a0022d4:	e7e2      	b.n	1a00229c <prvSwitchTimerLists+0x4>
1a0022d6:	2100      	movs	r1, #0
1a0022d8:	9100      	str	r1, [sp, #0]
1a0022da:	460b      	mov	r3, r1
1a0022dc:	4632      	mov	r2, r6
1a0022de:	4620      	mov	r0, r4
1a0022e0:	f7ff ffa4 	bl	1a00222c <xTimerGenericCommand>
1a0022e4:	2800      	cmp	r0, #0
1a0022e6:	d1d9      	bne.n	1a00229c <prvSwitchTimerLists+0x4>
1a0022e8:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a0022ec:	f383 8811 	msr	BASEPRI, r3
1a0022f0:	f3bf 8f6f 	isb	sy
1a0022f4:	f3bf 8f4f 	dsb	sy
1a0022f8:	e7fe      	b.n	1a0022f8 <prvSwitchTimerLists+0x60>
1a0022fa:	4a04      	ldr	r2, [pc, #16]	; (1a00230c <prvSwitchTimerLists+0x74>)
1a0022fc:	6810      	ldr	r0, [r2, #0]
1a0022fe:	4902      	ldr	r1, [pc, #8]	; (1a002308 <prvSwitchTimerLists+0x70>)
1a002300:	6008      	str	r0, [r1, #0]
1a002302:	6013      	str	r3, [r2, #0]
1a002304:	b002      	add	sp, #8
1a002306:	bd70      	pop	{r4, r5, r6, pc}
1a002308:	10002e08 	.word	0x10002e08
1a00230c:	10002e0c 	.word	0x10002e0c

1a002310 <prvSampleTimeNow>:
1a002310:	b538      	push	{r3, r4, r5, lr}
1a002312:	4605      	mov	r5, r0
1a002314:	f7ff fb1a 	bl	1a00194c <xTaskGetTickCount>
1a002318:	4604      	mov	r4, r0
1a00231a:	4b07      	ldr	r3, [pc, #28]	; (1a002338 <prvSampleTimeNow+0x28>)
1a00231c:	681b      	ldr	r3, [r3, #0]
1a00231e:	4283      	cmp	r3, r0
1a002320:	d805      	bhi.n	1a00232e <prvSampleTimeNow+0x1e>
1a002322:	2300      	movs	r3, #0
1a002324:	602b      	str	r3, [r5, #0]
1a002326:	4b04      	ldr	r3, [pc, #16]	; (1a002338 <prvSampleTimeNow+0x28>)
1a002328:	601c      	str	r4, [r3, #0]
1a00232a:	4620      	mov	r0, r4
1a00232c:	bd38      	pop	{r3, r4, r5, pc}
1a00232e:	f7ff ffb3 	bl	1a002298 <prvSwitchTimerLists>
1a002332:	2301      	movs	r3, #1
1a002334:	602b      	str	r3, [r5, #0]
1a002336:	e7f6      	b.n	1a002326 <prvSampleTimeNow+0x16>
1a002338:	10002ed8 	.word	0x10002ed8

1a00233c <prvProcessExpiredTimer>:
1a00233c:	b570      	push	{r4, r5, r6, lr}
1a00233e:	b082      	sub	sp, #8
1a002340:	4605      	mov	r5, r0
1a002342:	460e      	mov	r6, r1
1a002344:	4b14      	ldr	r3, [pc, #80]	; (1a002398 <prvProcessExpiredTimer+0x5c>)
1a002346:	681b      	ldr	r3, [r3, #0]
1a002348:	68db      	ldr	r3, [r3, #12]
1a00234a:	68dc      	ldr	r4, [r3, #12]
1a00234c:	1d20      	adds	r0, r4, #4
1a00234e:	f7ff f87a 	bl	1a001446 <uxListRemove>
1a002352:	69e3      	ldr	r3, [r4, #28]
1a002354:	2b01      	cmp	r3, #1
1a002356:	d004      	beq.n	1a002362 <prvProcessExpiredTimer+0x26>
1a002358:	6a63      	ldr	r3, [r4, #36]	; 0x24
1a00235a:	4620      	mov	r0, r4
1a00235c:	4798      	blx	r3
1a00235e:	b002      	add	sp, #8
1a002360:	bd70      	pop	{r4, r5, r6, pc}
1a002362:	69a1      	ldr	r1, [r4, #24]
1a002364:	462b      	mov	r3, r5
1a002366:	4632      	mov	r2, r6
1a002368:	4429      	add	r1, r5
1a00236a:	4620      	mov	r0, r4
1a00236c:	f7ff fe8a 	bl	1a002084 <prvInsertTimerInActiveList>
1a002370:	2800      	cmp	r0, #0
1a002372:	d0f1      	beq.n	1a002358 <prvProcessExpiredTimer+0x1c>
1a002374:	2100      	movs	r1, #0
1a002376:	9100      	str	r1, [sp, #0]
1a002378:	460b      	mov	r3, r1
1a00237a:	462a      	mov	r2, r5
1a00237c:	4620      	mov	r0, r4
1a00237e:	f7ff ff55 	bl	1a00222c <xTimerGenericCommand>
1a002382:	2800      	cmp	r0, #0
1a002384:	d1e8      	bne.n	1a002358 <prvProcessExpiredTimer+0x1c>
1a002386:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a00238a:	f383 8811 	msr	BASEPRI, r3
1a00238e:	f3bf 8f6f 	isb	sy
1a002392:	f3bf 8f4f 	dsb	sy
1a002396:	e7fe      	b.n	1a002396 <prvProcessExpiredTimer+0x5a>
1a002398:	10002e08 	.word	0x10002e08

1a00239c <prvProcessTimerOrBlockTask>:
1a00239c:	b570      	push	{r4, r5, r6, lr}
1a00239e:	b082      	sub	sp, #8
1a0023a0:	4606      	mov	r6, r0
1a0023a2:	460c      	mov	r4, r1
1a0023a4:	f7ff faca 	bl	1a00193c <vTaskSuspendAll>
1a0023a8:	a801      	add	r0, sp, #4
1a0023aa:	f7ff ffb1 	bl	1a002310 <prvSampleTimeNow>
1a0023ae:	9b01      	ldr	r3, [sp, #4]
1a0023b0:	bb1b      	cbnz	r3, 1a0023fa <prvProcessTimerOrBlockTask+0x5e>
1a0023b2:	4605      	mov	r5, r0
1a0023b4:	b90c      	cbnz	r4, 1a0023ba <prvProcessTimerOrBlockTask+0x1e>
1a0023b6:	42b0      	cmp	r0, r6
1a0023b8:	d218      	bcs.n	1a0023ec <prvProcessTimerOrBlockTask+0x50>
1a0023ba:	b12c      	cbz	r4, 1a0023c8 <prvProcessTimerOrBlockTask+0x2c>
1a0023bc:	4b11      	ldr	r3, [pc, #68]	; (1a002404 <prvProcessTimerOrBlockTask+0x68>)
1a0023be:	681b      	ldr	r3, [r3, #0]
1a0023c0:	681c      	ldr	r4, [r3, #0]
1a0023c2:	fab4 f484 	clz	r4, r4
1a0023c6:	0964      	lsrs	r4, r4, #5
1a0023c8:	4622      	mov	r2, r4
1a0023ca:	1b71      	subs	r1, r6, r5
1a0023cc:	4b0e      	ldr	r3, [pc, #56]	; (1a002408 <prvProcessTimerOrBlockTask+0x6c>)
1a0023ce:	6818      	ldr	r0, [r3, #0]
1a0023d0:	f7fe ffdc 	bl	1a00138c <vQueueWaitForMessageRestricted>
1a0023d4:	f7ff fb4c 	bl	1a001a70 <xTaskResumeAll>
1a0023d8:	b988      	cbnz	r0, 1a0023fe <prvProcessTimerOrBlockTask+0x62>
1a0023da:	4b0c      	ldr	r3, [pc, #48]	; (1a00240c <prvProcessTimerOrBlockTask+0x70>)
1a0023dc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
1a0023e0:	601a      	str	r2, [r3, #0]
1a0023e2:	f3bf 8f4f 	dsb	sy
1a0023e6:	f3bf 8f6f 	isb	sy
1a0023ea:	e008      	b.n	1a0023fe <prvProcessTimerOrBlockTask+0x62>
1a0023ec:	f7ff fb40 	bl	1a001a70 <xTaskResumeAll>
1a0023f0:	4629      	mov	r1, r5
1a0023f2:	4630      	mov	r0, r6
1a0023f4:	f7ff ffa2 	bl	1a00233c <prvProcessExpiredTimer>
1a0023f8:	e001      	b.n	1a0023fe <prvProcessTimerOrBlockTask+0x62>
1a0023fa:	f7ff fb39 	bl	1a001a70 <xTaskResumeAll>
1a0023fe:	b002      	add	sp, #8
1a002400:	bd70      	pop	{r4, r5, r6, pc}
1a002402:	bf00      	nop
1a002404:	10002e0c 	.word	0x10002e0c
1a002408:	10002f2c 	.word	0x10002f2c
1a00240c:	e000ed04 	.word	0xe000ed04

1a002410 <prvProcessReceivedCommands>:
1a002410:	b530      	push	{r4, r5, lr}
1a002412:	b089      	sub	sp, #36	; 0x24
1a002414:	e002      	b.n	1a00241c <prvProcessReceivedCommands+0xc>
1a002416:	9b04      	ldr	r3, [sp, #16]
1a002418:	2b00      	cmp	r3, #0
1a00241a:	da0f      	bge.n	1a00243c <prvProcessReceivedCommands+0x2c>
1a00241c:	2200      	movs	r2, #0
1a00241e:	a904      	add	r1, sp, #16
1a002420:	4b39      	ldr	r3, [pc, #228]	; (1a002508 <prvProcessReceivedCommands+0xf8>)
1a002422:	6818      	ldr	r0, [r3, #0]
1a002424:	f7fe fef2 	bl	1a00120c <xQueueReceive>
1a002428:	2800      	cmp	r0, #0
1a00242a:	d06a      	beq.n	1a002502 <prvProcessReceivedCommands+0xf2>
1a00242c:	9b04      	ldr	r3, [sp, #16]
1a00242e:	2b00      	cmp	r3, #0
1a002430:	daf1      	bge.n	1a002416 <prvProcessReceivedCommands+0x6>
1a002432:	9907      	ldr	r1, [sp, #28]
1a002434:	9806      	ldr	r0, [sp, #24]
1a002436:	9b05      	ldr	r3, [sp, #20]
1a002438:	4798      	blx	r3
1a00243a:	e7ec      	b.n	1a002416 <prvProcessReceivedCommands+0x6>
1a00243c:	9c06      	ldr	r4, [sp, #24]
1a00243e:	6963      	ldr	r3, [r4, #20]
1a002440:	b113      	cbz	r3, 1a002448 <prvProcessReceivedCommands+0x38>
1a002442:	1d20      	adds	r0, r4, #4
1a002444:	f7fe ffff 	bl	1a001446 <uxListRemove>
1a002448:	a803      	add	r0, sp, #12
1a00244a:	f7ff ff61 	bl	1a002310 <prvSampleTimeNow>
1a00244e:	9b04      	ldr	r3, [sp, #16]
1a002450:	2b09      	cmp	r3, #9
1a002452:	d8e3      	bhi.n	1a00241c <prvProcessReceivedCommands+0xc>
1a002454:	a201      	add	r2, pc, #4	; (adr r2, 1a00245c <prvProcessReceivedCommands+0x4c>)
1a002456:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
1a00245a:	bf00      	nop
1a00245c:	1a002485 	.word	0x1a002485
1a002460:	1a002485 	.word	0x1a002485
1a002464:	1a002485 	.word	0x1a002485
1a002468:	1a00241d 	.word	0x1a00241d
1a00246c:	1a0024cd 	.word	0x1a0024cd
1a002470:	1a0024f3 	.word	0x1a0024f3
1a002474:	1a002485 	.word	0x1a002485
1a002478:	1a002485 	.word	0x1a002485
1a00247c:	1a00241d 	.word	0x1a00241d
1a002480:	1a0024cd 	.word	0x1a0024cd
1a002484:	9905      	ldr	r1, [sp, #20]
1a002486:	69a5      	ldr	r5, [r4, #24]
1a002488:	460b      	mov	r3, r1
1a00248a:	4602      	mov	r2, r0
1a00248c:	4429      	add	r1, r5
1a00248e:	4620      	mov	r0, r4
1a002490:	f7ff fdf8 	bl	1a002084 <prvInsertTimerInActiveList>
1a002494:	2800      	cmp	r0, #0
1a002496:	d0c1      	beq.n	1a00241c <prvProcessReceivedCommands+0xc>
1a002498:	6a63      	ldr	r3, [r4, #36]	; 0x24
1a00249a:	4620      	mov	r0, r4
1a00249c:	4798      	blx	r3
1a00249e:	69e3      	ldr	r3, [r4, #28]
1a0024a0:	2b01      	cmp	r3, #1
1a0024a2:	d1bb      	bne.n	1a00241c <prvProcessReceivedCommands+0xc>
1a0024a4:	69a2      	ldr	r2, [r4, #24]
1a0024a6:	2100      	movs	r1, #0
1a0024a8:	9100      	str	r1, [sp, #0]
1a0024aa:	460b      	mov	r3, r1
1a0024ac:	9805      	ldr	r0, [sp, #20]
1a0024ae:	4402      	add	r2, r0
1a0024b0:	4620      	mov	r0, r4
1a0024b2:	f7ff febb 	bl	1a00222c <xTimerGenericCommand>
1a0024b6:	2800      	cmp	r0, #0
1a0024b8:	d1b0      	bne.n	1a00241c <prvProcessReceivedCommands+0xc>
1a0024ba:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a0024be:	f383 8811 	msr	BASEPRI, r3
1a0024c2:	f3bf 8f6f 	isb	sy
1a0024c6:	f3bf 8f4f 	dsb	sy
1a0024ca:	e7fe      	b.n	1a0024ca <prvProcessReceivedCommands+0xba>
1a0024cc:	9905      	ldr	r1, [sp, #20]
1a0024ce:	61a1      	str	r1, [r4, #24]
1a0024d0:	b131      	cbz	r1, 1a0024e0 <prvProcessReceivedCommands+0xd0>
1a0024d2:	4603      	mov	r3, r0
1a0024d4:	4602      	mov	r2, r0
1a0024d6:	4401      	add	r1, r0
1a0024d8:	4620      	mov	r0, r4
1a0024da:	f7ff fdd3 	bl	1a002084 <prvInsertTimerInActiveList>
1a0024de:	e79d      	b.n	1a00241c <prvProcessReceivedCommands+0xc>
1a0024e0:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a0024e4:	f383 8811 	msr	BASEPRI, r3
1a0024e8:	f3bf 8f6f 	isb	sy
1a0024ec:	f3bf 8f4f 	dsb	sy
1a0024f0:	e7fe      	b.n	1a0024f0 <prvProcessReceivedCommands+0xe0>
1a0024f2:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
1a0024f6:	2b00      	cmp	r3, #0
1a0024f8:	d190      	bne.n	1a00241c <prvProcessReceivedCommands+0xc>
1a0024fa:	4620      	mov	r0, r4
1a0024fc:	f7fe fbaa 	bl	1a000c54 <vPortFree>
1a002500:	e78c      	b.n	1a00241c <prvProcessReceivedCommands+0xc>
1a002502:	b009      	add	sp, #36	; 0x24
1a002504:	bd30      	pop	{r4, r5, pc}
1a002506:	bf00      	nop
1a002508:	10002f2c 	.word	0x10002f2c

1a00250c <prvTimerTask>:
1a00250c:	b500      	push	{lr}
1a00250e:	b083      	sub	sp, #12
1a002510:	a801      	add	r0, sp, #4
1a002512:	f7ff fda7 	bl	1a002064 <prvGetNextExpireTime>
1a002516:	9901      	ldr	r1, [sp, #4]
1a002518:	f7ff ff40 	bl	1a00239c <prvProcessTimerOrBlockTask>
1a00251c:	f7ff ff78 	bl	1a002410 <prvProcessReceivedCommands>
1a002520:	e7f6      	b.n	1a002510 <prvTimerTask+0x4>
1a002522:	Address 0x000000001a002522 is out of bounds.


1a002524 <prvTaskExitError>:
1a002524:	b082      	sub	sp, #8
1a002526:	2300      	movs	r3, #0
1a002528:	9301      	str	r3, [sp, #4]
1a00252a:	4b0d      	ldr	r3, [pc, #52]	; (1a002560 <prvTaskExitError+0x3c>)
1a00252c:	681b      	ldr	r3, [r3, #0]
1a00252e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
1a002532:	d008      	beq.n	1a002546 <prvTaskExitError+0x22>
1a002534:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a002538:	f383 8811 	msr	BASEPRI, r3
1a00253c:	f3bf 8f6f 	isb	sy
1a002540:	f3bf 8f4f 	dsb	sy
1a002544:	e7fe      	b.n	1a002544 <prvTaskExitError+0x20>
1a002546:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a00254a:	f383 8811 	msr	BASEPRI, r3
1a00254e:	f3bf 8f6f 	isb	sy
1a002552:	f3bf 8f4f 	dsb	sy
1a002556:	9b01      	ldr	r3, [sp, #4]
1a002558:	2b00      	cmp	r3, #0
1a00255a:	d0fc      	beq.n	1a002556 <prvTaskExitError+0x32>
1a00255c:	b002      	add	sp, #8
1a00255e:	4770      	bx	lr
1a002560:	10000010 	.word	0x10000010

1a002564 <prvPortStartFirstTask>:
1a002564:	4808      	ldr	r0, [pc, #32]	; (1a002588 <prvPortStartFirstTask+0x24>)
1a002566:	6800      	ldr	r0, [r0, #0]
1a002568:	6800      	ldr	r0, [r0, #0]
1a00256a:	f380 8808 	msr	MSP, r0
1a00256e:	f04f 0000 	mov.w	r0, #0
1a002572:	f380 8814 	msr	CONTROL, r0
1a002576:	b662      	cpsie	i
1a002578:	b661      	cpsie	f
1a00257a:	f3bf 8f4f 	dsb	sy
1a00257e:	f3bf 8f6f 	isb	sy
1a002582:	df00      	svc	0
1a002584:	bf00      	nop
1a002586:	0000      	.short	0x0000
1a002588:	e000ed08 	.word	0xe000ed08

1a00258c <vPortEnableVFP>:
1a00258c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 1a00259c <vPortEnableVFP+0x10>
1a002590:	6801      	ldr	r1, [r0, #0]
1a002592:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
1a002596:	6001      	str	r1, [r0, #0]
1a002598:	4770      	bx	lr
1a00259a:	0000      	.short	0x0000
1a00259c:	e000ed88 	.word	0xe000ed88

1a0025a0 <pxPortInitialiseStack>:
1a0025a0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
1a0025a4:	f840 3c04 	str.w	r3, [r0, #-4]
1a0025a8:	f021 0101 	bic.w	r1, r1, #1
1a0025ac:	f840 1c08 	str.w	r1, [r0, #-8]
1a0025b0:	4b05      	ldr	r3, [pc, #20]	; (1a0025c8 <pxPortInitialiseStack+0x28>)
1a0025b2:	f840 3c0c 	str.w	r3, [r0, #-12]
1a0025b6:	f840 2c20 	str.w	r2, [r0, #-32]
1a0025ba:	f06f 0302 	mvn.w	r3, #2
1a0025be:	f840 3c24 	str.w	r3, [r0, #-36]
1a0025c2:	3844      	subs	r0, #68	; 0x44
1a0025c4:	4770      	bx	lr
1a0025c6:	bf00      	nop
1a0025c8:	1a002525 	.word	0x1a002525
1a0025cc:	ffffffff 	.word	0xffffffff

1a0025d0 <SVC_Handler>:
1a0025d0:	4b07      	ldr	r3, [pc, #28]	; (1a0025f0 <pxCurrentTCBConst2>)
1a0025d2:	6819      	ldr	r1, [r3, #0]
1a0025d4:	6808      	ldr	r0, [r1, #0]
1a0025d6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a0025da:	f380 8809 	msr	PSP, r0
1a0025de:	f3bf 8f6f 	isb	sy
1a0025e2:	f04f 0000 	mov.w	r0, #0
1a0025e6:	f380 8811 	msr	BASEPRI, r0
1a0025ea:	4770      	bx	lr
1a0025ec:	f3af 8000 	nop.w

1a0025f0 <pxCurrentTCBConst2>:
1a0025f0:	10002ce0 	.word	0x10002ce0

1a0025f4 <vPortEnterCritical>:
1a0025f4:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a0025f8:	f383 8811 	msr	BASEPRI, r3
1a0025fc:	f3bf 8f6f 	isb	sy
1a002600:	f3bf 8f4f 	dsb	sy
1a002604:	4a0a      	ldr	r2, [pc, #40]	; (1a002630 <vPortEnterCritical+0x3c>)
1a002606:	6813      	ldr	r3, [r2, #0]
1a002608:	3301      	adds	r3, #1
1a00260a:	6013      	str	r3, [r2, #0]
1a00260c:	2b01      	cmp	r3, #1
1a00260e:	d000      	beq.n	1a002612 <vPortEnterCritical+0x1e>
1a002610:	4770      	bx	lr
1a002612:	4b08      	ldr	r3, [pc, #32]	; (1a002634 <vPortEnterCritical+0x40>)
1a002614:	681b      	ldr	r3, [r3, #0]
1a002616:	f013 0fff 	tst.w	r3, #255	; 0xff
1a00261a:	d0f9      	beq.n	1a002610 <vPortEnterCritical+0x1c>
1a00261c:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a002620:	f383 8811 	msr	BASEPRI, r3
1a002624:	f3bf 8f6f 	isb	sy
1a002628:	f3bf 8f4f 	dsb	sy
1a00262c:	e7fe      	b.n	1a00262c <vPortEnterCritical+0x38>
1a00262e:	bf00      	nop
1a002630:	10000010 	.word	0x10000010
1a002634:	e000ed04 	.word	0xe000ed04

1a002638 <vPortExitCritical>:
1a002638:	4b09      	ldr	r3, [pc, #36]	; (1a002660 <vPortExitCritical+0x28>)
1a00263a:	681b      	ldr	r3, [r3, #0]
1a00263c:	b943      	cbnz	r3, 1a002650 <vPortExitCritical+0x18>
1a00263e:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a002642:	f383 8811 	msr	BASEPRI, r3
1a002646:	f3bf 8f6f 	isb	sy
1a00264a:	f3bf 8f4f 	dsb	sy
1a00264e:	e7fe      	b.n	1a00264e <vPortExitCritical+0x16>
1a002650:	3b01      	subs	r3, #1
1a002652:	4a03      	ldr	r2, [pc, #12]	; (1a002660 <vPortExitCritical+0x28>)
1a002654:	6013      	str	r3, [r2, #0]
1a002656:	b90b      	cbnz	r3, 1a00265c <vPortExitCritical+0x24>
1a002658:	f383 8811 	msr	BASEPRI, r3
1a00265c:	4770      	bx	lr
1a00265e:	bf00      	nop
1a002660:	10000010 	.word	0x10000010
1a002664:	ffffffff 	.word	0xffffffff
1a002668:	ffffffff 	.word	0xffffffff
1a00266c:	ffffffff 	.word	0xffffffff

1a002670 <PendSV_Handler>:
1a002670:	f3ef 8009 	mrs	r0, PSP
1a002674:	f3bf 8f6f 	isb	sy
1a002678:	4b15      	ldr	r3, [pc, #84]	; (1a0026d0 <pxCurrentTCBConst>)
1a00267a:	681a      	ldr	r2, [r3, #0]
1a00267c:	f01e 0f10 	tst.w	lr, #16
1a002680:	bf08      	it	eq
1a002682:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
1a002686:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a00268a:	6010      	str	r0, [r2, #0]
1a00268c:	e92d 0009 	stmdb	sp!, {r0, r3}
1a002690:	f04f 00a0 	mov.w	r0, #160	; 0xa0
1a002694:	f380 8811 	msr	BASEPRI, r0
1a002698:	f3bf 8f4f 	dsb	sy
1a00269c:	f3bf 8f6f 	isb	sy
1a0026a0:	f7ff fa60 	bl	1a001b64 <vTaskSwitchContext>
1a0026a4:	f04f 0000 	mov.w	r0, #0
1a0026a8:	f380 8811 	msr	BASEPRI, r0
1a0026ac:	bc09      	pop	{r0, r3}
1a0026ae:	6819      	ldr	r1, [r3, #0]
1a0026b0:	6808      	ldr	r0, [r1, #0]
1a0026b2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a0026b6:	f01e 0f10 	tst.w	lr, #16
1a0026ba:	bf08      	it	eq
1a0026bc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
1a0026c0:	f380 8809 	msr	PSP, r0
1a0026c4:	f3bf 8f6f 	isb	sy
1a0026c8:	4770      	bx	lr
1a0026ca:	bf00      	nop
1a0026cc:	f3af 8000 	nop.w

1a0026d0 <pxCurrentTCBConst>:
1a0026d0:	10002ce0 	.word	0x10002ce0

1a0026d4 <SysTick_Handler>:
1a0026d4:	b508      	push	{r3, lr}
1a0026d6:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a0026da:	f383 8811 	msr	BASEPRI, r3
1a0026de:	f3bf 8f6f 	isb	sy
1a0026e2:	f3bf 8f4f 	dsb	sy
1a0026e6:	f7ff f937 	bl	1a001958 <xTaskIncrementTick>
1a0026ea:	b118      	cbz	r0, 1a0026f4 <SysTick_Handler+0x20>
1a0026ec:	4b03      	ldr	r3, [pc, #12]	; (1a0026fc <SysTick_Handler+0x28>)
1a0026ee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
1a0026f2:	601a      	str	r2, [r3, #0]
1a0026f4:	2300      	movs	r3, #0
1a0026f6:	f383 8811 	msr	BASEPRI, r3
1a0026fa:	bd08      	pop	{r3, pc}
1a0026fc:	e000ed04 	.word	0xe000ed04

1a002700 <vPortSetupTimerInterrupt>:
1a002700:	4a08      	ldr	r2, [pc, #32]	; (1a002724 <vPortSetupTimerInterrupt+0x24>)
1a002702:	2300      	movs	r3, #0
1a002704:	6013      	str	r3, [r2, #0]
1a002706:	4908      	ldr	r1, [pc, #32]	; (1a002728 <vPortSetupTimerInterrupt+0x28>)
1a002708:	600b      	str	r3, [r1, #0]
1a00270a:	4b08      	ldr	r3, [pc, #32]	; (1a00272c <vPortSetupTimerInterrupt+0x2c>)
1a00270c:	681b      	ldr	r3, [r3, #0]
1a00270e:	4908      	ldr	r1, [pc, #32]	; (1a002730 <vPortSetupTimerInterrupt+0x30>)
1a002710:	fba1 1303 	umull	r1, r3, r1, r3
1a002714:	099b      	lsrs	r3, r3, #6
1a002716:	3b01      	subs	r3, #1
1a002718:	4906      	ldr	r1, [pc, #24]	; (1a002734 <vPortSetupTimerInterrupt+0x34>)
1a00271a:	600b      	str	r3, [r1, #0]
1a00271c:	2307      	movs	r3, #7
1a00271e:	6013      	str	r3, [r2, #0]
1a002720:	4770      	bx	lr
1a002722:	bf00      	nop
1a002724:	e000e010 	.word	0xe000e010
1a002728:	e000e018 	.word	0xe000e018
1a00272c:	100030e4 	.word	0x100030e4
1a002730:	10624dd3 	.word	0x10624dd3
1a002734:	e000e014 	.word	0xe000e014

1a002738 <xPortStartScheduler>:
1a002738:	4b3a      	ldr	r3, [pc, #232]	; (1a002824 <xPortStartScheduler+0xec>)
1a00273a:	681a      	ldr	r2, [r3, #0]
1a00273c:	4b3a      	ldr	r3, [pc, #232]	; (1a002828 <xPortStartScheduler+0xf0>)
1a00273e:	429a      	cmp	r2, r3
1a002740:	d00d      	beq.n	1a00275e <xPortStartScheduler+0x26>
1a002742:	4b38      	ldr	r3, [pc, #224]	; (1a002824 <xPortStartScheduler+0xec>)
1a002744:	681a      	ldr	r2, [r3, #0]
1a002746:	4b39      	ldr	r3, [pc, #228]	; (1a00282c <xPortStartScheduler+0xf4>)
1a002748:	429a      	cmp	r2, r3
1a00274a:	d111      	bne.n	1a002770 <xPortStartScheduler+0x38>
1a00274c:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a002750:	f383 8811 	msr	BASEPRI, r3
1a002754:	f3bf 8f6f 	isb	sy
1a002758:	f3bf 8f4f 	dsb	sy
1a00275c:	e7fe      	b.n	1a00275c <xPortStartScheduler+0x24>
1a00275e:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a002762:	f383 8811 	msr	BASEPRI, r3
1a002766:	f3bf 8f6f 	isb	sy
1a00276a:	f3bf 8f4f 	dsb	sy
1a00276e:	e7fe      	b.n	1a00276e <xPortStartScheduler+0x36>
1a002770:	b510      	push	{r4, lr}
1a002772:	b082      	sub	sp, #8
1a002774:	4b2e      	ldr	r3, [pc, #184]	; (1a002830 <xPortStartScheduler+0xf8>)
1a002776:	781a      	ldrb	r2, [r3, #0]
1a002778:	b2d2      	uxtb	r2, r2
1a00277a:	9201      	str	r2, [sp, #4]
1a00277c:	22ff      	movs	r2, #255	; 0xff
1a00277e:	701a      	strb	r2, [r3, #0]
1a002780:	781b      	ldrb	r3, [r3, #0]
1a002782:	b2db      	uxtb	r3, r3
1a002784:	f88d 3003 	strb.w	r3, [sp, #3]
1a002788:	f89d 3003 	ldrb.w	r3, [sp, #3]
1a00278c:	f003 03a0 	and.w	r3, r3, #160	; 0xa0
1a002790:	4a28      	ldr	r2, [pc, #160]	; (1a002834 <xPortStartScheduler+0xfc>)
1a002792:	7013      	strb	r3, [r2, #0]
1a002794:	4b28      	ldr	r3, [pc, #160]	; (1a002838 <xPortStartScheduler+0x100>)
1a002796:	2207      	movs	r2, #7
1a002798:	601a      	str	r2, [r3, #0]
1a00279a:	e009      	b.n	1a0027b0 <xPortStartScheduler+0x78>
1a00279c:	4a26      	ldr	r2, [pc, #152]	; (1a002838 <xPortStartScheduler+0x100>)
1a00279e:	6813      	ldr	r3, [r2, #0]
1a0027a0:	3b01      	subs	r3, #1
1a0027a2:	6013      	str	r3, [r2, #0]
1a0027a4:	f89d 3003 	ldrb.w	r3, [sp, #3]
1a0027a8:	005b      	lsls	r3, r3, #1
1a0027aa:	b2db      	uxtb	r3, r3
1a0027ac:	f88d 3003 	strb.w	r3, [sp, #3]
1a0027b0:	f89d 3003 	ldrb.w	r3, [sp, #3]
1a0027b4:	f013 0f80 	tst.w	r3, #128	; 0x80
1a0027b8:	d1f0      	bne.n	1a00279c <xPortStartScheduler+0x64>
1a0027ba:	4b1f      	ldr	r3, [pc, #124]	; (1a002838 <xPortStartScheduler+0x100>)
1a0027bc:	681b      	ldr	r3, [r3, #0]
1a0027be:	2b04      	cmp	r3, #4
1a0027c0:	d008      	beq.n	1a0027d4 <xPortStartScheduler+0x9c>
1a0027c2:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a0027c6:	f383 8811 	msr	BASEPRI, r3
1a0027ca:	f3bf 8f6f 	isb	sy
1a0027ce:	f3bf 8f4f 	dsb	sy
1a0027d2:	e7fe      	b.n	1a0027d2 <xPortStartScheduler+0x9a>
1a0027d4:	021b      	lsls	r3, r3, #8
1a0027d6:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
1a0027da:	4a17      	ldr	r2, [pc, #92]	; (1a002838 <xPortStartScheduler+0x100>)
1a0027dc:	6013      	str	r3, [r2, #0]
1a0027de:	9b01      	ldr	r3, [sp, #4]
1a0027e0:	b2db      	uxtb	r3, r3
1a0027e2:	4a13      	ldr	r2, [pc, #76]	; (1a002830 <xPortStartScheduler+0xf8>)
1a0027e4:	7013      	strb	r3, [r2, #0]
1a0027e6:	4b15      	ldr	r3, [pc, #84]	; (1a00283c <xPortStartScheduler+0x104>)
1a0027e8:	681a      	ldr	r2, [r3, #0]
1a0027ea:	f442 0260 	orr.w	r2, r2, #14680064	; 0xe00000
1a0027ee:	601a      	str	r2, [r3, #0]
1a0027f0:	681a      	ldr	r2, [r3, #0]
1a0027f2:	f042 4260 	orr.w	r2, r2, #3758096384	; 0xe0000000
1a0027f6:	601a      	str	r2, [r3, #0]
1a0027f8:	f7ff ff82 	bl	1a002700 <vPortSetupTimerInterrupt>
1a0027fc:	2400      	movs	r4, #0
1a0027fe:	4b10      	ldr	r3, [pc, #64]	; (1a002840 <xPortStartScheduler+0x108>)
1a002800:	601c      	str	r4, [r3, #0]
1a002802:	f7ff fec3 	bl	1a00258c <vPortEnableVFP>
1a002806:	4a0f      	ldr	r2, [pc, #60]	; (1a002844 <xPortStartScheduler+0x10c>)
1a002808:	6813      	ldr	r3, [r2, #0]
1a00280a:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
1a00280e:	6013      	str	r3, [r2, #0]
1a002810:	f7ff fea8 	bl	1a002564 <prvPortStartFirstTask>
1a002814:	f7ff f9a6 	bl	1a001b64 <vTaskSwitchContext>
1a002818:	f7ff fe84 	bl	1a002524 <prvTaskExitError>
1a00281c:	4620      	mov	r0, r4
1a00281e:	b002      	add	sp, #8
1a002820:	bd10      	pop	{r4, pc}
1a002822:	bf00      	nop
1a002824:	e000ed00 	.word	0xe000ed00
1a002828:	410fc271 	.word	0x410fc271
1a00282c:	410fc270 	.word	0x410fc270
1a002830:	e000e400 	.word	0xe000e400
1a002834:	10002f34 	.word	0x10002f34
1a002838:	10002f38 	.word	0x10002f38
1a00283c:	e000ed20 	.word	0xe000ed20
1a002840:	10000010 	.word	0x10000010
1a002844:	e000ef34 	.word	0xe000ef34

1a002848 <vPortValidateInterruptPriority>:
1a002848:	f3ef 8305 	mrs	r3, IPSR
1a00284c:	2b0f      	cmp	r3, #15
1a00284e:	d90f      	bls.n	1a002870 <vPortValidateInterruptPriority+0x28>
1a002850:	4a10      	ldr	r2, [pc, #64]	; (1a002894 <vPortValidateInterruptPriority+0x4c>)
1a002852:	5c9b      	ldrb	r3, [r3, r2]
1a002854:	b2db      	uxtb	r3, r3
1a002856:	4a10      	ldr	r2, [pc, #64]	; (1a002898 <vPortValidateInterruptPriority+0x50>)
1a002858:	7812      	ldrb	r2, [r2, #0]
1a00285a:	429a      	cmp	r2, r3
1a00285c:	d908      	bls.n	1a002870 <vPortValidateInterruptPriority+0x28>
1a00285e:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a002862:	f383 8811 	msr	BASEPRI, r3
1a002866:	f3bf 8f6f 	isb	sy
1a00286a:	f3bf 8f4f 	dsb	sy
1a00286e:	e7fe      	b.n	1a00286e <vPortValidateInterruptPriority+0x26>
1a002870:	4b0a      	ldr	r3, [pc, #40]	; (1a00289c <vPortValidateInterruptPriority+0x54>)
1a002872:	681b      	ldr	r3, [r3, #0]
1a002874:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
1a002878:	4a09      	ldr	r2, [pc, #36]	; (1a0028a0 <vPortValidateInterruptPriority+0x58>)
1a00287a:	6812      	ldr	r2, [r2, #0]
1a00287c:	4293      	cmp	r3, r2
1a00287e:	d908      	bls.n	1a002892 <vPortValidateInterruptPriority+0x4a>
1a002880:	f04f 03a0 	mov.w	r3, #160	; 0xa0
1a002884:	f383 8811 	msr	BASEPRI, r3
1a002888:	f3bf 8f6f 	isb	sy
1a00288c:	f3bf 8f4f 	dsb	sy
1a002890:	e7fe      	b.n	1a002890 <vPortValidateInterruptPriority+0x48>
1a002892:	4770      	bx	lr
1a002894:	e000e3f0 	.word	0xe000e3f0
1a002898:	10002f34 	.word	0x10002f34
1a00289c:	e000ed0c 	.word	0xe000ed0c
1a0028a0:	10002f38 	.word	0x10002f38

1a0028a4 <Board_LED_Init>:
1a0028a4:	2200      	movs	r2, #0
1a0028a6:	2a05      	cmp	r2, #5
1a0028a8:	d819      	bhi.n	1a0028de <Board_LED_Init+0x3a>
1a0028aa:	b470      	push	{r4, r5, r6}
1a0028ac:	490c      	ldr	r1, [pc, #48]	; (1a0028e0 <Board_LED_Init+0x3c>)
1a0028ae:	f811 5012 	ldrb.w	r5, [r1, r2, lsl #1]
1a0028b2:	eb01 0142 	add.w	r1, r1, r2, lsl #1
1a0028b6:	784c      	ldrb	r4, [r1, #1]
1a0028b8:	4b0a      	ldr	r3, [pc, #40]	; (1a0028e4 <Board_LED_Init+0x40>)
1a0028ba:	f505 6600 	add.w	r6, r5, #2048	; 0x800
1a0028be:	f853 1026 	ldr.w	r1, [r3, r6, lsl #2]
1a0028c2:	2001      	movs	r0, #1
1a0028c4:	40a0      	lsls	r0, r4
1a0028c6:	4301      	orrs	r1, r0
1a0028c8:	f843 1026 	str.w	r1, [r3, r6, lsl #2]
1a0028cc:	eb03 1345 	add.w	r3, r3, r5, lsl #5
1a0028d0:	2100      	movs	r1, #0
1a0028d2:	5519      	strb	r1, [r3, r4]
1a0028d4:	3201      	adds	r2, #1
1a0028d6:	2a05      	cmp	r2, #5
1a0028d8:	d9e8      	bls.n	1a0028ac <Board_LED_Init+0x8>
1a0028da:	bc70      	pop	{r4, r5, r6}
1a0028dc:	4770      	bx	lr
1a0028de:	4770      	bx	lr
1a0028e0:	1a004af0 	.word	0x1a004af0
1a0028e4:	400f4000 	.word	0x400f4000

1a0028e8 <Board_TEC_Init>:
1a0028e8:	2300      	movs	r3, #0
1a0028ea:	2b03      	cmp	r3, #3
1a0028ec:	d816      	bhi.n	1a00291c <Board_TEC_Init+0x34>
1a0028ee:	b430      	push	{r4, r5}
1a0028f0:	490b      	ldr	r1, [pc, #44]	; (1a002920 <Board_TEC_Init+0x38>)
1a0028f2:	f811 2013 	ldrb.w	r2, [r1, r3, lsl #1]
1a0028f6:	eb01 0143 	add.w	r1, r1, r3, lsl #1
1a0028fa:	784d      	ldrb	r5, [r1, #1]
1a0028fc:	4c09      	ldr	r4, [pc, #36]	; (1a002924 <Board_TEC_Init+0x3c>)
1a0028fe:	f502 6200 	add.w	r2, r2, #2048	; 0x800
1a002902:	f854 1022 	ldr.w	r1, [r4, r2, lsl #2]
1a002906:	2001      	movs	r0, #1
1a002908:	40a8      	lsls	r0, r5
1a00290a:	ea21 0100 	bic.w	r1, r1, r0
1a00290e:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
1a002912:	3301      	adds	r3, #1
1a002914:	2b03      	cmp	r3, #3
1a002916:	d9eb      	bls.n	1a0028f0 <Board_TEC_Init+0x8>
1a002918:	bc30      	pop	{r4, r5}
1a00291a:	4770      	bx	lr
1a00291c:	4770      	bx	lr
1a00291e:	bf00      	nop
1a002920:	1a004ae8 	.word	0x1a004ae8
1a002924:	400f4000 	.word	0x400f4000

1a002928 <Board_GPIO_Init>:
1a002928:	2300      	movs	r3, #0
1a00292a:	2b08      	cmp	r3, #8
1a00292c:	d816      	bhi.n	1a00295c <Board_GPIO_Init+0x34>
1a00292e:	b430      	push	{r4, r5}
1a002930:	490b      	ldr	r1, [pc, #44]	; (1a002960 <Board_GPIO_Init+0x38>)
1a002932:	f811 2013 	ldrb.w	r2, [r1, r3, lsl #1]
1a002936:	eb01 0143 	add.w	r1, r1, r3, lsl #1
1a00293a:	784d      	ldrb	r5, [r1, #1]
1a00293c:	4c09      	ldr	r4, [pc, #36]	; (1a002964 <Board_GPIO_Init+0x3c>)
1a00293e:	f502 6200 	add.w	r2, r2, #2048	; 0x800
1a002942:	f854 1022 	ldr.w	r1, [r4, r2, lsl #2]
1a002946:	2001      	movs	r0, #1
1a002948:	40a8      	lsls	r0, r5
1a00294a:	ea21 0100 	bic.w	r1, r1, r0
1a00294e:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
1a002952:	3301      	adds	r3, #1
1a002954:	2b08      	cmp	r3, #8
1a002956:	d9eb      	bls.n	1a002930 <Board_GPIO_Init+0x8>
1a002958:	bc30      	pop	{r4, r5}
1a00295a:	4770      	bx	lr
1a00295c:	4770      	bx	lr
1a00295e:	bf00      	nop
1a002960:	1a004afc 	.word	0x1a004afc
1a002964:	400f4000 	.word	0x400f4000

1a002968 <Board_ADC_Init>:
1a002968:	b510      	push	{r4, lr}
1a00296a:	b082      	sub	sp, #8
1a00296c:	4c08      	ldr	r4, [pc, #32]	; (1a002990 <Board_ADC_Init+0x28>)
1a00296e:	4669      	mov	r1, sp
1a002970:	4620      	mov	r0, r4
1a002972:	f000 f9f9 	bl	1a002d68 <Chip_ADC_Init>
1a002976:	4a07      	ldr	r2, [pc, #28]	; (1a002994 <Board_ADC_Init+0x2c>)
1a002978:	4669      	mov	r1, sp
1a00297a:	4620      	mov	r0, r4
1a00297c:	f000 fa14 	bl	1a002da8 <Chip_ADC_SetSampleRate>
1a002980:	2200      	movs	r2, #0
1a002982:	4669      	mov	r1, sp
1a002984:	4620      	mov	r0, r4
1a002986:	f000 fa28 	bl	1a002dda <Chip_ADC_SetResolution>
1a00298a:	b002      	add	sp, #8
1a00298c:	bd10      	pop	{r4, pc}
1a00298e:	bf00      	nop
1a002990:	400e3000 	.word	0x400e3000
1a002994:	00061a80 	.word	0x00061a80

1a002998 <Board_SPI_Init>:
1a002998:	b510      	push	{r4, lr}
1a00299a:	4c0b      	ldr	r4, [pc, #44]	; (1a0029c8 <Board_SPI_Init+0x30>)
1a00299c:	4620      	mov	r0, r4
1a00299e:	f000 fddf 	bl	1a003560 <Chip_SSP_Init>
1a0029a2:	6863      	ldr	r3, [r4, #4]
1a0029a4:	f023 0304 	bic.w	r3, r3, #4
1a0029a8:	6063      	str	r3, [r4, #4]
1a0029aa:	6823      	ldr	r3, [r4, #0]
1a0029ac:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
1a0029b0:	f043 0307 	orr.w	r3, r3, #7
1a0029b4:	6023      	str	r3, [r4, #0]
1a0029b6:	4905      	ldr	r1, [pc, #20]	; (1a0029cc <Board_SPI_Init+0x34>)
1a0029b8:	4620      	mov	r0, r4
1a0029ba:	f000 fdb2 	bl	1a003522 <Chip_SSP_SetBitRate>
1a0029be:	6863      	ldr	r3, [r4, #4]
1a0029c0:	f043 0302 	orr.w	r3, r3, #2
1a0029c4:	6063      	str	r3, [r4, #4]
1a0029c6:	bd10      	pop	{r4, pc}
1a0029c8:	400c5000 	.word	0x400c5000
1a0029cc:	000186a0 	.word	0x000186a0

1a0029d0 <Board_I2C_Init>:
1a0029d0:	b508      	push	{r3, lr}
1a0029d2:	2000      	movs	r0, #0
1a0029d4:	f000 f8a2 	bl	1a002b1c <Chip_I2C_Init>
1a0029d8:	4b04      	ldr	r3, [pc, #16]	; (1a0029ec <Board_I2C_Init+0x1c>)
1a0029da:	f640 0208 	movw	r2, #2056	; 0x808
1a0029de:	f8c3 2c84 	str.w	r2, [r3, #3204]	; 0xc84
1a0029e2:	4903      	ldr	r1, [pc, #12]	; (1a0029f0 <Board_I2C_Init+0x20>)
1a0029e4:	2000      	movs	r0, #0
1a0029e6:	f000 f8ab 	bl	1a002b40 <Chip_I2C_SetClockRate>
1a0029ea:	bd08      	pop	{r3, pc}
1a0029ec:	40086000 	.word	0x40086000
1a0029f0:	000f4240 	.word	0x000f4240

1a0029f4 <Board_Debug_Init>:
1a0029f4:	b510      	push	{r4, lr}
1a0029f6:	4c07      	ldr	r4, [pc, #28]	; (1a002a14 <Board_Debug_Init+0x20>)
1a0029f8:	4620      	mov	r0, r4
1a0029fa:	f000 f8d3 	bl	1a002ba4 <Chip_UART_Init>
1a0029fe:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
1a002a02:	4620      	mov	r0, r4
1a002a04:	f000 f918 	bl	1a002c38 <Chip_UART_SetBaudFDR>
1a002a08:	2303      	movs	r3, #3
1a002a0a:	60e3      	str	r3, [r4, #12]
1a002a0c:	2301      	movs	r3, #1
1a002a0e:	65e3      	str	r3, [r4, #92]	; 0x5c
1a002a10:	bd10      	pop	{r4, pc}
1a002a12:	bf00      	nop
1a002a14:	400c1000 	.word	0x400c1000

1a002a18 <Board_Init>:
1a002a18:	b508      	push	{r3, lr}
1a002a1a:	f7ff ffeb 	bl	1a0029f4 <Board_Debug_Init>
1a002a1e:	4808      	ldr	r0, [pc, #32]	; (1a002a40 <Board_Init+0x28>)
1a002a20:	f000 fcb4 	bl	1a00338c <Chip_GPIO_Init>
1a002a24:	f7ff ff80 	bl	1a002928 <Board_GPIO_Init>
1a002a28:	f7ff ff9e 	bl	1a002968 <Board_ADC_Init>
1a002a2c:	f7ff ffb4 	bl	1a002998 <Board_SPI_Init>
1a002a30:	f7ff ffce 	bl	1a0029d0 <Board_I2C_Init>
1a002a34:	f7ff ff36 	bl	1a0028a4 <Board_LED_Init>
1a002a38:	f7ff ff56 	bl	1a0028e8 <Board_TEC_Init>
1a002a3c:	bd08      	pop	{r3, pc}
1a002a3e:	bf00      	nop
1a002a40:	400f4000 	.word	0x400f4000

1a002a44 <__stdio_init>:
1a002a44:	b508      	push	{r3, lr}
1a002a46:	f7ff ffd5 	bl	1a0029f4 <Board_Debug_Init>
1a002a4a:	bd08      	pop	{r3, pc}

1a002a4c <Board_SetupMuxing>:
1a002a4c:	2300      	movs	r3, #0
1a002a4e:	2b1c      	cmp	r3, #28
1a002a50:	d812      	bhi.n	1a002a78 <Board_SetupMuxing+0x2c>
1a002a52:	b410      	push	{r4}
1a002a54:	4a09      	ldr	r2, [pc, #36]	; (1a002a7c <Board_SetupMuxing+0x30>)
1a002a56:	eb02 0183 	add.w	r1, r2, r3, lsl #2
1a002a5a:	f812 4023 	ldrb.w	r4, [r2, r3, lsl #2]
1a002a5e:	784a      	ldrb	r2, [r1, #1]
1a002a60:	8848      	ldrh	r0, [r1, #2]
1a002a62:	eb02 1244 	add.w	r2, r2, r4, lsl #5
1a002a66:	4906      	ldr	r1, [pc, #24]	; (1a002a80 <Board_SetupMuxing+0x34>)
1a002a68:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
1a002a6c:	3301      	adds	r3, #1
1a002a6e:	2b1c      	cmp	r3, #28
1a002a70:	d9f0      	bls.n	1a002a54 <Board_SetupMuxing+0x8>
1a002a72:	f85d 4b04 	ldr.w	r4, [sp], #4
1a002a76:	4770      	bx	lr
1a002a78:	4770      	bx	lr
1a002a7a:	bf00      	nop
1a002a7c:	1a004b18 	.word	0x1a004b18
1a002a80:	40086000 	.word	0x40086000

1a002a84 <Board_SetupClocking>:
1a002a84:	b510      	push	{r4, lr}
1a002a86:	4a17      	ldr	r2, [pc, #92]	; (1a002ae4 <Board_SetupClocking+0x60>)
1a002a88:	f8d2 3120 	ldr.w	r3, [r2, #288]	; 0x120
1a002a8c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
1a002a90:	f443 4310 	orr.w	r3, r3, #36864	; 0x9000
1a002a94:	f8c2 3120 	str.w	r3, [r2, #288]	; 0x120
1a002a98:	f8d2 3124 	ldr.w	r3, [r2, #292]	; 0x124
1a002a9c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
1a002aa0:	f443 4310 	orr.w	r3, r3, #36864	; 0x9000
1a002aa4:	f8c2 3124 	str.w	r3, [r2, #292]	; 0x124
1a002aa8:	2201      	movs	r2, #1
1a002aaa:	490f      	ldr	r1, [pc, #60]	; (1a002ae8 <Board_SetupClocking+0x64>)
1a002aac:	2006      	movs	r0, #6
1a002aae:	f000 fc6f 	bl	1a003390 <Chip_SetupCoreClock>
1a002ab2:	2400      	movs	r4, #0
1a002ab4:	b14c      	cbz	r4, 1a002aca <Board_SetupClocking+0x46>
1a002ab6:	4b0b      	ldr	r3, [pc, #44]	; (1a002ae4 <Board_SetupClocking+0x60>)
1a002ab8:	685a      	ldr	r2, [r3, #4]
1a002aba:	f022 020c 	bic.w	r2, r2, #12
1a002abe:	605a      	str	r2, [r3, #4]
1a002ac0:	685a      	ldr	r2, [r3, #4]
1a002ac2:	f042 0203 	orr.w	r2, r2, #3
1a002ac6:	605a      	str	r2, [r3, #4]
1a002ac8:	bd10      	pop	{r4, pc}
1a002aca:	4808      	ldr	r0, [pc, #32]	; (1a002aec <Board_SetupClocking+0x68>)
1a002acc:	eb00 0184 	add.w	r1, r0, r4, lsl #2
1a002ad0:	2301      	movs	r3, #1
1a002ad2:	788a      	ldrb	r2, [r1, #2]
1a002ad4:	7849      	ldrb	r1, [r1, #1]
1a002ad6:	f810 0024 	ldrb.w	r0, [r0, r4, lsl #2]
1a002ada:	f000 fba9 	bl	1a003230 <Chip_Clock_SetBaseClock>
1a002ade:	3401      	adds	r4, #1
1a002ae0:	e7e8      	b.n	1a002ab4 <Board_SetupClocking+0x30>
1a002ae2:	bf00      	nop
1a002ae4:	40043000 	.word	0x40043000
1a002ae8:	0c28cb00 	.word	0x0c28cb00
1a002aec:	1a004b14 	.word	0x1a004b14

1a002af0 <Board_SystemInit>:
1a002af0:	b508      	push	{r3, lr}
1a002af2:	f7ff ffab 	bl	1a002a4c <Board_SetupMuxing>
1a002af6:	f7ff ffc5 	bl	1a002a84 <Board_SetupClocking>
1a002afa:	bd08      	pop	{r3, pc}

1a002afc <Chip_I2C_EventHandler>:
1a002afc:	2901      	cmp	r1, #1
1a002afe:	d000      	beq.n	1a002b02 <Chip_I2C_EventHandler+0x6>
1a002b00:	4770      	bx	lr
1a002b02:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
1a002b06:	0082      	lsls	r2, r0, #2
1a002b08:	4b03      	ldr	r3, [pc, #12]	; (1a002b18 <Chip_I2C_EventHandler+0x1c>)
1a002b0a:	4413      	add	r3, r2
1a002b0c:	691a      	ldr	r2, [r3, #16]
1a002b0e:	7d13      	ldrb	r3, [r2, #20]
1a002b10:	b2db      	uxtb	r3, r3
1a002b12:	2b04      	cmp	r3, #4
1a002b14:	d0fb      	beq.n	1a002b0e <Chip_I2C_EventHandler+0x12>
1a002b16:	e7f3      	b.n	1a002b00 <Chip_I2C_EventHandler+0x4>
1a002b18:	10000014 	.word	0x10000014

1a002b1c <Chip_I2C_Init>:
1a002b1c:	b570      	push	{r4, r5, r6, lr}
1a002b1e:	4605      	mov	r5, r0
1a002b20:	4e06      	ldr	r6, [pc, #24]	; (1a002b3c <Chip_I2C_Init+0x20>)
1a002b22:	00c4      	lsls	r4, r0, #3
1a002b24:	1a22      	subs	r2, r4, r0
1a002b26:	0093      	lsls	r3, r2, #2
1a002b28:	4433      	add	r3, r6
1a002b2a:	8898      	ldrh	r0, [r3, #4]
1a002b2c:	f000 fbe4 	bl	1a0032f8 <Chip_Clock_Enable>
1a002b30:	1b64      	subs	r4, r4, r5
1a002b32:	00a3      	lsls	r3, r4, #2
1a002b34:	58f3      	ldr	r3, [r6, r3]
1a002b36:	226c      	movs	r2, #108	; 0x6c
1a002b38:	619a      	str	r2, [r3, #24]
1a002b3a:	bd70      	pop	{r4, r5, r6, pc}
1a002b3c:	10000014 	.word	0x10000014

1a002b40 <Chip_I2C_SetClockRate>:
1a002b40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a002b44:	460c      	mov	r4, r1
1a002b46:	4e0b      	ldr	r6, [pc, #44]	; (1a002b74 <Chip_I2C_SetClockRate+0x34>)
1a002b48:	00c5      	lsls	r5, r0, #3
1a002b4a:	1a2b      	subs	r3, r5, r0
1a002b4c:	ea4f 0883 	mov.w	r8, r3, lsl #2
1a002b50:	eb06 0308 	add.w	r3, r6, r8
1a002b54:	8898      	ldrh	r0, [r3, #4]
1a002b56:	f000 fbe9 	bl	1a00332c <Chip_Clock_GetRate>
1a002b5a:	fbb0 f0f4 	udiv	r0, r0, r4
1a002b5e:	f856 3008 	ldr.w	r3, [r6, r8]
1a002b62:	0842      	lsrs	r2, r0, #1
1a002b64:	611a      	str	r2, [r3, #16]
1a002b66:	f856 3008 	ldr.w	r3, [r6, r8]
1a002b6a:	691a      	ldr	r2, [r3, #16]
1a002b6c:	1a80      	subs	r0, r0, r2
1a002b6e:	6158      	str	r0, [r3, #20]
1a002b70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a002b74:	10000014 	.word	0x10000014

1a002b78 <Chip_UART_GetIndex>:
1a002b78:	4b09      	ldr	r3, [pc, #36]	; (1a002ba0 <Chip_UART_GetIndex+0x28>)
1a002b7a:	4298      	cmp	r0, r3
1a002b7c:	d009      	beq.n	1a002b92 <Chip_UART_GetIndex+0x1a>
1a002b7e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
1a002b82:	4298      	cmp	r0, r3
1a002b84:	d007      	beq.n	1a002b96 <Chip_UART_GetIndex+0x1e>
1a002b86:	f5a3 2380 	sub.w	r3, r3, #262144	; 0x40000
1a002b8a:	4298      	cmp	r0, r3
1a002b8c:	d005      	beq.n	1a002b9a <Chip_UART_GetIndex+0x22>
1a002b8e:	2000      	movs	r0, #0
1a002b90:	4770      	bx	lr
1a002b92:	2002      	movs	r0, #2
1a002b94:	4770      	bx	lr
1a002b96:	2003      	movs	r0, #3
1a002b98:	4770      	bx	lr
1a002b9a:	2001      	movs	r0, #1
1a002b9c:	4770      	bx	lr
1a002b9e:	bf00      	nop
1a002ba0:	400c1000 	.word	0x400c1000

1a002ba4 <Chip_UART_Init>:
1a002ba4:	b530      	push	{r4, r5, lr}
1a002ba6:	b083      	sub	sp, #12
1a002ba8:	4604      	mov	r4, r0
1a002baa:	f7ff ffe5 	bl	1a002b78 <Chip_UART_GetIndex>
1a002bae:	2301      	movs	r3, #1
1a002bb0:	461a      	mov	r2, r3
1a002bb2:	4619      	mov	r1, r3
1a002bb4:	4d0e      	ldr	r5, [pc, #56]	; (1a002bf0 <Chip_UART_Init+0x4c>)
1a002bb6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
1a002bba:	f000 fb7f 	bl	1a0032bc <Chip_Clock_EnableOpts>
1a002bbe:	2307      	movs	r3, #7
1a002bc0:	60a3      	str	r3, [r4, #8]
1a002bc2:	2300      	movs	r3, #0
1a002bc4:	65e3      	str	r3, [r4, #92]	; 0x5c
1a002bc6:	6063      	str	r3, [r4, #4]
1a002bc8:	60e3      	str	r3, [r4, #12]
1a002bca:	6223      	str	r3, [r4, #32]
1a002bcc:	64e3      	str	r3, [r4, #76]	; 0x4c
1a002bce:	6563      	str	r3, [r4, #84]	; 0x54
1a002bd0:	6523      	str	r3, [r4, #80]	; 0x50
1a002bd2:	4b08      	ldr	r3, [pc, #32]	; (1a002bf4 <Chip_UART_Init+0x50>)
1a002bd4:	429c      	cmp	r4, r3
1a002bd6:	d006      	beq.n	1a002be6 <Chip_UART_Init+0x42>
1a002bd8:	2303      	movs	r3, #3
1a002bda:	60e3      	str	r3, [r4, #12]
1a002bdc:	2310      	movs	r3, #16
1a002bde:	62a3      	str	r3, [r4, #40]	; 0x28
1a002be0:	9b01      	ldr	r3, [sp, #4]
1a002be2:	b003      	add	sp, #12
1a002be4:	bd30      	pop	{r4, r5, pc}
1a002be6:	2300      	movs	r3, #0
1a002be8:	6123      	str	r3, [r4, #16]
1a002bea:	69a3      	ldr	r3, [r4, #24]
1a002bec:	9301      	str	r3, [sp, #4]
1a002bee:	e7f3      	b.n	1a002bd8 <Chip_UART_Init+0x34>
1a002bf0:	1a004b94 	.word	0x1a004b94
1a002bf4:	40082000 	.word	0x40082000

1a002bf8 <Chip_UART_SetBaud>:
1a002bf8:	b538      	push	{r3, r4, r5, lr}
1a002bfa:	4605      	mov	r5, r0
1a002bfc:	460c      	mov	r4, r1
1a002bfe:	f7ff ffbb 	bl	1a002b78 <Chip_UART_GetIndex>
1a002c02:	4b0c      	ldr	r3, [pc, #48]	; (1a002c34 <Chip_UART_SetBaud+0x3c>)
1a002c04:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
1a002c08:	f000 fb90 	bl	1a00332c <Chip_Clock_GetRate>
1a002c0c:	0123      	lsls	r3, r4, #4
1a002c0e:	fbb0 f3f3 	udiv	r3, r0, r3
1a002c12:	b2d9      	uxtb	r1, r3
1a002c14:	68ea      	ldr	r2, [r5, #12]
1a002c16:	f042 0280 	orr.w	r2, r2, #128	; 0x80
1a002c1a:	60ea      	str	r2, [r5, #12]
1a002c1c:	6029      	str	r1, [r5, #0]
1a002c1e:	f3c3 2207 	ubfx	r2, r3, #8, #8
1a002c22:	606a      	str	r2, [r5, #4]
1a002c24:	68ea      	ldr	r2, [r5, #12]
1a002c26:	f022 0280 	bic.w	r2, r2, #128	; 0x80
1a002c2a:	60ea      	str	r2, [r5, #12]
1a002c2c:	fbb0 f0f3 	udiv	r0, r0, r3
1a002c30:	0900      	lsrs	r0, r0, #4
1a002c32:	bd38      	pop	{r3, r4, r5, pc}
1a002c34:	1a004b8c 	.word	0x1a004b8c

1a002c38 <Chip_UART_SetBaudFDR>:
1a002c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a002c3c:	b083      	sub	sp, #12
1a002c3e:	4683      	mov	fp, r0
1a002c40:	4688      	mov	r8, r1
1a002c42:	f7ff ff99 	bl	1a002b78 <Chip_UART_GetIndex>
1a002c46:	4b35      	ldr	r3, [pc, #212]	; (1a002d1c <Chip_UART_SetBaudFDR+0xe4>)
1a002c48:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
1a002c4c:	f000 fb6e 	bl	1a00332c <Chip_Clock_GetRate>
1a002c50:	4606      	mov	r6, r0
1a002c52:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
1a002c56:	2401      	movs	r4, #1
1a002c58:	2300      	movs	r3, #0
1a002c5a:	9301      	str	r3, [sp, #4]
1a002c5c:	46a2      	mov	sl, r4
1a002c5e:	4699      	mov	r9, r3
1a002c60:	e02a      	b.n	1a002cb8 <Chip_UART_SetBaudFDR+0x80>
1a002c62:	4242      	negs	r2, r0
1a002c64:	1c4b      	adds	r3, r1, #1
1a002c66:	e017      	b.n	1a002c98 <Chip_UART_SetBaudFDR+0x60>
1a002c68:	b30a      	cbz	r2, 1a002cae <Chip_UART_SetBaudFDR+0x76>
1a002c6a:	4617      	mov	r7, r2
1a002c6c:	9501      	str	r5, [sp, #4]
1a002c6e:	46a2      	mov	sl, r4
1a002c70:	4699      	mov	r9, r3
1a002c72:	3501      	adds	r5, #1
1a002c74:	42ac      	cmp	r4, r5
1a002c76:	d91e      	bls.n	1a002cb6 <Chip_UART_SetBaudFDR+0x7e>
1a002c78:	0933      	lsrs	r3, r6, #4
1a002c7a:	0730      	lsls	r0, r6, #28
1a002c7c:	fba4 0100 	umull	r0, r1, r4, r0
1a002c80:	fb04 1103 	mla	r1, r4, r3, r1
1a002c84:	1962      	adds	r2, r4, r5
1a002c86:	fb08 f202 	mul.w	r2, r8, r2
1a002c8a:	2300      	movs	r3, #0
1a002c8c:	f001 f8a2 	bl	1a003dd4 <__aeabi_uldivmod>
1a002c90:	4602      	mov	r2, r0
1a002c92:	460b      	mov	r3, r1
1a002c94:	2800      	cmp	r0, #0
1a002c96:	dbe4      	blt.n	1a002c62 <Chip_UART_SetBaudFDR+0x2a>
1a002c98:	4297      	cmp	r7, r2
1a002c9a:	d3ea      	bcc.n	1a002c72 <Chip_UART_SetBaudFDR+0x3a>
1a002c9c:	2b00      	cmp	r3, #0
1a002c9e:	d0e8      	beq.n	1a002c72 <Chip_UART_SetBaudFDR+0x3a>
1a002ca0:	0c19      	lsrs	r1, r3, #16
1a002ca2:	d1e6      	bne.n	1a002c72 <Chip_UART_SetBaudFDR+0x3a>
1a002ca4:	2b02      	cmp	r3, #2
1a002ca6:	d8df      	bhi.n	1a002c68 <Chip_UART_SetBaudFDR+0x30>
1a002ca8:	2d00      	cmp	r5, #0
1a002caa:	d0dd      	beq.n	1a002c68 <Chip_UART_SetBaudFDR+0x30>
1a002cac:	e7e1      	b.n	1a002c72 <Chip_UART_SetBaudFDR+0x3a>
1a002cae:	4617      	mov	r7, r2
1a002cb0:	9501      	str	r5, [sp, #4]
1a002cb2:	46a2      	mov	sl, r4
1a002cb4:	4699      	mov	r9, r3
1a002cb6:	3401      	adds	r4, #1
1a002cb8:	b11f      	cbz	r7, 1a002cc2 <Chip_UART_SetBaudFDR+0x8a>
1a002cba:	2c0f      	cmp	r4, #15
1a002cbc:	d801      	bhi.n	1a002cc2 <Chip_UART_SetBaudFDR+0x8a>
1a002cbe:	2500      	movs	r5, #0
1a002cc0:	e7d8      	b.n	1a002c74 <Chip_UART_SetBaudFDR+0x3c>
1a002cc2:	f1b9 0f00 	cmp.w	r9, #0
1a002cc6:	d024      	beq.n	1a002d12 <Chip_UART_SetBaudFDR+0xda>
1a002cc8:	f8db 300c 	ldr.w	r3, [fp, #12]
1a002ccc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a002cd0:	f8cb 300c 	str.w	r3, [fp, #12]
1a002cd4:	fa5f f389 	uxtb.w	r3, r9
1a002cd8:	f8cb 3000 	str.w	r3, [fp]
1a002cdc:	f3c9 2307 	ubfx	r3, r9, #8, #8
1a002ce0:	f8cb 3004 	str.w	r3, [fp, #4]
1a002ce4:	f8db 300c 	ldr.w	r3, [fp, #12]
1a002ce8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a002cec:	f8cb 300c 	str.w	r3, [fp, #12]
1a002cf0:	ea4f 130a 	mov.w	r3, sl, lsl #4
1a002cf4:	b2db      	uxtb	r3, r3
1a002cf6:	9901      	ldr	r1, [sp, #4]
1a002cf8:	f001 020f 	and.w	r2, r1, #15
1a002cfc:	4313      	orrs	r3, r2
1a002cfe:	f8cb 3028 	str.w	r3, [fp, #40]	; 0x28
1a002d02:	0933      	lsrs	r3, r6, #4
1a002d04:	fb0a f303 	mul.w	r3, sl, r3
1a002d08:	448a      	add	sl, r1
1a002d0a:	fb09 f90a 	mul.w	r9, r9, sl
1a002d0e:	fbb3 f9f9 	udiv	r9, r3, r9
1a002d12:	4648      	mov	r0, r9
1a002d14:	b003      	add	sp, #12
1a002d16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a002d1a:	bf00      	nop
1a002d1c:	1a004b8c 	.word	0x1a004b8c

1a002d20 <Chip_ADC_GetClockIndex>:
1a002d20:	4b03      	ldr	r3, [pc, #12]	; (1a002d30 <Chip_ADC_GetClockIndex+0x10>)
1a002d22:	4298      	cmp	r0, r3
1a002d24:	d001      	beq.n	1a002d2a <Chip_ADC_GetClockIndex+0xa>
1a002d26:	2003      	movs	r0, #3
1a002d28:	4770      	bx	lr
1a002d2a:	2004      	movs	r0, #4
1a002d2c:	4770      	bx	lr
1a002d2e:	bf00      	nop
1a002d30:	400e4000 	.word	0x400e4000

1a002d34 <getClkDiv>:
1a002d34:	b570      	push	{r4, r5, r6, lr}
1a002d36:	460d      	mov	r5, r1
1a002d38:	4614      	mov	r4, r2
1a002d3a:	461e      	mov	r6, r3
1a002d3c:	f7ff fff0 	bl	1a002d20 <Chip_ADC_GetClockIndex>
1a002d40:	f000 faf4 	bl	1a00332c <Chip_Clock_GetRate>
1a002d44:	b965      	cbnz	r5, 1a002d60 <getClkDiv+0x2c>
1a002d46:	eb04 0384 	add.w	r3, r4, r4, lsl #2
1a002d4a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
1a002d4e:	eb04 0040 	add.w	r0, r4, r0, lsl #1
1a002d52:	0064      	lsls	r4, r4, #1
1a002d54:	fbb0 f0f4 	udiv	r0, r0, r4
1a002d58:	b2c0      	uxtb	r0, r0
1a002d5a:	3801      	subs	r0, #1
1a002d5c:	b2c0      	uxtb	r0, r0
1a002d5e:	bd70      	pop	{r4, r5, r6, pc}
1a002d60:	fb04 f406 	mul.w	r4, r4, r6
1a002d64:	e7f3      	b.n	1a002d4e <getClkDiv+0x1a>
1a002d66:	Address 0x000000001a002d66 is out of bounds.


1a002d68 <Chip_ADC_Init>:
1a002d68:	b538      	push	{r3, r4, r5, lr}
1a002d6a:	4605      	mov	r5, r0
1a002d6c:	460c      	mov	r4, r1
1a002d6e:	f7ff ffd7 	bl	1a002d20 <Chip_ADC_GetClockIndex>
1a002d72:	2301      	movs	r3, #1
1a002d74:	461a      	mov	r2, r3
1a002d76:	4619      	mov	r1, r3
1a002d78:	f000 faa0 	bl	1a0032bc <Chip_Clock_EnableOpts>
1a002d7c:	2100      	movs	r1, #0
1a002d7e:	60e9      	str	r1, [r5, #12]
1a002d80:	4a08      	ldr	r2, [pc, #32]	; (1a002da4 <Chip_ADC_Init+0x3c>)
1a002d82:	6022      	str	r2, [r4, #0]
1a002d84:	7121      	strb	r1, [r4, #4]
1a002d86:	7161      	strb	r1, [r4, #5]
1a002d88:	230b      	movs	r3, #11
1a002d8a:	4628      	mov	r0, r5
1a002d8c:	f7ff ffd2 	bl	1a002d34 <getClkDiv>
1a002d90:	0200      	lsls	r0, r0, #8
1a002d92:	f440 1300 	orr.w	r3, r0, #2097152	; 0x200000
1a002d96:	7920      	ldrb	r0, [r4, #4]
1a002d98:	0440      	lsls	r0, r0, #17
1a002d9a:	f400 2060 	and.w	r0, r0, #917504	; 0xe0000
1a002d9e:	4318      	orrs	r0, r3
1a002da0:	6028      	str	r0, [r5, #0]
1a002da2:	bd38      	pop	{r3, r4, r5, pc}
1a002da4:	00061a80 	.word	0x00061a80

1a002da8 <Chip_ADC_SetSampleRate>:
1a002da8:	b570      	push	{r4, r5, r6, lr}
1a002daa:	4605      	mov	r5, r0
1a002dac:	460e      	mov	r6, r1
1a002dae:	6804      	ldr	r4, [r0, #0]
1a002db0:	f424 246f 	bic.w	r4, r4, #978944	; 0xef000
1a002db4:	f424 6470 	bic.w	r4, r4, #3840	; 0xf00
1a002db8:	600a      	str	r2, [r1, #0]
1a002dba:	790b      	ldrb	r3, [r1, #4]
1a002dbc:	f1c3 030b 	rsb	r3, r3, #11
1a002dc0:	b2db      	uxtb	r3, r3
1a002dc2:	7949      	ldrb	r1, [r1, #5]
1a002dc4:	f7ff ffb6 	bl	1a002d34 <getClkDiv>
1a002dc8:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
1a002dcc:	7930      	ldrb	r0, [r6, #4]
1a002dce:	0440      	lsls	r0, r0, #17
1a002dd0:	f400 2060 	and.w	r0, r0, #917504	; 0xe0000
1a002dd4:	4320      	orrs	r0, r4
1a002dd6:	6028      	str	r0, [r5, #0]
1a002dd8:	bd70      	pop	{r4, r5, r6, pc}

1a002dda <Chip_ADC_SetResolution>:
1a002dda:	b508      	push	{r3, lr}
1a002ddc:	710a      	strb	r2, [r1, #4]
1a002dde:	680a      	ldr	r2, [r1, #0]
1a002de0:	f7ff ffe2 	bl	1a002da8 <Chip_ADC_SetSampleRate>
1a002de4:	bd08      	pop	{r3, pc}
1a002de6:	Address 0x000000001a002de6 is out of bounds.


1a002de8 <pll_calc_divs>:
1a002de8:	b4f0      	push	{r4, r5, r6, r7}
1a002dea:	680b      	ldr	r3, [r1, #0]
1a002dec:	f013 0f80 	tst.w	r3, #128	; 0x80
1a002df0:	d002      	beq.n	1a002df8 <pll_calc_divs+0x10>
1a002df2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
1a002df6:	600b      	str	r3, [r1, #0]
1a002df8:	4607      	mov	r7, r0
1a002dfa:	2501      	movs	r5, #1
1a002dfc:	e03b      	b.n	1a002e76 <pll_calc_divs+0x8e>
1a002dfe:	694b      	ldr	r3, [r1, #20]
1a002e00:	fb03 f302 	mul.w	r3, r3, r2
1a002e04:	fbb3 f3f5 	udiv	r3, r3, r5
1a002e08:	e014      	b.n	1a002e34 <pll_calc_divs+0x4c>
1a002e0a:	461c      	mov	r4, r3
1a002e0c:	e020      	b.n	1a002e50 <pll_calc_divs+0x68>
1a002e0e:	f1cc 0c00 	rsb	ip, ip, #0
1a002e12:	e020      	b.n	1a002e56 <pll_calc_divs+0x6e>
1a002e14:	3201      	adds	r2, #1
1a002e16:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
1a002e1a:	dc26      	bgt.n	1a002e6a <pll_calc_divs+0x82>
1a002e1c:	680c      	ldr	r4, [r1, #0]
1a002e1e:	f014 0f40 	tst.w	r4, #64	; 0x40
1a002e22:	d0ec      	beq.n	1a002dfe <pll_calc_divs+0x16>
1a002e24:	1c73      	adds	r3, r6, #1
1a002e26:	fa02 fc03 	lsl.w	ip, r2, r3
1a002e2a:	694b      	ldr	r3, [r1, #20]
1a002e2c:	fb03 f30c 	mul.w	r3, r3, ip
1a002e30:	fbb3 f3f5 	udiv	r3, r3, r5
1a002e34:	f8df c04c 	ldr.w	ip, [pc, #76]	; 1a002e84 <pll_calc_divs+0x9c>
1a002e38:	4563      	cmp	r3, ip
1a002e3a:	d9eb      	bls.n	1a002e14 <pll_calc_divs+0x2c>
1a002e3c:	f8df c048 	ldr.w	ip, [pc, #72]	; 1a002e88 <pll_calc_divs+0xa0>
1a002e40:	4563      	cmp	r3, ip
1a002e42:	d812      	bhi.n	1a002e6a <pll_calc_divs+0x82>
1a002e44:	f014 0f80 	tst.w	r4, #128	; 0x80
1a002e48:	d1df      	bne.n	1a002e0a <pll_calc_divs+0x22>
1a002e4a:	1c74      	adds	r4, r6, #1
1a002e4c:	fa23 f404 	lsr.w	r4, r3, r4
1a002e50:	ebb0 0c04 	subs.w	ip, r0, r4
1a002e54:	d4db      	bmi.n	1a002e0e <pll_calc_divs+0x26>
1a002e56:	4567      	cmp	r7, ip
1a002e58:	d9dc      	bls.n	1a002e14 <pll_calc_divs+0x2c>
1a002e5a:	608d      	str	r5, [r1, #8]
1a002e5c:	1c77      	adds	r7, r6, #1
1a002e5e:	60cf      	str	r7, [r1, #12]
1a002e60:	610a      	str	r2, [r1, #16]
1a002e62:	618c      	str	r4, [r1, #24]
1a002e64:	61cb      	str	r3, [r1, #28]
1a002e66:	4667      	mov	r7, ip
1a002e68:	e7d4      	b.n	1a002e14 <pll_calc_divs+0x2c>
1a002e6a:	3601      	adds	r6, #1
1a002e6c:	2e03      	cmp	r6, #3
1a002e6e:	dc01      	bgt.n	1a002e74 <pll_calc_divs+0x8c>
1a002e70:	2201      	movs	r2, #1
1a002e72:	e7d0      	b.n	1a002e16 <pll_calc_divs+0x2e>
1a002e74:	3501      	adds	r5, #1
1a002e76:	2d04      	cmp	r5, #4
1a002e78:	dc01      	bgt.n	1a002e7e <pll_calc_divs+0x96>
1a002e7a:	2600      	movs	r6, #0
1a002e7c:	e7f6      	b.n	1a002e6c <pll_calc_divs+0x84>
1a002e7e:	bcf0      	pop	{r4, r5, r6, r7}
1a002e80:	4770      	bx	lr
1a002e82:	bf00      	nop
1a002e84:	094c5eff 	.word	0x094c5eff
1a002e88:	1312d000 	.word	0x1312d000

1a002e8c <pll_get_frac>:
1a002e8c:	b5f0      	push	{r4, r5, r6, r7, lr}
1a002e8e:	b099      	sub	sp, #100	; 0x64
1a002e90:	4605      	mov	r5, r0
1a002e92:	460c      	mov	r4, r1
1a002e94:	225c      	movs	r2, #92	; 0x5c
1a002e96:	2100      	movs	r1, #0
1a002e98:	a801      	add	r0, sp, #4
1a002e9a:	f001 f94a 	bl	1a004132 <memset>
1a002e9e:	2380      	movs	r3, #128	; 0x80
1a002ea0:	9300      	str	r3, [sp, #0]
1a002ea2:	6963      	ldr	r3, [r4, #20]
1a002ea4:	9305      	str	r3, [sp, #20]
1a002ea6:	7923      	ldrb	r3, [r4, #4]
1a002ea8:	f88d 3004 	strb.w	r3, [sp, #4]
1a002eac:	4669      	mov	r1, sp
1a002eae:	4628      	mov	r0, r5
1a002eb0:	f7ff ff9a 	bl	1a002de8 <pll_calc_divs>
1a002eb4:	9b06      	ldr	r3, [sp, #24]
1a002eb6:	42ab      	cmp	r3, r5
1a002eb8:	d027      	beq.n	1a002f0a <pll_get_frac+0x7e>
1a002eba:	1aeb      	subs	r3, r5, r3
1a002ebc:	d42e      	bmi.n	1a002f1c <pll_get_frac+0x90>
1a002ebe:	461e      	mov	r6, r3
1a002ec0:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a002ec2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
1a002ec6:	9310      	str	r3, [sp, #64]	; 0x40
1a002ec8:	6963      	ldr	r3, [r4, #20]
1a002eca:	9315      	str	r3, [sp, #84]	; 0x54
1a002ecc:	7923      	ldrb	r3, [r4, #4]
1a002ece:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
1a002ed2:	a910      	add	r1, sp, #64	; 0x40
1a002ed4:	4628      	mov	r0, r5
1a002ed6:	f7ff ff87 	bl	1a002de8 <pll_calc_divs>
1a002eda:	9b16      	ldr	r3, [sp, #88]	; 0x58
1a002edc:	42ab      	cmp	r3, r5
1a002ede:	d01f      	beq.n	1a002f20 <pll_get_frac+0x94>
1a002ee0:	1aeb      	subs	r3, r5, r3
1a002ee2:	d425      	bmi.n	1a002f30 <pll_get_frac+0xa4>
1a002ee4:	461f      	mov	r7, r3
1a002ee6:	4b2b      	ldr	r3, [pc, #172]	; (1a002f94 <pll_get_frac+0x108>)
1a002ee8:	429d      	cmp	r5, r3
1a002eea:	d923      	bls.n	1a002f34 <pll_get_frac+0xa8>
1a002eec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a002eee:	1aed      	subs	r5, r5, r3
1a002ef0:	d433      	bmi.n	1a002f5a <pll_get_frac+0xce>
1a002ef2:	42ae      	cmp	r6, r5
1a002ef4:	dc3b      	bgt.n	1a002f6e <pll_get_frac+0xe2>
1a002ef6:	42be      	cmp	r6, r7
1a002ef8:	dc31      	bgt.n	1a002f5e <pll_get_frac+0xd2>
1a002efa:	466d      	mov	r5, sp
1a002efc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a002efe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a002f00:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a002f04:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a002f08:	e006      	b.n	1a002f18 <pll_get_frac+0x8c>
1a002f0a:	466d      	mov	r5, sp
1a002f0c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a002f0e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a002f10:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a002f14:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a002f18:	b019      	add	sp, #100	; 0x64
1a002f1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1a002f1c:	425b      	negs	r3, r3
1a002f1e:	e7ce      	b.n	1a002ebe <pll_get_frac+0x32>
1a002f20:	ad10      	add	r5, sp, #64	; 0x40
1a002f22:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a002f24:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a002f26:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a002f2a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a002f2e:	e7f3      	b.n	1a002f18 <pll_get_frac+0x8c>
1a002f30:	425b      	negs	r3, r3
1a002f32:	e7d7      	b.n	1a002ee4 <pll_get_frac+0x58>
1a002f34:	2340      	movs	r3, #64	; 0x40
1a002f36:	9308      	str	r3, [sp, #32]
1a002f38:	6963      	ldr	r3, [r4, #20]
1a002f3a:	930d      	str	r3, [sp, #52]	; 0x34
1a002f3c:	a908      	add	r1, sp, #32
1a002f3e:	4628      	mov	r0, r5
1a002f40:	f7ff ff52 	bl	1a002de8 <pll_calc_divs>
1a002f44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a002f46:	42ab      	cmp	r3, r5
1a002f48:	d1d0      	bne.n	1a002eec <pll_get_frac+0x60>
1a002f4a:	ad08      	add	r5, sp, #32
1a002f4c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a002f4e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a002f50:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a002f54:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a002f58:	e7de      	b.n	1a002f18 <pll_get_frac+0x8c>
1a002f5a:	426d      	negs	r5, r5
1a002f5c:	e7c9      	b.n	1a002ef2 <pll_get_frac+0x66>
1a002f5e:	ad10      	add	r5, sp, #64	; 0x40
1a002f60:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a002f62:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a002f64:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a002f68:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a002f6c:	e7d4      	b.n	1a002f18 <pll_get_frac+0x8c>
1a002f6e:	42af      	cmp	r7, r5
1a002f70:	db07      	blt.n	1a002f82 <pll_get_frac+0xf6>
1a002f72:	ad08      	add	r5, sp, #32
1a002f74:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a002f76:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a002f78:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a002f7c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a002f80:	e7ca      	b.n	1a002f18 <pll_get_frac+0x8c>
1a002f82:	ad10      	add	r5, sp, #64	; 0x40
1a002f84:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a002f86:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a002f88:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a002f8c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a002f90:	e7c2      	b.n	1a002f18 <pll_get_frac+0x8c>
1a002f92:	bf00      	nop
1a002f94:	068e7780 	.word	0x068e7780

1a002f98 <Chip_Clock_FindBaseClock>:
1a002f98:	b430      	push	{r4, r5}
1a002f9a:	4605      	mov	r5, r0
1a002f9c:	2300      	movs	r3, #0
1a002f9e:	201c      	movs	r0, #28
1a002fa0:	e000      	b.n	1a002fa4 <Chip_Clock_FindBaseClock+0xc>
1a002fa2:	3301      	adds	r3, #1
1a002fa4:	281c      	cmp	r0, #28
1a002fa6:	d118      	bne.n	1a002fda <Chip_Clock_FindBaseClock+0x42>
1a002fa8:	eb03 0243 	add.w	r2, r3, r3, lsl #1
1a002fac:	0051      	lsls	r1, r2, #1
1a002fae:	4a0c      	ldr	r2, [pc, #48]	; (1a002fe0 <Chip_Clock_FindBaseClock+0x48>)
1a002fb0:	440a      	add	r2, r1
1a002fb2:	7914      	ldrb	r4, [r2, #4]
1a002fb4:	4284      	cmp	r4, r0
1a002fb6:	d010      	beq.n	1a002fda <Chip_Clock_FindBaseClock+0x42>
1a002fb8:	eb03 0143 	add.w	r1, r3, r3, lsl #1
1a002fbc:	004a      	lsls	r2, r1, #1
1a002fbe:	4908      	ldr	r1, [pc, #32]	; (1a002fe0 <Chip_Clock_FindBaseClock+0x48>)
1a002fc0:	5a8a      	ldrh	r2, [r1, r2]
1a002fc2:	42aa      	cmp	r2, r5
1a002fc4:	d8ed      	bhi.n	1a002fa2 <Chip_Clock_FindBaseClock+0xa>
1a002fc6:	eb03 0243 	add.w	r2, r3, r3, lsl #1
1a002fca:	0051      	lsls	r1, r2, #1
1a002fcc:	4a04      	ldr	r2, [pc, #16]	; (1a002fe0 <Chip_Clock_FindBaseClock+0x48>)
1a002fce:	440a      	add	r2, r1
1a002fd0:	8852      	ldrh	r2, [r2, #2]
1a002fd2:	42aa      	cmp	r2, r5
1a002fd4:	d3e5      	bcc.n	1a002fa2 <Chip_Clock_FindBaseClock+0xa>
1a002fd6:	4620      	mov	r0, r4
1a002fd8:	e7e4      	b.n	1a002fa4 <Chip_Clock_FindBaseClock+0xc>
1a002fda:	bc30      	pop	{r4, r5}
1a002fdc:	4770      	bx	lr
1a002fde:	bf00      	nop
1a002fe0:	1a004ba8 	.word	0x1a004ba8

1a002fe4 <Chip_Clock_EnableCrystal>:
1a002fe4:	b082      	sub	sp, #8
1a002fe6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
1a002fea:	9301      	str	r3, [sp, #4]
1a002fec:	4a0d      	ldr	r2, [pc, #52]	; (1a003024 <Chip_Clock_EnableCrystal+0x40>)
1a002fee:	6993      	ldr	r3, [r2, #24]
1a002ff0:	f023 0102 	bic.w	r1, r3, #2
1a002ff4:	6992      	ldr	r2, [r2, #24]
1a002ff6:	428a      	cmp	r2, r1
1a002ff8:	d001      	beq.n	1a002ffe <Chip_Clock_EnableCrystal+0x1a>
1a002ffa:	4a0a      	ldr	r2, [pc, #40]	; (1a003024 <Chip_Clock_EnableCrystal+0x40>)
1a002ffc:	6191      	str	r1, [r2, #24]
1a002ffe:	f023 0303 	bic.w	r3, r3, #3
1a003002:	4a09      	ldr	r2, [pc, #36]	; (1a003028 <Chip_Clock_EnableCrystal+0x44>)
1a003004:	6811      	ldr	r1, [r2, #0]
1a003006:	4a09      	ldr	r2, [pc, #36]	; (1a00302c <Chip_Clock_EnableCrystal+0x48>)
1a003008:	4291      	cmp	r1, r2
1a00300a:	d901      	bls.n	1a003010 <Chip_Clock_EnableCrystal+0x2c>
1a00300c:	f043 0304 	orr.w	r3, r3, #4
1a003010:	4a04      	ldr	r2, [pc, #16]	; (1a003024 <Chip_Clock_EnableCrystal+0x40>)
1a003012:	6193      	str	r3, [r2, #24]
1a003014:	9b01      	ldr	r3, [sp, #4]
1a003016:	1e5a      	subs	r2, r3, #1
1a003018:	9201      	str	r2, [sp, #4]
1a00301a:	2b00      	cmp	r3, #0
1a00301c:	d1fa      	bne.n	1a003014 <Chip_Clock_EnableCrystal+0x30>
1a00301e:	b002      	add	sp, #8
1a003020:	4770      	bx	lr
1a003022:	bf00      	nop
1a003024:	40050000 	.word	0x40050000
1a003028:	1a004b10 	.word	0x1a004b10
1a00302c:	01312cff 	.word	0x01312cff

1a003030 <Chip_Clock_GetDividerSource>:
1a003030:	3012      	adds	r0, #18
1a003032:	4b05      	ldr	r3, [pc, #20]	; (1a003048 <Chip_Clock_GetDividerSource+0x18>)
1a003034:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
1a003038:	f010 0f01 	tst.w	r0, #1
1a00303c:	d102      	bne.n	1a003044 <Chip_Clock_GetDividerSource+0x14>
1a00303e:	f3c0 6004 	ubfx	r0, r0, #24, #5
1a003042:	4770      	bx	lr
1a003044:	2011      	movs	r0, #17
1a003046:	4770      	bx	lr
1a003048:	40050000 	.word	0x40050000

1a00304c <Chip_Clock_GetDividerDivisor>:
1a00304c:	f100 0212 	add.w	r2, r0, #18
1a003050:	4b03      	ldr	r3, [pc, #12]	; (1a003060 <Chip_Clock_GetDividerDivisor+0x14>)
1a003052:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1a003056:	4b03      	ldr	r3, [pc, #12]	; (1a003064 <Chip_Clock_GetDividerDivisor+0x18>)
1a003058:	5c18      	ldrb	r0, [r3, r0]
1a00305a:	ea00 0092 	and.w	r0, r0, r2, lsr #2
1a00305e:	4770      	bx	lr
1a003060:	40050000 	.word	0x40050000
1a003064:	1a004ba0 	.word	0x1a004ba0

1a003068 <Chip_Clock_GetClockInputHz>:
1a003068:	b508      	push	{r3, lr}
1a00306a:	2810      	cmp	r0, #16
1a00306c:	d80a      	bhi.n	1a003084 <Chip_Clock_GetClockInputHz+0x1c>
1a00306e:	e8df f000 	tbb	[pc, r0]
1a003072:	0b42      	.short	0x0b42
1a003074:	091f160d 	.word	0x091f160d
1a003078:	2b282522 	.word	0x2b282522
1a00307c:	322e0909 	.word	0x322e0909
1a003080:	3a36      	.short	0x3a36
1a003082:	3e          	.byte	0x3e
1a003083:	00          	.byte	0x00
1a003084:	2000      	movs	r0, #0
1a003086:	e038      	b.n	1a0030fa <Chip_Clock_GetClockInputHz+0x92>
1a003088:	481e      	ldr	r0, [pc, #120]	; (1a003104 <Chip_Clock_GetClockInputHz+0x9c>)
1a00308a:	e036      	b.n	1a0030fa <Chip_Clock_GetClockInputHz+0x92>
1a00308c:	4b1e      	ldr	r3, [pc, #120]	; (1a003108 <Chip_Clock_GetClockInputHz+0xa0>)
1a00308e:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
1a003092:	f003 0307 	and.w	r3, r3, #7
1a003096:	2b04      	cmp	r3, #4
1a003098:	d130      	bne.n	1a0030fc <Chip_Clock_GetClockInputHz+0x94>
1a00309a:	2000      	movs	r0, #0
1a00309c:	e02d      	b.n	1a0030fa <Chip_Clock_GetClockInputHz+0x92>
1a00309e:	4b1a      	ldr	r3, [pc, #104]	; (1a003108 <Chip_Clock_GetClockInputHz+0xa0>)
1a0030a0:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
1a0030a4:	f003 0307 	and.w	r3, r3, #7
1a0030a8:	2b04      	cmp	r3, #4
1a0030aa:	d029      	beq.n	1a003100 <Chip_Clock_GetClockInputHz+0x98>
1a0030ac:	4817      	ldr	r0, [pc, #92]	; (1a00310c <Chip_Clock_GetClockInputHz+0xa4>)
1a0030ae:	e024      	b.n	1a0030fa <Chip_Clock_GetClockInputHz+0x92>
1a0030b0:	4b17      	ldr	r3, [pc, #92]	; (1a003110 <Chip_Clock_GetClockInputHz+0xa8>)
1a0030b2:	6818      	ldr	r0, [r3, #0]
1a0030b4:	e021      	b.n	1a0030fa <Chip_Clock_GetClockInputHz+0x92>
1a0030b6:	4b17      	ldr	r3, [pc, #92]	; (1a003114 <Chip_Clock_GetClockInputHz+0xac>)
1a0030b8:	6818      	ldr	r0, [r3, #0]
1a0030ba:	e01e      	b.n	1a0030fa <Chip_Clock_GetClockInputHz+0x92>
1a0030bc:	4b16      	ldr	r3, [pc, #88]	; (1a003118 <Chip_Clock_GetClockInputHz+0xb0>)
1a0030be:	6818      	ldr	r0, [r3, #0]
1a0030c0:	e01b      	b.n	1a0030fa <Chip_Clock_GetClockInputHz+0x92>
1a0030c2:	4b15      	ldr	r3, [pc, #84]	; (1a003118 <Chip_Clock_GetClockInputHz+0xb0>)
1a0030c4:	6858      	ldr	r0, [r3, #4]
1a0030c6:	e018      	b.n	1a0030fa <Chip_Clock_GetClockInputHz+0x92>
1a0030c8:	f000 f86a 	bl	1a0031a0 <Chip_Clock_GetMainPLLHz>
1a0030cc:	e015      	b.n	1a0030fa <Chip_Clock_GetClockInputHz+0x92>
1a0030ce:	2100      	movs	r1, #0
1a0030d0:	f000 f89c 	bl	1a00320c <Chip_Clock_GetDivRate>
1a0030d4:	e011      	b.n	1a0030fa <Chip_Clock_GetClockInputHz+0x92>
1a0030d6:	2101      	movs	r1, #1
1a0030d8:	f000 f898 	bl	1a00320c <Chip_Clock_GetDivRate>
1a0030dc:	e00d      	b.n	1a0030fa <Chip_Clock_GetClockInputHz+0x92>
1a0030de:	2102      	movs	r1, #2
1a0030e0:	f000 f894 	bl	1a00320c <Chip_Clock_GetDivRate>
1a0030e4:	e009      	b.n	1a0030fa <Chip_Clock_GetClockInputHz+0x92>
1a0030e6:	2103      	movs	r1, #3
1a0030e8:	f000 f890 	bl	1a00320c <Chip_Clock_GetDivRate>
1a0030ec:	e005      	b.n	1a0030fa <Chip_Clock_GetClockInputHz+0x92>
1a0030ee:	2104      	movs	r1, #4
1a0030f0:	f000 f88c 	bl	1a00320c <Chip_Clock_GetDivRate>
1a0030f4:	e001      	b.n	1a0030fa <Chip_Clock_GetClockInputHz+0x92>
1a0030f6:	f44f 4000 	mov.w	r0, #32768	; 0x8000
1a0030fa:	bd08      	pop	{r3, pc}
1a0030fc:	4803      	ldr	r0, [pc, #12]	; (1a00310c <Chip_Clock_GetClockInputHz+0xa4>)
1a0030fe:	e7fc      	b.n	1a0030fa <Chip_Clock_GetClockInputHz+0x92>
1a003100:	4806      	ldr	r0, [pc, #24]	; (1a00311c <Chip_Clock_GetClockInputHz+0xb4>)
1a003102:	e7fa      	b.n	1a0030fa <Chip_Clock_GetClockInputHz+0x92>
1a003104:	00b71b00 	.word	0x00b71b00
1a003108:	40043000 	.word	0x40043000
1a00310c:	017d7840 	.word	0x017d7840
1a003110:	1a004ae4 	.word	0x1a004ae4
1a003114:	1a004b10 	.word	0x1a004b10
1a003118:	10002f3c 	.word	0x10002f3c
1a00311c:	02faf080 	.word	0x02faf080

1a003120 <Chip_Clock_CalcMainPLLValue>:
1a003120:	b538      	push	{r3, r4, r5, lr}
1a003122:	4605      	mov	r5, r0
1a003124:	460c      	mov	r4, r1
1a003126:	7908      	ldrb	r0, [r1, #4]
1a003128:	f7ff ff9e 	bl	1a003068 <Chip_Clock_GetClockInputHz>
1a00312c:	6160      	str	r0, [r4, #20]
1a00312e:	4b19      	ldr	r3, [pc, #100]	; (1a003194 <Chip_Clock_CalcMainPLLValue+0x74>)
1a003130:	442b      	add	r3, r5
1a003132:	4a19      	ldr	r2, [pc, #100]	; (1a003198 <Chip_Clock_CalcMainPLLValue+0x78>)
1a003134:	4293      	cmp	r3, r2
1a003136:	d821      	bhi.n	1a00317c <Chip_Clock_CalcMainPLLValue+0x5c>
1a003138:	b318      	cbz	r0, 1a003182 <Chip_Clock_CalcMainPLLValue+0x62>
1a00313a:	2380      	movs	r3, #128	; 0x80
1a00313c:	6023      	str	r3, [r4, #0]
1a00313e:	2300      	movs	r3, #0
1a003140:	60a3      	str	r3, [r4, #8]
1a003142:	60e3      	str	r3, [r4, #12]
1a003144:	fbb5 f3f0 	udiv	r3, r5, r0
1a003148:	6123      	str	r3, [r4, #16]
1a00314a:	4a14      	ldr	r2, [pc, #80]	; (1a00319c <Chip_Clock_CalcMainPLLValue+0x7c>)
1a00314c:	4295      	cmp	r5, r2
1a00314e:	d903      	bls.n	1a003158 <Chip_Clock_CalcMainPLLValue+0x38>
1a003150:	fb03 f000 	mul.w	r0, r3, r0
1a003154:	42a8      	cmp	r0, r5
1a003156:	d007      	beq.n	1a003168 <Chip_Clock_CalcMainPLLValue+0x48>
1a003158:	4621      	mov	r1, r4
1a00315a:	4628      	mov	r0, r5
1a00315c:	f7ff fe96 	bl	1a002e8c <pll_get_frac>
1a003160:	68a3      	ldr	r3, [r4, #8]
1a003162:	b18b      	cbz	r3, 1a003188 <Chip_Clock_CalcMainPLLValue+0x68>
1a003164:	3b01      	subs	r3, #1
1a003166:	60a3      	str	r3, [r4, #8]
1a003168:	6923      	ldr	r3, [r4, #16]
1a00316a:	b183      	cbz	r3, 1a00318e <Chip_Clock_CalcMainPLLValue+0x6e>
1a00316c:	68e2      	ldr	r2, [r4, #12]
1a00316e:	b10a      	cbz	r2, 1a003174 <Chip_Clock_CalcMainPLLValue+0x54>
1a003170:	3a01      	subs	r2, #1
1a003172:	60e2      	str	r2, [r4, #12]
1a003174:	3b01      	subs	r3, #1
1a003176:	6123      	str	r3, [r4, #16]
1a003178:	2000      	movs	r0, #0
1a00317a:	bd38      	pop	{r3, r4, r5, pc}
1a00317c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a003180:	e7fb      	b.n	1a00317a <Chip_Clock_CalcMainPLLValue+0x5a>
1a003182:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a003186:	e7f8      	b.n	1a00317a <Chip_Clock_CalcMainPLLValue+0x5a>
1a003188:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a00318c:	e7f5      	b.n	1a00317a <Chip_Clock_CalcMainPLLValue+0x5a>
1a00318e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a003192:	e7f2      	b.n	1a00317a <Chip_Clock_CalcMainPLLValue+0x5a>
1a003194:	ff6b3a10 	.word	0xff6b3a10
1a003198:	0b940510 	.word	0x0b940510
1a00319c:	094c5eff 	.word	0x094c5eff

1a0031a0 <Chip_Clock_GetMainPLLHz>:
1a0031a0:	b530      	push	{r4, r5, lr}
1a0031a2:	b083      	sub	sp, #12
1a0031a4:	4d17      	ldr	r5, [pc, #92]	; (1a003204 <Chip_Clock_GetMainPLLHz+0x64>)
1a0031a6:	6c6c      	ldr	r4, [r5, #68]	; 0x44
1a0031a8:	f3c4 6003 	ubfx	r0, r4, #24, #4
1a0031ac:	f7ff ff5c 	bl	1a003068 <Chip_Clock_GetClockInputHz>
1a0031b0:	4b15      	ldr	r3, [pc, #84]	; (1a003208 <Chip_Clock_GetMainPLLHz+0x68>)
1a0031b2:	681b      	ldr	r3, [r3, #0]
1a0031b4:	9301      	str	r3, [sp, #4]
1a0031b6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
1a0031b8:	f013 0f01 	tst.w	r3, #1
1a0031bc:	d01f      	beq.n	1a0031fe <Chip_Clock_GetMainPLLHz+0x5e>
1a0031be:	f3c4 4307 	ubfx	r3, r4, #16, #8
1a0031c2:	f3c4 3201 	ubfx	r2, r4, #12, #2
1a0031c6:	f3c4 2101 	ubfx	r1, r4, #8, #2
1a0031ca:	f3c4 1580 	ubfx	r5, r4, #6, #1
1a0031ce:	3301      	adds	r3, #1
1a0031d0:	3201      	adds	r2, #1
1a0031d2:	f10d 0c08 	add.w	ip, sp, #8
1a0031d6:	4461      	add	r1, ip
1a0031d8:	f811 1c04 	ldrb.w	r1, [r1, #-4]
1a0031dc:	f014 0f80 	tst.w	r4, #128	; 0x80
1a0031e0:	d108      	bne.n	1a0031f4 <Chip_Clock_GetMainPLLHz+0x54>
1a0031e2:	b93d      	cbnz	r5, 1a0031f4 <Chip_Clock_GetMainPLLHz+0x54>
1a0031e4:	0049      	lsls	r1, r1, #1
1a0031e6:	fbb3 f3f1 	udiv	r3, r3, r1
1a0031ea:	fbb0 f0f2 	udiv	r0, r0, r2
1a0031ee:	fb00 f003 	mul.w	r0, r0, r3
1a0031f2:	e005      	b.n	1a003200 <Chip_Clock_GetMainPLLHz+0x60>
1a0031f4:	fbb0 f0f2 	udiv	r0, r0, r2
1a0031f8:	fb03 f000 	mul.w	r0, r3, r0
1a0031fc:	e000      	b.n	1a003200 <Chip_Clock_GetMainPLLHz+0x60>
1a0031fe:	2000      	movs	r0, #0
1a003200:	b003      	add	sp, #12
1a003202:	bd30      	pop	{r4, r5, pc}
1a003204:	40050000 	.word	0x40050000
1a003208:	1a004b9c 	.word	0x1a004b9c

1a00320c <Chip_Clock_GetDivRate>:
1a00320c:	b538      	push	{r3, r4, r5, lr}
1a00320e:	460c      	mov	r4, r1
1a003210:	4608      	mov	r0, r1
1a003212:	f7ff ff0d 	bl	1a003030 <Chip_Clock_GetDividerSource>
1a003216:	4605      	mov	r5, r0
1a003218:	4620      	mov	r0, r4
1a00321a:	f7ff ff17 	bl	1a00304c <Chip_Clock_GetDividerDivisor>
1a00321e:	4604      	mov	r4, r0
1a003220:	4628      	mov	r0, r5
1a003222:	f7ff ff21 	bl	1a003068 <Chip_Clock_GetClockInputHz>
1a003226:	3401      	adds	r4, #1
1a003228:	fbb0 f0f4 	udiv	r0, r0, r4
1a00322c:	bd38      	pop	{r3, r4, r5, pc}
1a00322e:	Address 0x000000001a00322e is out of bounds.


1a003230 <Chip_Clock_SetBaseClock>:
1a003230:	b430      	push	{r4, r5}
1a003232:	f100 0416 	add.w	r4, r0, #22
1a003236:	00a4      	lsls	r4, r4, #2
1a003238:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
1a00323c:	f504 24a0 	add.w	r4, r4, #327680	; 0x50000
1a003240:	6864      	ldr	r4, [r4, #4]
1a003242:	281b      	cmp	r0, #27
1a003244:	d813      	bhi.n	1a00326e <Chip_Clock_SetBaseClock+0x3e>
1a003246:	2911      	cmp	r1, #17
1a003248:	d01a      	beq.n	1a003280 <Chip_Clock_SetBaseClock+0x50>
1a00324a:	4d0e      	ldr	r5, [pc, #56]	; (1a003284 <Chip_Clock_SetBaseClock+0x54>)
1a00324c:	4025      	ands	r5, r4
1a00324e:	b10a      	cbz	r2, 1a003254 <Chip_Clock_SetBaseClock+0x24>
1a003250:	f445 6500 	orr.w	r5, r5, #2048	; 0x800
1a003254:	b10b      	cbz	r3, 1a00325a <Chip_Clock_SetBaseClock+0x2a>
1a003256:	f045 0501 	orr.w	r5, r5, #1
1a00325a:	ea45 6501 	orr.w	r5, r5, r1, lsl #24
1a00325e:	3016      	adds	r0, #22
1a003260:	0080      	lsls	r0, r0, #2
1a003262:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a003266:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a00326a:	6045      	str	r5, [r0, #4]
1a00326c:	e008      	b.n	1a003280 <Chip_Clock_SetBaseClock+0x50>
1a00326e:	f044 0401 	orr.w	r4, r4, #1
1a003272:	3016      	adds	r0, #22
1a003274:	0080      	lsls	r0, r0, #2
1a003276:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a00327a:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a00327e:	6044      	str	r4, [r0, #4]
1a003280:	bc30      	pop	{r4, r5}
1a003282:	4770      	bx	lr
1a003284:	e0fff7fe 	.word	0xe0fff7fe

1a003288 <Chip_Clock_GetBaseClock>:
1a003288:	281b      	cmp	r0, #27
1a00328a:	d80c      	bhi.n	1a0032a6 <Chip_Clock_GetBaseClock+0x1e>
1a00328c:	3016      	adds	r0, #22
1a00328e:	0080      	lsls	r0, r0, #2
1a003290:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a003294:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a003298:	6840      	ldr	r0, [r0, #4]
1a00329a:	f010 0f01 	tst.w	r0, #1
1a00329e:	d104      	bne.n	1a0032aa <Chip_Clock_GetBaseClock+0x22>
1a0032a0:	f3c0 6004 	ubfx	r0, r0, #24, #5
1a0032a4:	4770      	bx	lr
1a0032a6:	2011      	movs	r0, #17
1a0032a8:	4770      	bx	lr
1a0032aa:	2011      	movs	r0, #17
1a0032ac:	4770      	bx	lr

1a0032ae <Chip_Clock_GetBaseClocktHz>:
1a0032ae:	b508      	push	{r3, lr}
1a0032b0:	f7ff ffea 	bl	1a003288 <Chip_Clock_GetBaseClock>
1a0032b4:	f7ff fed8 	bl	1a003068 <Chip_Clock_GetClockInputHz>
1a0032b8:	bd08      	pop	{r3, pc}
1a0032ba:	Address 0x000000001a0032ba is out of bounds.


1a0032bc <Chip_Clock_EnableOpts>:
1a0032bc:	b969      	cbnz	r1, 1a0032da <Chip_Clock_EnableOpts+0x1e>
1a0032be:	2101      	movs	r1, #1
1a0032c0:	b10a      	cbz	r2, 1a0032c6 <Chip_Clock_EnableOpts+0xa>
1a0032c2:	f041 0104 	orr.w	r1, r1, #4
1a0032c6:	2b02      	cmp	r3, #2
1a0032c8:	d009      	beq.n	1a0032de <Chip_Clock_EnableOpts+0x22>
1a0032ca:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a0032ce:	d209      	bcs.n	1a0032e4 <Chip_Clock_EnableOpts+0x28>
1a0032d0:	3020      	adds	r0, #32
1a0032d2:	4b07      	ldr	r3, [pc, #28]	; (1a0032f0 <Chip_Clock_EnableOpts+0x34>)
1a0032d4:	f843 1030 	str.w	r1, [r3, r0, lsl #3]
1a0032d8:	4770      	bx	lr
1a0032da:	2103      	movs	r1, #3
1a0032dc:	e7f0      	b.n	1a0032c0 <Chip_Clock_EnableOpts+0x4>
1a0032de:	f041 0120 	orr.w	r1, r1, #32
1a0032e2:	e7f2      	b.n	1a0032ca <Chip_Clock_EnableOpts+0xe>
1a0032e4:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a0032e8:	4b02      	ldr	r3, [pc, #8]	; (1a0032f4 <Chip_Clock_EnableOpts+0x38>)
1a0032ea:	f843 1030 	str.w	r1, [r3, r0, lsl #3]
1a0032ee:	4770      	bx	lr
1a0032f0:	40051000 	.word	0x40051000
1a0032f4:	40052000 	.word	0x40052000

1a0032f8 <Chip_Clock_Enable>:
1a0032f8:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a0032fc:	d208      	bcs.n	1a003310 <Chip_Clock_Enable+0x18>
1a0032fe:	4a09      	ldr	r2, [pc, #36]	; (1a003324 <Chip_Clock_Enable+0x2c>)
1a003300:	3020      	adds	r0, #32
1a003302:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a003306:	f043 0301 	orr.w	r3, r3, #1
1a00330a:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
1a00330e:	4770      	bx	lr
1a003310:	4a05      	ldr	r2, [pc, #20]	; (1a003328 <Chip_Clock_Enable+0x30>)
1a003312:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a003316:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a00331a:	f043 0301 	orr.w	r3, r3, #1
1a00331e:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
1a003322:	4770      	bx	lr
1a003324:	40051000 	.word	0x40051000
1a003328:	40052000 	.word	0x40052000

1a00332c <Chip_Clock_GetRate>:
1a00332c:	b510      	push	{r4, lr}
1a00332e:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a003332:	d309      	bcc.n	1a003348 <Chip_Clock_GetRate+0x1c>
1a003334:	f5a0 7391 	sub.w	r3, r0, #290	; 0x122
1a003338:	4a0d      	ldr	r2, [pc, #52]	; (1a003370 <Chip_Clock_GetRate+0x44>)
1a00333a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
1a00333e:	f014 0f01 	tst.w	r4, #1
1a003342:	d107      	bne.n	1a003354 <Chip_Clock_GetRate+0x28>
1a003344:	2000      	movs	r0, #0
1a003346:	bd10      	pop	{r4, pc}
1a003348:	f100 0320 	add.w	r3, r0, #32
1a00334c:	4a09      	ldr	r2, [pc, #36]	; (1a003374 <Chip_Clock_GetRate+0x48>)
1a00334e:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
1a003352:	e7f4      	b.n	1a00333e <Chip_Clock_GetRate+0x12>
1a003354:	f7ff fe20 	bl	1a002f98 <Chip_Clock_FindBaseClock>
1a003358:	f7ff ffa9 	bl	1a0032ae <Chip_Clock_GetBaseClocktHz>
1a00335c:	f014 0fe0 	tst.w	r4, #224	; 0xe0
1a003360:	d103      	bne.n	1a00336a <Chip_Clock_GetRate+0x3e>
1a003362:	2301      	movs	r3, #1
1a003364:	fbb0 f0f3 	udiv	r0, r0, r3
1a003368:	e7ed      	b.n	1a003346 <Chip_Clock_GetRate+0x1a>
1a00336a:	2302      	movs	r3, #2
1a00336c:	e7fa      	b.n	1a003364 <Chip_Clock_GetRate+0x38>
1a00336e:	bf00      	nop
1a003370:	40052000 	.word	0x40052000
1a003374:	40051000 	.word	0x40051000

1a003378 <SystemCoreClockUpdate>:
1a003378:	b508      	push	{r3, lr}
1a00337a:	2069      	movs	r0, #105	; 0x69
1a00337c:	f7ff ffd6 	bl	1a00332c <Chip_Clock_GetRate>
1a003380:	4b01      	ldr	r3, [pc, #4]	; (1a003388 <SystemCoreClockUpdate+0x10>)
1a003382:	6018      	str	r0, [r3, #0]
1a003384:	bd08      	pop	{r3, pc}
1a003386:	bf00      	nop
1a003388:	100030e4 	.word	0x100030e4

1a00338c <Chip_GPIO_Init>:
1a00338c:	4770      	bx	lr
1a00338e:	Address 0x000000001a00338e is out of bounds.


1a003390 <Chip_SetupCoreClock>:
1a003390:	b570      	push	{r4, r5, r6, lr}
1a003392:	b08a      	sub	sp, #40	; 0x28
1a003394:	4605      	mov	r5, r0
1a003396:	460e      	mov	r6, r1
1a003398:	4614      	mov	r4, r2
1a00339a:	f242 7310 	movw	r3, #10000	; 0x2710
1a00339e:	9309      	str	r3, [sp, #36]	; 0x24
1a0033a0:	2806      	cmp	r0, #6
1a0033a2:	d018      	beq.n	1a0033d6 <Chip_SetupCoreClock+0x46>
1a0033a4:	2300      	movs	r3, #0
1a0033a6:	2201      	movs	r2, #1
1a0033a8:	4629      	mov	r1, r5
1a0033aa:	2004      	movs	r0, #4
1a0033ac:	f7ff ff40 	bl	1a003230 <Chip_Clock_SetBaseClock>
1a0033b0:	4a49      	ldr	r2, [pc, #292]	; (1a0034d8 <Chip_SetupCoreClock+0x148>)
1a0033b2:	6c53      	ldr	r3, [r2, #68]	; 0x44
1a0033b4:	f043 0301 	orr.w	r3, r3, #1
1a0033b8:	6453      	str	r3, [r2, #68]	; 0x44
1a0033ba:	f88d 5008 	strb.w	r5, [sp, #8]
1a0033be:	a901      	add	r1, sp, #4
1a0033c0:	4630      	mov	r0, r6
1a0033c2:	f7ff fead 	bl	1a003120 <Chip_Clock_CalcMainPLLValue>
1a0033c6:	4b45      	ldr	r3, [pc, #276]	; (1a0034dc <Chip_SetupCoreClock+0x14c>)
1a0033c8:	429e      	cmp	r6, r3
1a0033ca:	d916      	bls.n	1a0033fa <Chip_SetupCoreClock+0x6a>
1a0033cc:	9b01      	ldr	r3, [sp, #4]
1a0033ce:	f013 0f40 	tst.w	r3, #64	; 0x40
1a0033d2:	d003      	beq.n	1a0033dc <Chip_SetupCoreClock+0x4c>
1a0033d4:	e7fe      	b.n	1a0033d4 <Chip_SetupCoreClock+0x44>
1a0033d6:	f7ff fe05 	bl	1a002fe4 <Chip_Clock_EnableCrystal>
1a0033da:	e7e3      	b.n	1a0033a4 <Chip_SetupCoreClock+0x14>
1a0033dc:	f013 0f80 	tst.w	r3, #128	; 0x80
1a0033e0:	d005      	beq.n	1a0033ee <Chip_SetupCoreClock+0x5e>
1a0033e2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a0033e6:	9301      	str	r3, [sp, #4]
1a0033e8:	2500      	movs	r5, #0
1a0033ea:	2601      	movs	r6, #1
1a0033ec:	e007      	b.n	1a0033fe <Chip_SetupCoreClock+0x6e>
1a0033ee:	9b04      	ldr	r3, [sp, #16]
1a0033f0:	3301      	adds	r3, #1
1a0033f2:	9304      	str	r3, [sp, #16]
1a0033f4:	2501      	movs	r5, #1
1a0033f6:	2600      	movs	r6, #0
1a0033f8:	e001      	b.n	1a0033fe <Chip_SetupCoreClock+0x6e>
1a0033fa:	2500      	movs	r5, #0
1a0033fc:	462e      	mov	r6, r5
1a0033fe:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a003402:	9b01      	ldr	r3, [sp, #4]
1a003404:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
1a003408:	9a05      	ldr	r2, [sp, #20]
1a00340a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a00340e:	9a03      	ldr	r2, [sp, #12]
1a003410:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
1a003414:	9a04      	ldr	r2, [sp, #16]
1a003416:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a00341a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a00341e:	4a2e      	ldr	r2, [pc, #184]	; (1a0034d8 <Chip_SetupCoreClock+0x148>)
1a003420:	6453      	str	r3, [r2, #68]	; 0x44
1a003422:	4b2d      	ldr	r3, [pc, #180]	; (1a0034d8 <Chip_SetupCoreClock+0x148>)
1a003424:	6c1b      	ldr	r3, [r3, #64]	; 0x40
1a003426:	f013 0f01 	tst.w	r3, #1
1a00342a:	d0fa      	beq.n	1a003422 <Chip_SetupCoreClock+0x92>
1a00342c:	2300      	movs	r3, #0
1a00342e:	2201      	movs	r2, #1
1a003430:	2109      	movs	r1, #9
1a003432:	2004      	movs	r0, #4
1a003434:	f7ff fefc 	bl	1a003230 <Chip_Clock_SetBaseClock>
1a003438:	b1fe      	cbz	r6, 1a00347a <Chip_SetupCoreClock+0xea>
1a00343a:	f242 7310 	movw	r3, #10000	; 0x2710
1a00343e:	9309      	str	r3, [sp, #36]	; 0x24
1a003440:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a003442:	1e5a      	subs	r2, r3, #1
1a003444:	9209      	str	r2, [sp, #36]	; 0x24
1a003446:	2b00      	cmp	r3, #0
1a003448:	d1fa      	bne.n	1a003440 <Chip_SetupCoreClock+0xb0>
1a00344a:	9b01      	ldr	r3, [sp, #4]
1a00344c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a003450:	9301      	str	r3, [sp, #4]
1a003452:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a003456:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
1a00345a:	9a05      	ldr	r2, [sp, #20]
1a00345c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a003460:	9a03      	ldr	r2, [sp, #12]
1a003462:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
1a003466:	9a04      	ldr	r2, [sp, #16]
1a003468:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a00346c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a003470:	4a19      	ldr	r2, [pc, #100]	; (1a0034d8 <Chip_SetupCoreClock+0x148>)
1a003472:	6453      	str	r3, [r2, #68]	; 0x44
1a003474:	b36c      	cbz	r4, 1a0034d2 <Chip_SetupCoreClock+0x142>
1a003476:	2400      	movs	r4, #0
1a003478:	e029      	b.n	1a0034ce <Chip_SetupCoreClock+0x13e>
1a00347a:	2d00      	cmp	r5, #0
1a00347c:	d0fa      	beq.n	1a003474 <Chip_SetupCoreClock+0xe4>
1a00347e:	f242 7310 	movw	r3, #10000	; 0x2710
1a003482:	9309      	str	r3, [sp, #36]	; 0x24
1a003484:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a003486:	1e5a      	subs	r2, r3, #1
1a003488:	9209      	str	r2, [sp, #36]	; 0x24
1a00348a:	2b00      	cmp	r3, #0
1a00348c:	d1fa      	bne.n	1a003484 <Chip_SetupCoreClock+0xf4>
1a00348e:	9b04      	ldr	r3, [sp, #16]
1a003490:	1e5a      	subs	r2, r3, #1
1a003492:	9204      	str	r2, [sp, #16]
1a003494:	f89d 1008 	ldrb.w	r1, [sp, #8]
1a003498:	9b01      	ldr	r3, [sp, #4]
1a00349a:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
1a00349e:	9905      	ldr	r1, [sp, #20]
1a0034a0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1a0034a4:	9903      	ldr	r1, [sp, #12]
1a0034a6:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
1a0034aa:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a0034ae:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a0034b2:	4a09      	ldr	r2, [pc, #36]	; (1a0034d8 <Chip_SetupCoreClock+0x148>)
1a0034b4:	6453      	str	r3, [r2, #68]	; 0x44
1a0034b6:	e7dd      	b.n	1a003474 <Chip_SetupCoreClock+0xe4>
1a0034b8:	4809      	ldr	r0, [pc, #36]	; (1a0034e0 <Chip_SetupCoreClock+0x150>)
1a0034ba:	eb00 0184 	add.w	r1, r0, r4, lsl #2
1a0034be:	78cb      	ldrb	r3, [r1, #3]
1a0034c0:	788a      	ldrb	r2, [r1, #2]
1a0034c2:	7849      	ldrb	r1, [r1, #1]
1a0034c4:	f810 0024 	ldrb.w	r0, [r0, r4, lsl #2]
1a0034c8:	f7ff feb2 	bl	1a003230 <Chip_Clock_SetBaseClock>
1a0034cc:	3401      	adds	r4, #1
1a0034ce:	2c11      	cmp	r4, #17
1a0034d0:	d9f2      	bls.n	1a0034b8 <Chip_SetupCoreClock+0x128>
1a0034d2:	b00a      	add	sp, #40	; 0x28
1a0034d4:	bd70      	pop	{r4, r5, r6, pc}
1a0034d6:	bf00      	nop
1a0034d8:	40050000 	.word	0x40050000
1a0034dc:	068e7780 	.word	0x068e7780
1a0034e0:	1a004c14 	.word	0x1a004c14

1a0034e4 <Chip_SSP_GetClockIndex>:
1a0034e4:	4b03      	ldr	r3, [pc, #12]	; (1a0034f4 <Chip_SSP_GetClockIndex+0x10>)
1a0034e6:	4298      	cmp	r0, r3
1a0034e8:	d001      	beq.n	1a0034ee <Chip_SSP_GetClockIndex+0xa>
1a0034ea:	2083      	movs	r0, #131	; 0x83
1a0034ec:	4770      	bx	lr
1a0034ee:	20a5      	movs	r0, #165	; 0xa5
1a0034f0:	4770      	bx	lr
1a0034f2:	bf00      	nop
1a0034f4:	400c5000 	.word	0x400c5000

1a0034f8 <Chip_SSP_GetPeriphClockIndex>:
1a0034f8:	4b04      	ldr	r3, [pc, #16]	; (1a00350c <Chip_SSP_GetPeriphClockIndex+0x14>)
1a0034fa:	4298      	cmp	r0, r3
1a0034fc:	d002      	beq.n	1a003504 <Chip_SSP_GetPeriphClockIndex+0xc>
1a0034fe:	f240 2002 	movw	r0, #514	; 0x202
1a003502:	4770      	bx	lr
1a003504:	f44f 70f1 	mov.w	r0, #482	; 0x1e2
1a003508:	4770      	bx	lr
1a00350a:	bf00      	nop
1a00350c:	400c5000 	.word	0x400c5000

1a003510 <Chip_SSP_SetClockRate>:
1a003510:	6803      	ldr	r3, [r0, #0]
1a003512:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
1a003516:	0209      	lsls	r1, r1, #8
1a003518:	b289      	uxth	r1, r1
1a00351a:	4319      	orrs	r1, r3
1a00351c:	6001      	str	r1, [r0, #0]
1a00351e:	6102      	str	r2, [r0, #16]
1a003520:	4770      	bx	lr

1a003522 <Chip_SSP_SetBitRate>:
1a003522:	b570      	push	{r4, r5, r6, lr}
1a003524:	4606      	mov	r6, r0
1a003526:	460d      	mov	r5, r1
1a003528:	f7ff ffe6 	bl	1a0034f8 <Chip_SSP_GetPeriphClockIndex>
1a00352c:	f7ff fefe 	bl	1a00332c <Chip_Clock_GetRate>
1a003530:	2202      	movs	r2, #2
1a003532:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
1a003536:	2100      	movs	r1, #0
1a003538:	e000      	b.n	1a00353c <Chip_SSP_SetBitRate+0x1a>
1a00353a:	4621      	mov	r1, r4
1a00353c:	42ab      	cmp	r3, r5
1a00353e:	d90b      	bls.n	1a003558 <Chip_SSP_SetBitRate+0x36>
1a003540:	1c4c      	adds	r4, r1, #1
1a003542:	fb02 f304 	mul.w	r3, r2, r4
1a003546:	fbb0 f3f3 	udiv	r3, r0, r3
1a00354a:	429d      	cmp	r5, r3
1a00354c:	d2f6      	bcs.n	1a00353c <Chip_SSP_SetBitRate+0x1a>
1a00354e:	2cff      	cmp	r4, #255	; 0xff
1a003550:	d9f3      	bls.n	1a00353a <Chip_SSP_SetBitRate+0x18>
1a003552:	3202      	adds	r2, #2
1a003554:	2100      	movs	r1, #0
1a003556:	e7f1      	b.n	1a00353c <Chip_SSP_SetBitRate+0x1a>
1a003558:	4630      	mov	r0, r6
1a00355a:	f7ff ffd9 	bl	1a003510 <Chip_SSP_SetClockRate>
1a00355e:	bd70      	pop	{r4, r5, r6, pc}

1a003560 <Chip_SSP_Init>:
1a003560:	b510      	push	{r4, lr}
1a003562:	4604      	mov	r4, r0
1a003564:	f7ff ffbe 	bl	1a0034e4 <Chip_SSP_GetClockIndex>
1a003568:	f7ff fec6 	bl	1a0032f8 <Chip_Clock_Enable>
1a00356c:	4620      	mov	r0, r4
1a00356e:	f7ff ffc3 	bl	1a0034f8 <Chip_SSP_GetPeriphClockIndex>
1a003572:	f7ff fec1 	bl	1a0032f8 <Chip_Clock_Enable>
1a003576:	6863      	ldr	r3, [r4, #4]
1a003578:	f023 0304 	bic.w	r3, r3, #4
1a00357c:	6063      	str	r3, [r4, #4]
1a00357e:	6823      	ldr	r3, [r4, #0]
1a003580:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
1a003584:	f043 0307 	orr.w	r3, r3, #7
1a003588:	6023      	str	r3, [r4, #0]
1a00358a:	4902      	ldr	r1, [pc, #8]	; (1a003594 <Chip_SSP_Init+0x34>)
1a00358c:	4620      	mov	r0, r4
1a00358e:	f7ff ffc8 	bl	1a003522 <Chip_SSP_SetBitRate>
1a003592:	bd10      	pop	{r4, pc}
1a003594:	000186a0 	.word	0x000186a0

1a003598 <SystemInit>:
1a003598:	b508      	push	{r3, lr}
1a00359a:	4a0b      	ldr	r2, [pc, #44]	; (1a0035c8 <SystemInit+0x30>)
1a00359c:	4b0b      	ldr	r3, [pc, #44]	; (1a0035cc <SystemInit+0x34>)
1a00359e:	609a      	str	r2, [r3, #8]
1a0035a0:	f503 730c 	add.w	r3, r3, #560	; 0x230
1a0035a4:	691b      	ldr	r3, [r3, #16]
1a0035a6:	f403 637f 	and.w	r3, r3, #4080	; 0xff0
1a0035aa:	2b20      	cmp	r3, #32
1a0035ac:	d004      	beq.n	1a0035b8 <SystemInit+0x20>
1a0035ae:	f7ff fa9f 	bl	1a002af0 <Board_SystemInit>
1a0035b2:	f7ff fa31 	bl	1a002a18 <Board_Init>
1a0035b6:	bd08      	pop	{r3, pc}
1a0035b8:	4a04      	ldr	r2, [pc, #16]	; (1a0035cc <SystemInit+0x34>)
1a0035ba:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
1a0035be:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
1a0035c2:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
1a0035c6:	e7f2      	b.n	1a0035ae <SystemInit+0x16>
1a0035c8:	1a000000 	.word	0x1a000000
1a0035cc:	e000ed00 	.word	0xe000ed00

1a0035d0 <cyclesCounterInit>:
1a0035d0:	4b04      	ldr	r3, [pc, #16]	; (1a0035e4 <cyclesCounterInit+0x14>)
1a0035d2:	6018      	str	r0, [r3, #0]
1a0035d4:	4a04      	ldr	r2, [pc, #16]	; (1a0035e8 <cyclesCounterInit+0x18>)
1a0035d6:	6813      	ldr	r3, [r2, #0]
1a0035d8:	f043 0301 	orr.w	r3, r3, #1
1a0035dc:	6013      	str	r3, [r2, #0]
1a0035de:	2001      	movs	r0, #1
1a0035e0:	4770      	bx	lr
1a0035e2:	bf00      	nop
1a0035e4:	1000004c 	.word	0x1000004c
1a0035e8:	e0001000 	.word	0xe0001000

1a0035ec <uartProcessIRQ>:
1a0035ec:	b570      	push	{r4, r5, r6, lr}
1a0035ee:	4604      	mov	r4, r0
1a0035f0:	eb00 0240 	add.w	r2, r0, r0, lsl #1
1a0035f4:	0093      	lsls	r3, r2, #2
1a0035f6:	4a1f      	ldr	r2, [pc, #124]	; (1a003674 <uartProcessIRQ+0x88>)
1a0035f8:	58d6      	ldr	r6, [r2, r3]
1a0035fa:	6975      	ldr	r5, [r6, #20]
1a0035fc:	b2ed      	uxtb	r5, r5
1a0035fe:	f015 0f01 	tst.w	r5, #1
1a003602:	d009      	beq.n	1a003618 <uartProcessIRQ+0x2c>
1a003604:	b920      	cbnz	r0, 1a003610 <uartProcessIRQ+0x24>
1a003606:	4b1c      	ldr	r3, [pc, #112]	; (1a003678 <uartProcessIRQ+0x8c>)
1a003608:	681b      	ldr	r3, [r3, #0]
1a00360a:	b10b      	cbz	r3, 1a003610 <uartProcessIRQ+0x24>
1a00360c:	2000      	movs	r0, #0
1a00360e:	4798      	blx	r3
1a003610:	2c03      	cmp	r4, #3
1a003612:	d013      	beq.n	1a00363c <uartProcessIRQ+0x50>
1a003614:	2c05      	cmp	r4, #5
1a003616:	d018      	beq.n	1a00364a <uartProcessIRQ+0x5e>
1a003618:	f015 0f20 	tst.w	r5, #32
1a00361c:	d00d      	beq.n	1a00363a <uartProcessIRQ+0x4e>
1a00361e:	6873      	ldr	r3, [r6, #4]
1a003620:	f013 0f02 	tst.w	r3, #2
1a003624:	d009      	beq.n	1a00363a <uartProcessIRQ+0x4e>
1a003626:	b924      	cbnz	r4, 1a003632 <uartProcessIRQ+0x46>
1a003628:	4b14      	ldr	r3, [pc, #80]	; (1a00367c <uartProcessIRQ+0x90>)
1a00362a:	681b      	ldr	r3, [r3, #0]
1a00362c:	b10b      	cbz	r3, 1a003632 <uartProcessIRQ+0x46>
1a00362e:	2000      	movs	r0, #0
1a003630:	4798      	blx	r3
1a003632:	2c03      	cmp	r4, #3
1a003634:	d010      	beq.n	1a003658 <uartProcessIRQ+0x6c>
1a003636:	2c05      	cmp	r4, #5
1a003638:	d015      	beq.n	1a003666 <uartProcessIRQ+0x7a>
1a00363a:	bd70      	pop	{r4, r5, r6, pc}
1a00363c:	4b10      	ldr	r3, [pc, #64]	; (1a003680 <uartProcessIRQ+0x94>)
1a00363e:	681b      	ldr	r3, [r3, #0]
1a003640:	2b00      	cmp	r3, #0
1a003642:	d0e7      	beq.n	1a003614 <uartProcessIRQ+0x28>
1a003644:	2000      	movs	r0, #0
1a003646:	4798      	blx	r3
1a003648:	e7e4      	b.n	1a003614 <uartProcessIRQ+0x28>
1a00364a:	4b0e      	ldr	r3, [pc, #56]	; (1a003684 <uartProcessIRQ+0x98>)
1a00364c:	681b      	ldr	r3, [r3, #0]
1a00364e:	2b00      	cmp	r3, #0
1a003650:	d0e2      	beq.n	1a003618 <uartProcessIRQ+0x2c>
1a003652:	2000      	movs	r0, #0
1a003654:	4798      	blx	r3
1a003656:	e7df      	b.n	1a003618 <uartProcessIRQ+0x2c>
1a003658:	4b0b      	ldr	r3, [pc, #44]	; (1a003688 <uartProcessIRQ+0x9c>)
1a00365a:	681b      	ldr	r3, [r3, #0]
1a00365c:	2b00      	cmp	r3, #0
1a00365e:	d0ea      	beq.n	1a003636 <uartProcessIRQ+0x4a>
1a003660:	2000      	movs	r0, #0
1a003662:	4798      	blx	r3
1a003664:	e7e7      	b.n	1a003636 <uartProcessIRQ+0x4a>
1a003666:	4b09      	ldr	r3, [pc, #36]	; (1a00368c <uartProcessIRQ+0xa0>)
1a003668:	681b      	ldr	r3, [r3, #0]
1a00366a:	2b00      	cmp	r3, #0
1a00366c:	d0e5      	beq.n	1a00363a <uartProcessIRQ+0x4e>
1a00366e:	2000      	movs	r0, #0
1a003670:	4798      	blx	r3
1a003672:	e7e2      	b.n	1a00363a <uartProcessIRQ+0x4e>
1a003674:	1a004c5c 	.word	0x1a004c5c
1a003678:	10002f44 	.word	0x10002f44
1a00367c:	10002f50 	.word	0x10002f50
1a003680:	10002f48 	.word	0x10002f48
1a003684:	10002f4c 	.word	0x10002f4c
1a003688:	10002f54 	.word	0x10002f54
1a00368c:	10002f58 	.word	0x10002f58

1a003690 <uartInterrupt>:
1a003690:	b341      	cbz	r1, 1a0036e4 <uartInterrupt+0x54>
1a003692:	eb00 0340 	add.w	r3, r0, r0, lsl #1
1a003696:	009a      	lsls	r2, r3, #2
1a003698:	4b1e      	ldr	r3, [pc, #120]	; (1a003714 <uartInterrupt+0x84>)
1a00369a:	4413      	add	r3, r2
1a00369c:	f993 300a 	ldrsb.w	r3, [r3, #10]
1a0036a0:	2b00      	cmp	r3, #0
1a0036a2:	db18      	blt.n	1a0036d6 <uartInterrupt+0x46>
1a0036a4:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
1a0036a8:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
1a0036ac:	22a0      	movs	r2, #160	; 0xa0
1a0036ae:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
1a0036b2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1a0036b6:	0082      	lsls	r2, r0, #2
1a0036b8:	4b16      	ldr	r3, [pc, #88]	; (1a003714 <uartInterrupt+0x84>)
1a0036ba:	4413      	add	r3, r2
1a0036bc:	f993 300a 	ldrsb.w	r3, [r3, #10]
1a0036c0:	2b00      	cmp	r3, #0
1a0036c2:	db25      	blt.n	1a003710 <uartInterrupt+0x80>
1a0036c4:	f003 011f 	and.w	r1, r3, #31
1a0036c8:	095b      	lsrs	r3, r3, #5
1a0036ca:	2201      	movs	r2, #1
1a0036cc:	408a      	lsls	r2, r1
1a0036ce:	4912      	ldr	r1, [pc, #72]	; (1a003718 <uartInterrupt+0x88>)
1a0036d0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a0036d4:	4770      	bx	lr
1a0036d6:	f003 030f 	and.w	r3, r3, #15
1a0036da:	4a10      	ldr	r2, [pc, #64]	; (1a00371c <uartInterrupt+0x8c>)
1a0036dc:	441a      	add	r2, r3
1a0036de:	23a0      	movs	r3, #160	; 0xa0
1a0036e0:	7613      	strb	r3, [r2, #24]
1a0036e2:	e7e6      	b.n	1a0036b2 <uartInterrupt+0x22>
1a0036e4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1a0036e8:	0082      	lsls	r2, r0, #2
1a0036ea:	4b0a      	ldr	r3, [pc, #40]	; (1a003714 <uartInterrupt+0x84>)
1a0036ec:	4413      	add	r3, r2
1a0036ee:	f993 300a 	ldrsb.w	r3, [r3, #10]
1a0036f2:	2b00      	cmp	r3, #0
1a0036f4:	db0c      	blt.n	1a003710 <uartInterrupt+0x80>
1a0036f6:	f003 011f 	and.w	r1, r3, #31
1a0036fa:	095b      	lsrs	r3, r3, #5
1a0036fc:	2201      	movs	r2, #1
1a0036fe:	408a      	lsls	r2, r1
1a003700:	3320      	adds	r3, #32
1a003702:	4905      	ldr	r1, [pc, #20]	; (1a003718 <uartInterrupt+0x88>)
1a003704:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a003708:	f3bf 8f4f 	dsb	sy
1a00370c:	f3bf 8f6f 	isb	sy
1a003710:	4770      	bx	lr
1a003712:	bf00      	nop
1a003714:	1a004c5c 	.word	0x1a004c5c
1a003718:	e000e100 	.word	0xe000e100
1a00371c:	e000ecfc 	.word	0xe000ecfc

1a003720 <uartCallbackSet>:
1a003720:	b111      	cbz	r1, 1a003728 <uartCallbackSet+0x8>
1a003722:	2901      	cmp	r1, #1
1a003724:	d01d      	beq.n	1a003762 <uartCallbackSet+0x42>
1a003726:	4770      	bx	lr
1a003728:	b182      	cbz	r2, 1a00374c <uartCallbackSet+0x2c>
1a00372a:	2801      	cmp	r0, #1
1a00372c:	d90f      	bls.n	1a00374e <uartCallbackSet+0x2e>
1a00372e:	1ec3      	subs	r3, r0, #3
1a003730:	b2db      	uxtb	r3, r3
1a003732:	2b01      	cmp	r3, #1
1a003734:	d90e      	bls.n	1a003754 <uartCallbackSet+0x34>
1a003736:	2805      	cmp	r0, #5
1a003738:	d00f      	beq.n	1a00375a <uartCallbackSet+0x3a>
1a00373a:	2305      	movs	r3, #5
1a00373c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1a003740:	0082      	lsls	r2, r0, #2
1a003742:	4913      	ldr	r1, [pc, #76]	; (1a003790 <uartCallbackSet+0x70>)
1a003744:	588a      	ldr	r2, [r1, r2]
1a003746:	6851      	ldr	r1, [r2, #4]
1a003748:	430b      	orrs	r3, r1
1a00374a:	6053      	str	r3, [r2, #4]
1a00374c:	4770      	bx	lr
1a00374e:	4b11      	ldr	r3, [pc, #68]	; (1a003794 <uartCallbackSet+0x74>)
1a003750:	601a      	str	r2, [r3, #0]
1a003752:	e7ec      	b.n	1a00372e <uartCallbackSet+0xe>
1a003754:	4b10      	ldr	r3, [pc, #64]	; (1a003798 <uartCallbackSet+0x78>)
1a003756:	601a      	str	r2, [r3, #0]
1a003758:	e7ed      	b.n	1a003736 <uartCallbackSet+0x16>
1a00375a:	4b10      	ldr	r3, [pc, #64]	; (1a00379c <uartCallbackSet+0x7c>)
1a00375c:	601a      	str	r2, [r3, #0]
1a00375e:	2305      	movs	r3, #5
1a003760:	e7ec      	b.n	1a00373c <uartCallbackSet+0x1c>
1a003762:	2a00      	cmp	r2, #0
1a003764:	d0f2      	beq.n	1a00374c <uartCallbackSet+0x2c>
1a003766:	2801      	cmp	r0, #1
1a003768:	d907      	bls.n	1a00377a <uartCallbackSet+0x5a>
1a00376a:	1ec3      	subs	r3, r0, #3
1a00376c:	b2db      	uxtb	r3, r3
1a00376e:	2b01      	cmp	r3, #1
1a003770:	d906      	bls.n	1a003780 <uartCallbackSet+0x60>
1a003772:	2805      	cmp	r0, #5
1a003774:	d007      	beq.n	1a003786 <uartCallbackSet+0x66>
1a003776:	2302      	movs	r3, #2
1a003778:	e7e0      	b.n	1a00373c <uartCallbackSet+0x1c>
1a00377a:	4b09      	ldr	r3, [pc, #36]	; (1a0037a0 <uartCallbackSet+0x80>)
1a00377c:	601a      	str	r2, [r3, #0]
1a00377e:	e7f4      	b.n	1a00376a <uartCallbackSet+0x4a>
1a003780:	4b08      	ldr	r3, [pc, #32]	; (1a0037a4 <uartCallbackSet+0x84>)
1a003782:	601a      	str	r2, [r3, #0]
1a003784:	e7f5      	b.n	1a003772 <uartCallbackSet+0x52>
1a003786:	4b08      	ldr	r3, [pc, #32]	; (1a0037a8 <uartCallbackSet+0x88>)
1a003788:	601a      	str	r2, [r3, #0]
1a00378a:	2302      	movs	r3, #2
1a00378c:	e7d6      	b.n	1a00373c <uartCallbackSet+0x1c>
1a00378e:	bf00      	nop
1a003790:	1a004c5c 	.word	0x1a004c5c
1a003794:	10002f44 	.word	0x10002f44
1a003798:	10002f48 	.word	0x10002f48
1a00379c:	10002f4c 	.word	0x10002f4c
1a0037a0:	10002f50 	.word	0x10002f50
1a0037a4:	10002f54 	.word	0x10002f54
1a0037a8:	10002f58 	.word	0x10002f58

1a0037ac <uartTxReady>:
1a0037ac:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1a0037b0:	0083      	lsls	r3, r0, #2
1a0037b2:	4a03      	ldr	r2, [pc, #12]	; (1a0037c0 <uartTxReady+0x14>)
1a0037b4:	58d3      	ldr	r3, [r2, r3]
1a0037b6:	6958      	ldr	r0, [r3, #20]
1a0037b8:	f000 0020 	and.w	r0, r0, #32
1a0037bc:	4770      	bx	lr
1a0037be:	bf00      	nop
1a0037c0:	1a004c5c 	.word	0x1a004c5c

1a0037c4 <uartRxRead>:
1a0037c4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1a0037c8:	0083      	lsls	r3, r0, #2
1a0037ca:	4a02      	ldr	r2, [pc, #8]	; (1a0037d4 <uartRxRead+0x10>)
1a0037cc:	58d3      	ldr	r3, [r2, r3]
1a0037ce:	6818      	ldr	r0, [r3, #0]
1a0037d0:	b2c0      	uxtb	r0, r0
1a0037d2:	4770      	bx	lr
1a0037d4:	1a004c5c 	.word	0x1a004c5c

1a0037d8 <uartTxWrite>:
1a0037d8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1a0037dc:	0083      	lsls	r3, r0, #2
1a0037de:	4a02      	ldr	r2, [pc, #8]	; (1a0037e8 <uartTxWrite+0x10>)
1a0037e0:	58d3      	ldr	r3, [r2, r3]
1a0037e2:	6019      	str	r1, [r3, #0]
1a0037e4:	4770      	bx	lr
1a0037e6:	bf00      	nop
1a0037e8:	1a004c5c 	.word	0x1a004c5c

1a0037ec <uartInit>:
1a0037ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a0037f0:	4680      	mov	r8, r0
1a0037f2:	4689      	mov	r9, r1
1a0037f4:	4c19      	ldr	r4, [pc, #100]	; (1a00385c <uartInit+0x70>)
1a0037f6:	0045      	lsls	r5, r0, #1
1a0037f8:	182a      	adds	r2, r5, r0
1a0037fa:	0093      	lsls	r3, r2, #2
1a0037fc:	18e6      	adds	r6, r4, r3
1a0037fe:	58e7      	ldr	r7, [r4, r3]
1a003800:	4638      	mov	r0, r7
1a003802:	f7ff f9cf 	bl	1a002ba4 <Chip_UART_Init>
1a003806:	4649      	mov	r1, r9
1a003808:	4638      	mov	r0, r7
1a00380a:	f7ff f9f5 	bl	1a002bf8 <Chip_UART_SetBaud>
1a00380e:	2307      	movs	r3, #7
1a003810:	60bb      	str	r3, [r7, #8]
1a003812:	683b      	ldr	r3, [r7, #0]
1a003814:	2301      	movs	r3, #1
1a003816:	65fb      	str	r3, [r7, #92]	; 0x5c
1a003818:	7930      	ldrb	r0, [r6, #4]
1a00381a:	7973      	ldrb	r3, [r6, #5]
1a00381c:	79b2      	ldrb	r2, [r6, #6]
1a00381e:	f042 0218 	orr.w	r2, r2, #24
1a003822:	490f      	ldr	r1, [pc, #60]	; (1a003860 <uartInit+0x74>)
1a003824:	eb03 1340 	add.w	r3, r3, r0, lsl #5
1a003828:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a00382c:	79f0      	ldrb	r0, [r6, #7]
1a00382e:	7a33      	ldrb	r3, [r6, #8]
1a003830:	7a72      	ldrb	r2, [r6, #9]
1a003832:	f042 02d0 	orr.w	r2, r2, #208	; 0xd0
1a003836:	eb03 1340 	add.w	r3, r3, r0, lsl #5
1a00383a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a00383e:	f1b8 0f01 	cmp.w	r8, #1
1a003842:	d001      	beq.n	1a003848 <uartInit+0x5c>
1a003844:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a003848:	4a06      	ldr	r2, [pc, #24]	; (1a003864 <uartInit+0x78>)
1a00384a:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
1a00384c:	f043 0330 	orr.w	r3, r3, #48	; 0x30
1a003850:	64d3      	str	r3, [r2, #76]	; 0x4c
1a003852:	221a      	movs	r2, #26
1a003854:	f8c1 2308 	str.w	r2, [r1, #776]	; 0x308
1a003858:	e7f4      	b.n	1a003844 <uartInit+0x58>
1a00385a:	bf00      	nop
1a00385c:	1a004c5c 	.word	0x1a004c5c
1a003860:	40086000 	.word	0x40086000
1a003864:	40081000 	.word	0x40081000

1a003868 <uartWriteByte>:
1a003868:	b538      	push	{r3, r4, r5, lr}
1a00386a:	4604      	mov	r4, r0
1a00386c:	460d      	mov	r5, r1
1a00386e:	4620      	mov	r0, r4
1a003870:	f7ff ff9c 	bl	1a0037ac <uartTxReady>
1a003874:	2800      	cmp	r0, #0
1a003876:	d0fa      	beq.n	1a00386e <uartWriteByte+0x6>
1a003878:	4629      	mov	r1, r5
1a00387a:	4620      	mov	r0, r4
1a00387c:	f7ff ffac 	bl	1a0037d8 <uartTxWrite>
1a003880:	bd38      	pop	{r3, r4, r5, pc}

1a003882 <uartWriteString>:
1a003882:	b538      	push	{r3, r4, r5, lr}
1a003884:	4605      	mov	r5, r0
1a003886:	460c      	mov	r4, r1
1a003888:	e003      	b.n	1a003892 <uartWriteString+0x10>
1a00388a:	4628      	mov	r0, r5
1a00388c:	f7ff ffec 	bl	1a003868 <uartWriteByte>
1a003890:	3401      	adds	r4, #1
1a003892:	7821      	ldrb	r1, [r4, #0]
1a003894:	2900      	cmp	r1, #0
1a003896:	d1f8      	bne.n	1a00388a <uartWriteString+0x8>
1a003898:	bd38      	pop	{r3, r4, r5, pc}

1a00389a <UART2_IRQHandler>:
1a00389a:	b508      	push	{r3, lr}
1a00389c:	2003      	movs	r0, #3
1a00389e:	f7ff fea5 	bl	1a0035ec <uartProcessIRQ>
1a0038a2:	bd08      	pop	{r3, pc}

1a0038a4 <UART3_IRQHandler>:
1a0038a4:	b508      	push	{r3, lr}
1a0038a6:	2005      	movs	r0, #5
1a0038a8:	f7ff fea0 	bl	1a0035ec <uartProcessIRQ>
1a0038ac:	bd08      	pop	{r3, pc}
1a0038ae:	Address 0x000000001a0038ae is out of bounds.


1a0038b0 <tickerCallback>:
1a0038b0:	e92d 4800 	stmdb	sp!, {fp, lr}
1a0038b4:	4908      	ldr	r1, [pc, #32]	; (1a0038d8 <tickerCallback+0x28>)
1a0038b6:	e9d1 2300 	ldrd	r2, r3, [r1]
1a0038ba:	f112 0b01 	adds.w	fp, r2, #1
1a0038be:	f143 0c00 	adc.w	ip, r3, #0
1a0038c2:	e9c1 bc00 	strd	fp, ip, [r1]
1a0038c6:	4b05      	ldr	r3, [pc, #20]	; (1a0038dc <tickerCallback+0x2c>)
1a0038c8:	681b      	ldr	r3, [r3, #0]
1a0038ca:	b113      	cbz	r3, 1a0038d2 <tickerCallback+0x22>
1a0038cc:	4a04      	ldr	r2, [pc, #16]	; (1a0038e0 <tickerCallback+0x30>)
1a0038ce:	6810      	ldr	r0, [r2, #0]
1a0038d0:	4798      	blx	r3
1a0038d2:	e8bd 8800 	ldmia.w	sp!, {fp, pc}
1a0038d6:	bf00      	nop
1a0038d8:	10002f60 	.word	0x10002f60
1a0038dc:	10002f68 	.word	0x10002f68
1a0038e0:	10002f5c 	.word	0x10002f5c

1a0038e4 <tickInit>:
1a0038e4:	b510      	push	{r4, lr}
1a0038e6:	b082      	sub	sp, #8
1a0038e8:	4b0e      	ldr	r3, [pc, #56]	; (1a003924 <tickInit+0x40>)
1a0038ea:	9301      	str	r3, [sp, #4]
1a0038ec:	4b0e      	ldr	r3, [pc, #56]	; (1a003928 <tickInit+0x44>)
1a0038ee:	9300      	str	r3, [sp, #0]
1a0038f0:	2300      	movs	r3, #0
1a0038f2:	2201      	movs	r2, #1
1a0038f4:	4601      	mov	r1, r0
1a0038f6:	480d      	ldr	r0, [pc, #52]	; (1a00392c <tickInit+0x48>)
1a0038f8:	f7fe fc72 	bl	1a0021e0 <xTimerCreateStatic>
1a0038fc:	b178      	cbz	r0, 1a00391e <tickInit+0x3a>
1a0038fe:	4604      	mov	r4, r0
1a003900:	f7fe f824 	bl	1a00194c <xTaskGetTickCount>
1a003904:	2300      	movs	r3, #0
1a003906:	9300      	str	r3, [sp, #0]
1a003908:	4602      	mov	r2, r0
1a00390a:	2101      	movs	r1, #1
1a00390c:	4620      	mov	r0, r4
1a00390e:	f7fe fc8d 	bl	1a00222c <xTimerGenericCommand>
1a003912:	2801      	cmp	r0, #1
1a003914:	bf14      	ite	ne
1a003916:	2000      	movne	r0, #0
1a003918:	2001      	moveq	r0, #1
1a00391a:	b002      	add	sp, #8
1a00391c:	bd10      	pop	{r4, pc}
1a00391e:	2000      	movs	r0, #0
1a003920:	e7fb      	b.n	1a00391a <tickInit+0x36>
1a003922:	bf00      	nop
1a003924:	10002f6c 	.word	0x10002f6c
1a003928:	1a0038b1 	.word	0x1a0038b1
1a00392c:	1a004ca4 	.word	0x1a004ca4

1a003930 <errorOcurred>:
1a003930:	e7fe      	b.n	1a003930 <errorOcurred>

1a003932 <doNothing>:
1a003932:	4770      	bx	lr

1a003934 <TIMER0_IRQHandler>:
1a003934:	b538      	push	{r3, r4, r5, lr}
1a003936:	2400      	movs	r4, #0
1a003938:	e001      	b.n	1a00393e <TIMER0_IRQHandler+0xa>
1a00393a:	3401      	adds	r4, #1
1a00393c:	b2e4      	uxtb	r4, r4
1a00393e:	2c03      	cmp	r4, #3
1a003940:	d812      	bhi.n	1a003968 <TIMER0_IRQHandler+0x34>
1a003942:	b265      	sxtb	r5, r4
1a003944:	4b09      	ldr	r3, [pc, #36]	; (1a00396c <TIMER0_IRQHandler+0x38>)
1a003946:	681a      	ldr	r2, [r3, #0]
1a003948:	f004 010f 	and.w	r1, r4, #15
1a00394c:	2301      	movs	r3, #1
1a00394e:	408b      	lsls	r3, r1
1a003950:	421a      	tst	r2, r3
1a003952:	d0f2      	beq.n	1a00393a <TIMER0_IRQHandler+0x6>
1a003954:	4b06      	ldr	r3, [pc, #24]	; (1a003970 <TIMER0_IRQHandler+0x3c>)
1a003956:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
1a00395a:	2000      	movs	r0, #0
1a00395c:	4798      	blx	r3
1a00395e:	2301      	movs	r3, #1
1a003960:	40ab      	lsls	r3, r5
1a003962:	4a02      	ldr	r2, [pc, #8]	; (1a00396c <TIMER0_IRQHandler+0x38>)
1a003964:	6013      	str	r3, [r2, #0]
1a003966:	e7e8      	b.n	1a00393a <TIMER0_IRQHandler+0x6>
1a003968:	bd38      	pop	{r3, r4, r5, pc}
1a00396a:	bf00      	nop
1a00396c:	40084000 	.word	0x40084000
1a003970:	10000050 	.word	0x10000050

1a003974 <TIMER1_IRQHandler>:
1a003974:	b538      	push	{r3, r4, r5, lr}
1a003976:	2400      	movs	r4, #0
1a003978:	e001      	b.n	1a00397e <TIMER1_IRQHandler+0xa>
1a00397a:	3401      	adds	r4, #1
1a00397c:	b2e4      	uxtb	r4, r4
1a00397e:	2c03      	cmp	r4, #3
1a003980:	d813      	bhi.n	1a0039aa <TIMER1_IRQHandler+0x36>
1a003982:	b265      	sxtb	r5, r4
1a003984:	4b09      	ldr	r3, [pc, #36]	; (1a0039ac <TIMER1_IRQHandler+0x38>)
1a003986:	681a      	ldr	r2, [r3, #0]
1a003988:	f004 010f 	and.w	r1, r4, #15
1a00398c:	2301      	movs	r3, #1
1a00398e:	408b      	lsls	r3, r1
1a003990:	421a      	tst	r2, r3
1a003992:	d0f2      	beq.n	1a00397a <TIMER1_IRQHandler+0x6>
1a003994:	1d23      	adds	r3, r4, #4
1a003996:	4a06      	ldr	r2, [pc, #24]	; (1a0039b0 <TIMER1_IRQHandler+0x3c>)
1a003998:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
1a00399c:	2000      	movs	r0, #0
1a00399e:	4798      	blx	r3
1a0039a0:	2301      	movs	r3, #1
1a0039a2:	40ab      	lsls	r3, r5
1a0039a4:	4a01      	ldr	r2, [pc, #4]	; (1a0039ac <TIMER1_IRQHandler+0x38>)
1a0039a6:	6013      	str	r3, [r2, #0]
1a0039a8:	e7e7      	b.n	1a00397a <TIMER1_IRQHandler+0x6>
1a0039aa:	bd38      	pop	{r3, r4, r5, pc}
1a0039ac:	40085000 	.word	0x40085000
1a0039b0:	10000050 	.word	0x10000050

1a0039b4 <TIMER2_IRQHandler>:
1a0039b4:	b538      	push	{r3, r4, r5, lr}
1a0039b6:	2400      	movs	r4, #0
1a0039b8:	e001      	b.n	1a0039be <TIMER2_IRQHandler+0xa>
1a0039ba:	3401      	adds	r4, #1
1a0039bc:	b2e4      	uxtb	r4, r4
1a0039be:	2c03      	cmp	r4, #3
1a0039c0:	d814      	bhi.n	1a0039ec <TIMER2_IRQHandler+0x38>
1a0039c2:	b265      	sxtb	r5, r4
1a0039c4:	4b0a      	ldr	r3, [pc, #40]	; (1a0039f0 <TIMER2_IRQHandler+0x3c>)
1a0039c6:	681a      	ldr	r2, [r3, #0]
1a0039c8:	f004 010f 	and.w	r1, r4, #15
1a0039cc:	2301      	movs	r3, #1
1a0039ce:	408b      	lsls	r3, r1
1a0039d0:	421a      	tst	r2, r3
1a0039d2:	d0f2      	beq.n	1a0039ba <TIMER2_IRQHandler+0x6>
1a0039d4:	f104 0308 	add.w	r3, r4, #8
1a0039d8:	4a06      	ldr	r2, [pc, #24]	; (1a0039f4 <TIMER2_IRQHandler+0x40>)
1a0039da:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
1a0039de:	2000      	movs	r0, #0
1a0039e0:	4798      	blx	r3
1a0039e2:	2301      	movs	r3, #1
1a0039e4:	40ab      	lsls	r3, r5
1a0039e6:	4a02      	ldr	r2, [pc, #8]	; (1a0039f0 <TIMER2_IRQHandler+0x3c>)
1a0039e8:	6013      	str	r3, [r2, #0]
1a0039ea:	e7e6      	b.n	1a0039ba <TIMER2_IRQHandler+0x6>
1a0039ec:	bd38      	pop	{r3, r4, r5, pc}
1a0039ee:	bf00      	nop
1a0039f0:	400c3000 	.word	0x400c3000
1a0039f4:	10000050 	.word	0x10000050

1a0039f8 <TIMER3_IRQHandler>:
1a0039f8:	b538      	push	{r3, r4, r5, lr}
1a0039fa:	2400      	movs	r4, #0
1a0039fc:	e001      	b.n	1a003a02 <TIMER3_IRQHandler+0xa>
1a0039fe:	3401      	adds	r4, #1
1a003a00:	b2e4      	uxtb	r4, r4
1a003a02:	2c03      	cmp	r4, #3
1a003a04:	d814      	bhi.n	1a003a30 <TIMER3_IRQHandler+0x38>
1a003a06:	b265      	sxtb	r5, r4
1a003a08:	4b0a      	ldr	r3, [pc, #40]	; (1a003a34 <TIMER3_IRQHandler+0x3c>)
1a003a0a:	681a      	ldr	r2, [r3, #0]
1a003a0c:	f004 010f 	and.w	r1, r4, #15
1a003a10:	2301      	movs	r3, #1
1a003a12:	408b      	lsls	r3, r1
1a003a14:	421a      	tst	r2, r3
1a003a16:	d0f2      	beq.n	1a0039fe <TIMER3_IRQHandler+0x6>
1a003a18:	f104 030c 	add.w	r3, r4, #12
1a003a1c:	4a06      	ldr	r2, [pc, #24]	; (1a003a38 <TIMER3_IRQHandler+0x40>)
1a003a1e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
1a003a22:	2000      	movs	r0, #0
1a003a24:	4798      	blx	r3
1a003a26:	2301      	movs	r3, #1
1a003a28:	40ab      	lsls	r3, r5
1a003a2a:	4a02      	ldr	r2, [pc, #8]	; (1a003a34 <TIMER3_IRQHandler+0x3c>)
1a003a2c:	6013      	str	r3, [r2, #0]
1a003a2e:	e7e6      	b.n	1a0039fe <TIMER3_IRQHandler+0x6>
1a003a30:	bd38      	pop	{r3, r4, r5, pc}
1a003a32:	bf00      	nop
1a003a34:	400c4000 	.word	0x400c4000
1a003a38:	10000050 	.word	0x10000050

1a003a3c <gpioObtainPinInit>:
1a003a3c:	b430      	push	{r4, r5}
1a003a3e:	4d0b      	ldr	r5, [pc, #44]	; (1a003a6c <gpioObtainPinInit+0x30>)
1a003a40:	eb00 0080 	add.w	r0, r0, r0, lsl #2
1a003a44:	182c      	adds	r4, r5, r0
1a003a46:	5628      	ldrsb	r0, [r5, r0]
1a003a48:	7008      	strb	r0, [r1, #0]
1a003a4a:	f994 1001 	ldrsb.w	r1, [r4, #1]
1a003a4e:	7011      	strb	r1, [r2, #0]
1a003a50:	f994 2002 	ldrsb.w	r2, [r4, #2]
1a003a54:	701a      	strb	r2, [r3, #0]
1a003a56:	f994 2003 	ldrsb.w	r2, [r4, #3]
1a003a5a:	9b02      	ldr	r3, [sp, #8]
1a003a5c:	701a      	strb	r2, [r3, #0]
1a003a5e:	f994 2004 	ldrsb.w	r2, [r4, #4]
1a003a62:	9b03      	ldr	r3, [sp, #12]
1a003a64:	701a      	strb	r2, [r3, #0]
1a003a66:	bc30      	pop	{r4, r5}
1a003a68:	4770      	bx	lr
1a003a6a:	bf00      	nop
1a003a6c:	1a004cb0 	.word	0x1a004cb0

1a003a70 <gpioInit>:
1a003a70:	b570      	push	{r4, r5, r6, lr}
1a003a72:	b084      	sub	sp, #16
1a003a74:	460c      	mov	r4, r1
1a003a76:	2300      	movs	r3, #0
1a003a78:	f88d 300f 	strb.w	r3, [sp, #15]
1a003a7c:	f88d 300e 	strb.w	r3, [sp, #14]
1a003a80:	f88d 300d 	strb.w	r3, [sp, #13]
1a003a84:	f88d 300c 	strb.w	r3, [sp, #12]
1a003a88:	f88d 300b 	strb.w	r3, [sp, #11]
1a003a8c:	f10d 030b 	add.w	r3, sp, #11
1a003a90:	9301      	str	r3, [sp, #4]
1a003a92:	ab03      	add	r3, sp, #12
1a003a94:	9300      	str	r3, [sp, #0]
1a003a96:	f10d 030d 	add.w	r3, sp, #13
1a003a9a:	f10d 020e 	add.w	r2, sp, #14
1a003a9e:	f10d 010f 	add.w	r1, sp, #15
1a003aa2:	f7ff ffcb 	bl	1a003a3c <gpioObtainPinInit>
1a003aa6:	2c05      	cmp	r4, #5
1a003aa8:	f200 80a5 	bhi.w	1a003bf6 <gpioInit+0x186>
1a003aac:	e8df f004 	tbb	[pc, r4]
1a003ab0:	45278109 	.word	0x45278109
1a003ab4:	0363      	.short	0x0363
1a003ab6:	4851      	ldr	r0, [pc, #324]	; (1a003bfc <gpioInit+0x18c>)
1a003ab8:	f7ff fc68 	bl	1a00338c <Chip_GPIO_Init>
1a003abc:	2001      	movs	r0, #1
1a003abe:	b004      	add	sp, #16
1a003ac0:	bd70      	pop	{r4, r5, r6, pc}
1a003ac2:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a003ac6:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a003aca:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a003ace:	f042 02d0 	orr.w	r2, r2, #208	; 0xd0
1a003ad2:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a003ad6:	494a      	ldr	r1, [pc, #296]	; (1a003c00 <gpioInit+0x190>)
1a003ad8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a003adc:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a003ae0:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a003ae4:	2001      	movs	r0, #1
1a003ae6:	fa00 f102 	lsl.w	r1, r0, r2
1a003aea:	4c44      	ldr	r4, [pc, #272]	; (1a003bfc <gpioInit+0x18c>)
1a003aec:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a003af0:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a003af4:	ea22 0201 	bic.w	r2, r2, r1
1a003af8:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a003afc:	e7df      	b.n	1a003abe <gpioInit+0x4e>
1a003afe:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a003b02:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a003b06:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a003b0a:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
1a003b0e:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a003b12:	493b      	ldr	r1, [pc, #236]	; (1a003c00 <gpioInit+0x190>)
1a003b14:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a003b18:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a003b1c:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a003b20:	2001      	movs	r0, #1
1a003b22:	fa00 f102 	lsl.w	r1, r0, r2
1a003b26:	4c35      	ldr	r4, [pc, #212]	; (1a003bfc <gpioInit+0x18c>)
1a003b28:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a003b2c:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a003b30:	ea22 0201 	bic.w	r2, r2, r1
1a003b34:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a003b38:	e7c1      	b.n	1a003abe <gpioInit+0x4e>
1a003b3a:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a003b3e:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a003b42:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a003b46:	f042 02d8 	orr.w	r2, r2, #216	; 0xd8
1a003b4a:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a003b4e:	492c      	ldr	r1, [pc, #176]	; (1a003c00 <gpioInit+0x190>)
1a003b50:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a003b54:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a003b58:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a003b5c:	2001      	movs	r0, #1
1a003b5e:	fa00 f102 	lsl.w	r1, r0, r2
1a003b62:	4c26      	ldr	r4, [pc, #152]	; (1a003bfc <gpioInit+0x18c>)
1a003b64:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a003b68:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a003b6c:	ea22 0201 	bic.w	r2, r2, r1
1a003b70:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a003b74:	e7a3      	b.n	1a003abe <gpioInit+0x4e>
1a003b76:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a003b7a:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a003b7e:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a003b82:	f042 02c8 	orr.w	r2, r2, #200	; 0xc8
1a003b86:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a003b8a:	491d      	ldr	r1, [pc, #116]	; (1a003c00 <gpioInit+0x190>)
1a003b8c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a003b90:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a003b94:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a003b98:	2001      	movs	r0, #1
1a003b9a:	fa00 f102 	lsl.w	r1, r0, r2
1a003b9e:	4c17      	ldr	r4, [pc, #92]	; (1a003bfc <gpioInit+0x18c>)
1a003ba0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a003ba4:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a003ba8:	ea22 0201 	bic.w	r2, r2, r1
1a003bac:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a003bb0:	e785      	b.n	1a003abe <gpioInit+0x4e>
1a003bb2:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a003bb6:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a003bba:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a003bbe:	f042 02d0 	orr.w	r2, r2, #208	; 0xd0
1a003bc2:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a003bc6:	490e      	ldr	r1, [pc, #56]	; (1a003c00 <gpioInit+0x190>)
1a003bc8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
1a003bcc:	f89d 400c 	ldrb.w	r4, [sp, #12]
1a003bd0:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a003bd4:	2001      	movs	r0, #1
1a003bd6:	fa00 f102 	lsl.w	r1, r0, r2
1a003bda:	4b08      	ldr	r3, [pc, #32]	; (1a003bfc <gpioInit+0x18c>)
1a003bdc:	f504 6500 	add.w	r5, r4, #2048	; 0x800
1a003be0:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
1a003be4:	4331      	orrs	r1, r6
1a003be6:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
1a003bea:	b2d2      	uxtb	r2, r2
1a003bec:	eb03 1344 	add.w	r3, r3, r4, lsl #5
1a003bf0:	2100      	movs	r1, #0
1a003bf2:	5499      	strb	r1, [r3, r2]
1a003bf4:	e763      	b.n	1a003abe <gpioInit+0x4e>
1a003bf6:	2000      	movs	r0, #0
1a003bf8:	e761      	b.n	1a003abe <gpioInit+0x4e>
1a003bfa:	bf00      	nop
1a003bfc:	400f4000 	.word	0x400f4000
1a003c00:	40086000 	.word	0x40086000

1a003c04 <gpioWrite>:
1a003c04:	b510      	push	{r4, lr}
1a003c06:	b084      	sub	sp, #16
1a003c08:	460c      	mov	r4, r1
1a003c0a:	2300      	movs	r3, #0
1a003c0c:	f88d 300f 	strb.w	r3, [sp, #15]
1a003c10:	f88d 300e 	strb.w	r3, [sp, #14]
1a003c14:	f88d 300d 	strb.w	r3, [sp, #13]
1a003c18:	f88d 300c 	strb.w	r3, [sp, #12]
1a003c1c:	f88d 300b 	strb.w	r3, [sp, #11]
1a003c20:	f10d 030b 	add.w	r3, sp, #11
1a003c24:	9301      	str	r3, [sp, #4]
1a003c26:	ab03      	add	r3, sp, #12
1a003c28:	9300      	str	r3, [sp, #0]
1a003c2a:	f10d 030d 	add.w	r3, sp, #13
1a003c2e:	f10d 020e 	add.w	r2, sp, #14
1a003c32:	f10d 010f 	add.w	r1, sp, #15
1a003c36:	f7ff ff01 	bl	1a003a3c <gpioObtainPinInit>
1a003c3a:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a003c3e:	f89d 200b 	ldrb.w	r2, [sp, #11]
1a003c42:	3400      	adds	r4, #0
1a003c44:	bf18      	it	ne
1a003c46:	2401      	movne	r4, #1
1a003c48:	015b      	lsls	r3, r3, #5
1a003c4a:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
1a003c4e:	f503 2370 	add.w	r3, r3, #983040	; 0xf0000
1a003c52:	549c      	strb	r4, [r3, r2]
1a003c54:	2001      	movs	r0, #1
1a003c56:	b004      	add	sp, #16
1a003c58:	bd10      	pop	{r4, pc}

1a003c5a <gpioRead>:
1a003c5a:	b500      	push	{lr}
1a003c5c:	b085      	sub	sp, #20
1a003c5e:	2300      	movs	r3, #0
1a003c60:	f88d 300f 	strb.w	r3, [sp, #15]
1a003c64:	f88d 300e 	strb.w	r3, [sp, #14]
1a003c68:	f88d 300d 	strb.w	r3, [sp, #13]
1a003c6c:	f88d 300c 	strb.w	r3, [sp, #12]
1a003c70:	f88d 300b 	strb.w	r3, [sp, #11]
1a003c74:	f10d 030b 	add.w	r3, sp, #11
1a003c78:	9301      	str	r3, [sp, #4]
1a003c7a:	ab03      	add	r3, sp, #12
1a003c7c:	9300      	str	r3, [sp, #0]
1a003c7e:	f10d 030d 	add.w	r3, sp, #13
1a003c82:	f10d 020e 	add.w	r2, sp, #14
1a003c86:	f10d 010f 	add.w	r1, sp, #15
1a003c8a:	f7ff fed7 	bl	1a003a3c <gpioObtainPinInit>
1a003c8e:	f99d 300c 	ldrsb.w	r3, [sp, #12]
1a003c92:	f89d 200b 	ldrb.w	r2, [sp, #11]
1a003c96:	015b      	lsls	r3, r3, #5
1a003c98:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
1a003c9c:	f503 2370 	add.w	r3, r3, #983040	; 0xf0000
1a003ca0:	5c98      	ldrb	r0, [r3, r2]
1a003ca2:	3000      	adds	r0, #0
1a003ca4:	bf18      	it	ne
1a003ca6:	2001      	movne	r0, #1
1a003ca8:	b005      	add	sp, #20
1a003caa:	f85d fb04 	ldr.w	pc, [sp], #4

1a003cae <gpioToggle>:
1a003cae:	b510      	push	{r4, lr}
1a003cb0:	4604      	mov	r4, r0
1a003cb2:	f7ff ffd2 	bl	1a003c5a <gpioRead>
1a003cb6:	fab0 f180 	clz	r1, r0
1a003cba:	0949      	lsrs	r1, r1, #5
1a003cbc:	4620      	mov	r0, r4
1a003cbe:	f7ff ffa1 	bl	1a003c04 <gpioWrite>
1a003cc2:	bd10      	pop	{r4, pc}

1a003cc4 <USB0_IRQHandler>:
1a003cc4:	b508      	push	{r3, lr}
1a003cc6:	4b04      	ldr	r3, [pc, #16]	; (1a003cd8 <USB0_IRQHandler+0x14>)
1a003cc8:	681b      	ldr	r3, [r3, #0]
1a003cca:	681b      	ldr	r3, [r3, #0]
1a003ccc:	68db      	ldr	r3, [r3, #12]
1a003cce:	4a03      	ldr	r2, [pc, #12]	; (1a003cdc <USB0_IRQHandler+0x18>)
1a003cd0:	6810      	ldr	r0, [r2, #0]
1a003cd2:	4798      	blx	r3
1a003cd4:	bd08      	pop	{r3, pc}
1a003cd6:	bf00      	nop
1a003cd8:	100030e8 	.word	0x100030e8
1a003cdc:	10002f9c 	.word	0x10002f9c

1a003ce0 <boardInit>:
1a003ce0:	b508      	push	{r3, lr}
1a003ce2:	f7ff fb49 	bl	1a003378 <SystemCoreClockUpdate>
1a003ce6:	4b3a      	ldr	r3, [pc, #232]	; (1a003dd0 <boardInit+0xf0>)
1a003ce8:	6818      	ldr	r0, [r3, #0]
1a003cea:	f7ff fc71 	bl	1a0035d0 <cyclesCounterInit>
1a003cee:	2001      	movs	r0, #1
1a003cf0:	2100      	movs	r1, #0
1a003cf2:	f7ff fdf7 	bl	1a0038e4 <tickInit>
1a003cf6:	2105      	movs	r1, #5
1a003cf8:	2000      	movs	r0, #0
1a003cfa:	f7ff feb9 	bl	1a003a70 <gpioInit>
1a003cfe:	2100      	movs	r1, #0
1a003d00:	2026      	movs	r0, #38	; 0x26
1a003d02:	f7ff feb5 	bl	1a003a70 <gpioInit>
1a003d06:	2100      	movs	r1, #0
1a003d08:	2027      	movs	r0, #39	; 0x27
1a003d0a:	f7ff feb1 	bl	1a003a70 <gpioInit>
1a003d0e:	2100      	movs	r1, #0
1a003d10:	2028      	movs	r0, #40	; 0x28
1a003d12:	f7ff fead 	bl	1a003a70 <gpioInit>
1a003d16:	2100      	movs	r1, #0
1a003d18:	2029      	movs	r0, #41	; 0x29
1a003d1a:	f7ff fea9 	bl	1a003a70 <gpioInit>
1a003d1e:	2101      	movs	r1, #1
1a003d20:	202a      	movs	r0, #42	; 0x2a
1a003d22:	f7ff fea5 	bl	1a003a70 <gpioInit>
1a003d26:	2101      	movs	r1, #1
1a003d28:	202b      	movs	r0, #43	; 0x2b
1a003d2a:	f7ff fea1 	bl	1a003a70 <gpioInit>
1a003d2e:	2101      	movs	r1, #1
1a003d30:	202c      	movs	r0, #44	; 0x2c
1a003d32:	f7ff fe9d 	bl	1a003a70 <gpioInit>
1a003d36:	2101      	movs	r1, #1
1a003d38:	202d      	movs	r0, #45	; 0x2d
1a003d3a:	f7ff fe99 	bl	1a003a70 <gpioInit>
1a003d3e:	2101      	movs	r1, #1
1a003d40:	202e      	movs	r0, #46	; 0x2e
1a003d42:	f7ff fe95 	bl	1a003a70 <gpioInit>
1a003d46:	2101      	movs	r1, #1
1a003d48:	202f      	movs	r0, #47	; 0x2f
1a003d4a:	f7ff fe91 	bl	1a003a70 <gpioInit>
1a003d4e:	2100      	movs	r1, #0
1a003d50:	2030      	movs	r0, #48	; 0x30
1a003d52:	f7ff fe8d 	bl	1a003a70 <gpioInit>
1a003d56:	2100      	movs	r1, #0
1a003d58:	2031      	movs	r0, #49	; 0x31
1a003d5a:	f7ff fe89 	bl	1a003a70 <gpioInit>
1a003d5e:	2100      	movs	r1, #0
1a003d60:	2032      	movs	r0, #50	; 0x32
1a003d62:	f7ff fe85 	bl	1a003a70 <gpioInit>
1a003d66:	2100      	movs	r1, #0
1a003d68:	2033      	movs	r0, #51	; 0x33
1a003d6a:	f7ff fe81 	bl	1a003a70 <gpioInit>
1a003d6e:	2100      	movs	r1, #0
1a003d70:	2034      	movs	r0, #52	; 0x34
1a003d72:	f7ff fe7d 	bl	1a003a70 <gpioInit>
1a003d76:	2100      	movs	r1, #0
1a003d78:	2035      	movs	r0, #53	; 0x35
1a003d7a:	f7ff fe79 	bl	1a003a70 <gpioInit>
1a003d7e:	2100      	movs	r1, #0
1a003d80:	2036      	movs	r0, #54	; 0x36
1a003d82:	f7ff fe75 	bl	1a003a70 <gpioInit>
1a003d86:	2100      	movs	r1, #0
1a003d88:	2037      	movs	r0, #55	; 0x37
1a003d8a:	f7ff fe71 	bl	1a003a70 <gpioInit>
1a003d8e:	2101      	movs	r1, #1
1a003d90:	2038      	movs	r0, #56	; 0x38
1a003d92:	f7ff fe6d 	bl	1a003a70 <gpioInit>
1a003d96:	2101      	movs	r1, #1
1a003d98:	2039      	movs	r0, #57	; 0x39
1a003d9a:	f7ff fe69 	bl	1a003a70 <gpioInit>
1a003d9e:	2101      	movs	r1, #1
1a003da0:	203a      	movs	r0, #58	; 0x3a
1a003da2:	f7ff fe65 	bl	1a003a70 <gpioInit>
1a003da6:	2101      	movs	r1, #1
1a003da8:	203b      	movs	r0, #59	; 0x3b
1a003daa:	f7ff fe61 	bl	1a003a70 <gpioInit>
1a003dae:	2101      	movs	r1, #1
1a003db0:	203c      	movs	r0, #60	; 0x3c
1a003db2:	f7ff fe5d 	bl	1a003a70 <gpioInit>
1a003db6:	2101      	movs	r1, #1
1a003db8:	203d      	movs	r0, #61	; 0x3d
1a003dba:	f7ff fe59 	bl	1a003a70 <gpioInit>
1a003dbe:	2101      	movs	r1, #1
1a003dc0:	203e      	movs	r0, #62	; 0x3e
1a003dc2:	f7ff fe55 	bl	1a003a70 <gpioInit>
1a003dc6:	2101      	movs	r1, #1
1a003dc8:	203f      	movs	r0, #63	; 0x3f
1a003dca:	f7ff fe51 	bl	1a003a70 <gpioInit>
1a003dce:	bd08      	pop	{r3, pc}
1a003dd0:	100030e4 	.word	0x100030e4

1a003dd4 <__aeabi_uldivmod>:
1a003dd4:	b953      	cbnz	r3, 1a003dec <__aeabi_uldivmod+0x18>
1a003dd6:	b94a      	cbnz	r2, 1a003dec <__aeabi_uldivmod+0x18>
1a003dd8:	2900      	cmp	r1, #0
1a003dda:	bf08      	it	eq
1a003ddc:	2800      	cmpeq	r0, #0
1a003dde:	bf1c      	itt	ne
1a003de0:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
1a003de4:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
1a003de8:	f000 b972 	b.w	1a0040d0 <__aeabi_idiv0>
1a003dec:	f1ad 0c08 	sub.w	ip, sp, #8
1a003df0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
1a003df4:	f000 f806 	bl	1a003e04 <__udivmoddi4>
1a003df8:	f8dd e004 	ldr.w	lr, [sp, #4]
1a003dfc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a003e00:	b004      	add	sp, #16
1a003e02:	4770      	bx	lr

1a003e04 <__udivmoddi4>:
1a003e04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1a003e08:	9e08      	ldr	r6, [sp, #32]
1a003e0a:	4604      	mov	r4, r0
1a003e0c:	4688      	mov	r8, r1
1a003e0e:	2b00      	cmp	r3, #0
1a003e10:	d14b      	bne.n	1a003eaa <__udivmoddi4+0xa6>
1a003e12:	428a      	cmp	r2, r1
1a003e14:	4615      	mov	r5, r2
1a003e16:	d967      	bls.n	1a003ee8 <__udivmoddi4+0xe4>
1a003e18:	fab2 f282 	clz	r2, r2
1a003e1c:	b14a      	cbz	r2, 1a003e32 <__udivmoddi4+0x2e>
1a003e1e:	f1c2 0720 	rsb	r7, r2, #32
1a003e22:	fa01 f302 	lsl.w	r3, r1, r2
1a003e26:	fa20 f707 	lsr.w	r7, r0, r7
1a003e2a:	4095      	lsls	r5, r2
1a003e2c:	ea47 0803 	orr.w	r8, r7, r3
1a003e30:	4094      	lsls	r4, r2
1a003e32:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a003e36:	0c23      	lsrs	r3, r4, #16
1a003e38:	fbb8 f7fe 	udiv	r7, r8, lr
1a003e3c:	fa1f fc85 	uxth.w	ip, r5
1a003e40:	fb0e 8817 	mls	r8, lr, r7, r8
1a003e44:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
1a003e48:	fb07 f10c 	mul.w	r1, r7, ip
1a003e4c:	4299      	cmp	r1, r3
1a003e4e:	d909      	bls.n	1a003e64 <__udivmoddi4+0x60>
1a003e50:	18eb      	adds	r3, r5, r3
1a003e52:	f107 30ff 	add.w	r0, r7, #4294967295	; 0xffffffff
1a003e56:	f080 811b 	bcs.w	1a004090 <__udivmoddi4+0x28c>
1a003e5a:	4299      	cmp	r1, r3
1a003e5c:	f240 8118 	bls.w	1a004090 <__udivmoddi4+0x28c>
1a003e60:	3f02      	subs	r7, #2
1a003e62:	442b      	add	r3, r5
1a003e64:	1a5b      	subs	r3, r3, r1
1a003e66:	b2a4      	uxth	r4, r4
1a003e68:	fbb3 f0fe 	udiv	r0, r3, lr
1a003e6c:	fb0e 3310 	mls	r3, lr, r0, r3
1a003e70:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
1a003e74:	fb00 fc0c 	mul.w	ip, r0, ip
1a003e78:	45a4      	cmp	ip, r4
1a003e7a:	d909      	bls.n	1a003e90 <__udivmoddi4+0x8c>
1a003e7c:	192c      	adds	r4, r5, r4
1a003e7e:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
1a003e82:	f080 8107 	bcs.w	1a004094 <__udivmoddi4+0x290>
1a003e86:	45a4      	cmp	ip, r4
1a003e88:	f240 8104 	bls.w	1a004094 <__udivmoddi4+0x290>
1a003e8c:	3802      	subs	r0, #2
1a003e8e:	442c      	add	r4, r5
1a003e90:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
1a003e94:	eba4 040c 	sub.w	r4, r4, ip
1a003e98:	2700      	movs	r7, #0
1a003e9a:	b11e      	cbz	r6, 1a003ea4 <__udivmoddi4+0xa0>
1a003e9c:	40d4      	lsrs	r4, r2
1a003e9e:	2300      	movs	r3, #0
1a003ea0:	e9c6 4300 	strd	r4, r3, [r6]
1a003ea4:	4639      	mov	r1, r7
1a003ea6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a003eaa:	428b      	cmp	r3, r1
1a003eac:	d909      	bls.n	1a003ec2 <__udivmoddi4+0xbe>
1a003eae:	2e00      	cmp	r6, #0
1a003eb0:	f000 80eb 	beq.w	1a00408a <__udivmoddi4+0x286>
1a003eb4:	2700      	movs	r7, #0
1a003eb6:	e9c6 0100 	strd	r0, r1, [r6]
1a003eba:	4638      	mov	r0, r7
1a003ebc:	4639      	mov	r1, r7
1a003ebe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a003ec2:	fab3 f783 	clz	r7, r3
1a003ec6:	2f00      	cmp	r7, #0
1a003ec8:	d147      	bne.n	1a003f5a <__udivmoddi4+0x156>
1a003eca:	428b      	cmp	r3, r1
1a003ecc:	d302      	bcc.n	1a003ed4 <__udivmoddi4+0xd0>
1a003ece:	4282      	cmp	r2, r0
1a003ed0:	f200 80fa 	bhi.w	1a0040c8 <__udivmoddi4+0x2c4>
1a003ed4:	1a84      	subs	r4, r0, r2
1a003ed6:	eb61 0303 	sbc.w	r3, r1, r3
1a003eda:	2001      	movs	r0, #1
1a003edc:	4698      	mov	r8, r3
1a003ede:	2e00      	cmp	r6, #0
1a003ee0:	d0e0      	beq.n	1a003ea4 <__udivmoddi4+0xa0>
1a003ee2:	e9c6 4800 	strd	r4, r8, [r6]
1a003ee6:	e7dd      	b.n	1a003ea4 <__udivmoddi4+0xa0>
1a003ee8:	b902      	cbnz	r2, 1a003eec <__udivmoddi4+0xe8>
1a003eea:	deff      	udf	#255	; 0xff
1a003eec:	fab2 f282 	clz	r2, r2
1a003ef0:	2a00      	cmp	r2, #0
1a003ef2:	f040 808f 	bne.w	1a004014 <__udivmoddi4+0x210>
1a003ef6:	1b49      	subs	r1, r1, r5
1a003ef8:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a003efc:	fa1f f885 	uxth.w	r8, r5
1a003f00:	2701      	movs	r7, #1
1a003f02:	fbb1 fcfe 	udiv	ip, r1, lr
1a003f06:	0c23      	lsrs	r3, r4, #16
1a003f08:	fb0e 111c 	mls	r1, lr, ip, r1
1a003f0c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1a003f10:	fb08 f10c 	mul.w	r1, r8, ip
1a003f14:	4299      	cmp	r1, r3
1a003f16:	d907      	bls.n	1a003f28 <__udivmoddi4+0x124>
1a003f18:	18eb      	adds	r3, r5, r3
1a003f1a:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
1a003f1e:	d202      	bcs.n	1a003f26 <__udivmoddi4+0x122>
1a003f20:	4299      	cmp	r1, r3
1a003f22:	f200 80cd 	bhi.w	1a0040c0 <__udivmoddi4+0x2bc>
1a003f26:	4684      	mov	ip, r0
1a003f28:	1a59      	subs	r1, r3, r1
1a003f2a:	b2a3      	uxth	r3, r4
1a003f2c:	fbb1 f0fe 	udiv	r0, r1, lr
1a003f30:	fb0e 1410 	mls	r4, lr, r0, r1
1a003f34:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
1a003f38:	fb08 f800 	mul.w	r8, r8, r0
1a003f3c:	45a0      	cmp	r8, r4
1a003f3e:	d907      	bls.n	1a003f50 <__udivmoddi4+0x14c>
1a003f40:	192c      	adds	r4, r5, r4
1a003f42:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
1a003f46:	d202      	bcs.n	1a003f4e <__udivmoddi4+0x14a>
1a003f48:	45a0      	cmp	r8, r4
1a003f4a:	f200 80b6 	bhi.w	1a0040ba <__udivmoddi4+0x2b6>
1a003f4e:	4618      	mov	r0, r3
1a003f50:	eba4 0408 	sub.w	r4, r4, r8
1a003f54:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
1a003f58:	e79f      	b.n	1a003e9a <__udivmoddi4+0x96>
1a003f5a:	f1c7 0c20 	rsb	ip, r7, #32
1a003f5e:	40bb      	lsls	r3, r7
1a003f60:	fa22 fe0c 	lsr.w	lr, r2, ip
1a003f64:	ea4e 0e03 	orr.w	lr, lr, r3
1a003f68:	fa01 f407 	lsl.w	r4, r1, r7
1a003f6c:	fa20 f50c 	lsr.w	r5, r0, ip
1a003f70:	fa21 f30c 	lsr.w	r3, r1, ip
1a003f74:	ea4f 481e 	mov.w	r8, lr, lsr #16
1a003f78:	4325      	orrs	r5, r4
1a003f7a:	fbb3 f9f8 	udiv	r9, r3, r8
1a003f7e:	0c2c      	lsrs	r4, r5, #16
1a003f80:	fb08 3319 	mls	r3, r8, r9, r3
1a003f84:	fa1f fa8e 	uxth.w	sl, lr
1a003f88:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
1a003f8c:	fb09 f40a 	mul.w	r4, r9, sl
1a003f90:	429c      	cmp	r4, r3
1a003f92:	fa02 f207 	lsl.w	r2, r2, r7
1a003f96:	fa00 f107 	lsl.w	r1, r0, r7
1a003f9a:	d90b      	bls.n	1a003fb4 <__udivmoddi4+0x1b0>
1a003f9c:	eb1e 0303 	adds.w	r3, lr, r3
1a003fa0:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
1a003fa4:	f080 8087 	bcs.w	1a0040b6 <__udivmoddi4+0x2b2>
1a003fa8:	429c      	cmp	r4, r3
1a003faa:	f240 8084 	bls.w	1a0040b6 <__udivmoddi4+0x2b2>
1a003fae:	f1a9 0902 	sub.w	r9, r9, #2
1a003fb2:	4473      	add	r3, lr
1a003fb4:	1b1b      	subs	r3, r3, r4
1a003fb6:	b2ad      	uxth	r5, r5
1a003fb8:	fbb3 f0f8 	udiv	r0, r3, r8
1a003fbc:	fb08 3310 	mls	r3, r8, r0, r3
1a003fc0:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
1a003fc4:	fb00 fa0a 	mul.w	sl, r0, sl
1a003fc8:	45a2      	cmp	sl, r4
1a003fca:	d908      	bls.n	1a003fde <__udivmoddi4+0x1da>
1a003fcc:	eb1e 0404 	adds.w	r4, lr, r4
1a003fd0:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
1a003fd4:	d26b      	bcs.n	1a0040ae <__udivmoddi4+0x2aa>
1a003fd6:	45a2      	cmp	sl, r4
1a003fd8:	d969      	bls.n	1a0040ae <__udivmoddi4+0x2aa>
1a003fda:	3802      	subs	r0, #2
1a003fdc:	4474      	add	r4, lr
1a003fde:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
1a003fe2:	fba0 8902 	umull	r8, r9, r0, r2
1a003fe6:	eba4 040a 	sub.w	r4, r4, sl
1a003fea:	454c      	cmp	r4, r9
1a003fec:	46c2      	mov	sl, r8
1a003fee:	464b      	mov	r3, r9
1a003ff0:	d354      	bcc.n	1a00409c <__udivmoddi4+0x298>
1a003ff2:	d051      	beq.n	1a004098 <__udivmoddi4+0x294>
1a003ff4:	2e00      	cmp	r6, #0
1a003ff6:	d069      	beq.n	1a0040cc <__udivmoddi4+0x2c8>
1a003ff8:	ebb1 050a 	subs.w	r5, r1, sl
1a003ffc:	eb64 0403 	sbc.w	r4, r4, r3
1a004000:	fa04 fc0c 	lsl.w	ip, r4, ip
1a004004:	40fd      	lsrs	r5, r7
1a004006:	40fc      	lsrs	r4, r7
1a004008:	ea4c 0505 	orr.w	r5, ip, r5
1a00400c:	e9c6 5400 	strd	r5, r4, [r6]
1a004010:	2700      	movs	r7, #0
1a004012:	e747      	b.n	1a003ea4 <__udivmoddi4+0xa0>
1a004014:	f1c2 0320 	rsb	r3, r2, #32
1a004018:	fa20 f703 	lsr.w	r7, r0, r3
1a00401c:	4095      	lsls	r5, r2
1a00401e:	fa01 f002 	lsl.w	r0, r1, r2
1a004022:	fa21 f303 	lsr.w	r3, r1, r3
1a004026:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a00402a:	4338      	orrs	r0, r7
1a00402c:	0c01      	lsrs	r1, r0, #16
1a00402e:	fbb3 f7fe 	udiv	r7, r3, lr
1a004032:	fa1f f885 	uxth.w	r8, r5
1a004036:	fb0e 3317 	mls	r3, lr, r7, r3
1a00403a:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
1a00403e:	fb07 f308 	mul.w	r3, r7, r8
1a004042:	428b      	cmp	r3, r1
1a004044:	fa04 f402 	lsl.w	r4, r4, r2
1a004048:	d907      	bls.n	1a00405a <__udivmoddi4+0x256>
1a00404a:	1869      	adds	r1, r5, r1
1a00404c:	f107 3cff 	add.w	ip, r7, #4294967295	; 0xffffffff
1a004050:	d22f      	bcs.n	1a0040b2 <__udivmoddi4+0x2ae>
1a004052:	428b      	cmp	r3, r1
1a004054:	d92d      	bls.n	1a0040b2 <__udivmoddi4+0x2ae>
1a004056:	3f02      	subs	r7, #2
1a004058:	4429      	add	r1, r5
1a00405a:	1acb      	subs	r3, r1, r3
1a00405c:	b281      	uxth	r1, r0
1a00405e:	fbb3 f0fe 	udiv	r0, r3, lr
1a004062:	fb0e 3310 	mls	r3, lr, r0, r3
1a004066:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
1a00406a:	fb00 f308 	mul.w	r3, r0, r8
1a00406e:	428b      	cmp	r3, r1
1a004070:	d907      	bls.n	1a004082 <__udivmoddi4+0x27e>
1a004072:	1869      	adds	r1, r5, r1
1a004074:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
1a004078:	d217      	bcs.n	1a0040aa <__udivmoddi4+0x2a6>
1a00407a:	428b      	cmp	r3, r1
1a00407c:	d915      	bls.n	1a0040aa <__udivmoddi4+0x2a6>
1a00407e:	3802      	subs	r0, #2
1a004080:	4429      	add	r1, r5
1a004082:	1ac9      	subs	r1, r1, r3
1a004084:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
1a004088:	e73b      	b.n	1a003f02 <__udivmoddi4+0xfe>
1a00408a:	4637      	mov	r7, r6
1a00408c:	4630      	mov	r0, r6
1a00408e:	e709      	b.n	1a003ea4 <__udivmoddi4+0xa0>
1a004090:	4607      	mov	r7, r0
1a004092:	e6e7      	b.n	1a003e64 <__udivmoddi4+0x60>
1a004094:	4618      	mov	r0, r3
1a004096:	e6fb      	b.n	1a003e90 <__udivmoddi4+0x8c>
1a004098:	4541      	cmp	r1, r8
1a00409a:	d2ab      	bcs.n	1a003ff4 <__udivmoddi4+0x1f0>
1a00409c:	ebb8 0a02 	subs.w	sl, r8, r2
1a0040a0:	eb69 020e 	sbc.w	r2, r9, lr
1a0040a4:	3801      	subs	r0, #1
1a0040a6:	4613      	mov	r3, r2
1a0040a8:	e7a4      	b.n	1a003ff4 <__udivmoddi4+0x1f0>
1a0040aa:	4660      	mov	r0, ip
1a0040ac:	e7e9      	b.n	1a004082 <__udivmoddi4+0x27e>
1a0040ae:	4618      	mov	r0, r3
1a0040b0:	e795      	b.n	1a003fde <__udivmoddi4+0x1da>
1a0040b2:	4667      	mov	r7, ip
1a0040b4:	e7d1      	b.n	1a00405a <__udivmoddi4+0x256>
1a0040b6:	4681      	mov	r9, r0
1a0040b8:	e77c      	b.n	1a003fb4 <__udivmoddi4+0x1b0>
1a0040ba:	3802      	subs	r0, #2
1a0040bc:	442c      	add	r4, r5
1a0040be:	e747      	b.n	1a003f50 <__udivmoddi4+0x14c>
1a0040c0:	f1ac 0c02 	sub.w	ip, ip, #2
1a0040c4:	442b      	add	r3, r5
1a0040c6:	e72f      	b.n	1a003f28 <__udivmoddi4+0x124>
1a0040c8:	4638      	mov	r0, r7
1a0040ca:	e708      	b.n	1a003ede <__udivmoddi4+0xda>
1a0040cc:	4637      	mov	r7, r6
1a0040ce:	e6e9      	b.n	1a003ea4 <__udivmoddi4+0xa0>

1a0040d0 <__aeabi_idiv0>:
1a0040d0:	4770      	bx	lr
1a0040d2:	bf00      	nop

1a0040d4 <__libc_init_array>:
1a0040d4:	b570      	push	{r4, r5, r6, lr}
1a0040d6:	4e0d      	ldr	r6, [pc, #52]	; (1a00410c <__libc_init_array+0x38>)
1a0040d8:	4c0d      	ldr	r4, [pc, #52]	; (1a004110 <__libc_init_array+0x3c>)
1a0040da:	1ba4      	subs	r4, r4, r6
1a0040dc:	10a4      	asrs	r4, r4, #2
1a0040de:	2500      	movs	r5, #0
1a0040e0:	42a5      	cmp	r5, r4
1a0040e2:	d109      	bne.n	1a0040f8 <__libc_init_array+0x24>
1a0040e4:	4e0b      	ldr	r6, [pc, #44]	; (1a004114 <__libc_init_array+0x40>)
1a0040e6:	4c0c      	ldr	r4, [pc, #48]	; (1a004118 <__libc_init_array+0x44>)
1a0040e8:	f7fc fcb7 	bl	1a000a5a <_init>
1a0040ec:	1ba4      	subs	r4, r4, r6
1a0040ee:	10a4      	asrs	r4, r4, #2
1a0040f0:	2500      	movs	r5, #0
1a0040f2:	42a5      	cmp	r5, r4
1a0040f4:	d105      	bne.n	1a004102 <__libc_init_array+0x2e>
1a0040f6:	bd70      	pop	{r4, r5, r6, pc}
1a0040f8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
1a0040fc:	4798      	blx	r3
1a0040fe:	3501      	adds	r5, #1
1a004100:	e7ee      	b.n	1a0040e0 <__libc_init_array+0xc>
1a004102:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
1a004106:	4798      	blx	r3
1a004108:	3501      	adds	r5, #1
1a00410a:	e7f2      	b.n	1a0040f2 <__libc_init_array+0x1e>
1a00410c:	1a004e84 	.word	0x1a004e84
1a004110:	1a004e84 	.word	0x1a004e84
1a004114:	1a004e84 	.word	0x1a004e84
1a004118:	1a004e88 	.word	0x1a004e88

1a00411c <memcpy>:
1a00411c:	b510      	push	{r4, lr}
1a00411e:	1e43      	subs	r3, r0, #1
1a004120:	440a      	add	r2, r1
1a004122:	4291      	cmp	r1, r2
1a004124:	d100      	bne.n	1a004128 <memcpy+0xc>
1a004126:	bd10      	pop	{r4, pc}
1a004128:	f811 4b01 	ldrb.w	r4, [r1], #1
1a00412c:	f803 4f01 	strb.w	r4, [r3, #1]!
1a004130:	e7f7      	b.n	1a004122 <memcpy+0x6>

1a004132 <memset>:
1a004132:	4402      	add	r2, r0
1a004134:	4603      	mov	r3, r0
1a004136:	4293      	cmp	r3, r2
1a004138:	d100      	bne.n	1a00413c <memset+0xa>
1a00413a:	4770      	bx	lr
1a00413c:	f803 1b01 	strb.w	r1, [r3], #1
1a004140:	e7f9      	b.n	1a004136 <memset+0x4>
1a004142:	Address 0x000000001a004142 is out of bounds.


1a004144 <siprintf>:
1a004144:	b40e      	push	{r1, r2, r3}
1a004146:	b500      	push	{lr}
1a004148:	b09c      	sub	sp, #112	; 0x70
1a00414a:	ab1d      	add	r3, sp, #116	; 0x74
1a00414c:	9002      	str	r0, [sp, #8]
1a00414e:	9006      	str	r0, [sp, #24]
1a004150:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
1a004154:	4809      	ldr	r0, [pc, #36]	; (1a00417c <siprintf+0x38>)
1a004156:	9107      	str	r1, [sp, #28]
1a004158:	9104      	str	r1, [sp, #16]
1a00415a:	4909      	ldr	r1, [pc, #36]	; (1a004180 <siprintf+0x3c>)
1a00415c:	f853 2b04 	ldr.w	r2, [r3], #4
1a004160:	9105      	str	r1, [sp, #20]
1a004162:	6800      	ldr	r0, [r0, #0]
1a004164:	9301      	str	r3, [sp, #4]
1a004166:	a902      	add	r1, sp, #8
1a004168:	f000 f92c 	bl	1a0043c4 <_svfiprintf_r>
1a00416c:	9b02      	ldr	r3, [sp, #8]
1a00416e:	2200      	movs	r2, #0
1a004170:	701a      	strb	r2, [r3, #0]
1a004172:	b01c      	add	sp, #112	; 0x70
1a004174:	f85d eb04 	ldr.w	lr, [sp], #4
1a004178:	b003      	add	sp, #12
1a00417a:	4770      	bx	lr
1a00417c:	10000090 	.word	0x10000090
1a004180:	ffff0208 	.word	0xffff0208

1a004184 <strchr>:
1a004184:	b2c9      	uxtb	r1, r1
1a004186:	4603      	mov	r3, r0
1a004188:	f810 2b01 	ldrb.w	r2, [r0], #1
1a00418c:	b11a      	cbz	r2, 1a004196 <strchr+0x12>
1a00418e:	428a      	cmp	r2, r1
1a004190:	d1f9      	bne.n	1a004186 <strchr+0x2>
1a004192:	4618      	mov	r0, r3
1a004194:	4770      	bx	lr
1a004196:	2900      	cmp	r1, #0
1a004198:	bf18      	it	ne
1a00419a:	2300      	movne	r3, #0
1a00419c:	e7f9      	b.n	1a004192 <strchr+0xe>

1a00419e <strcpy>:
1a00419e:	4603      	mov	r3, r0
1a0041a0:	f811 2b01 	ldrb.w	r2, [r1], #1
1a0041a4:	f803 2b01 	strb.w	r2, [r3], #1
1a0041a8:	2a00      	cmp	r2, #0
1a0041aa:	d1f9      	bne.n	1a0041a0 <strcpy+0x2>
1a0041ac:	4770      	bx	lr

1a0041ae <strlen>:
1a0041ae:	4603      	mov	r3, r0
1a0041b0:	f813 2b01 	ldrb.w	r2, [r3], #1
1a0041b4:	2a00      	cmp	r2, #0
1a0041b6:	d1fb      	bne.n	1a0041b0 <strlen+0x2>
1a0041b8:	1a18      	subs	r0, r3, r0
1a0041ba:	3801      	subs	r0, #1
1a0041bc:	4770      	bx	lr
1a0041be:	Address 0x000000001a0041be is out of bounds.


1a0041c0 <_free_r>:
1a0041c0:	b538      	push	{r3, r4, r5, lr}
1a0041c2:	4605      	mov	r5, r0
1a0041c4:	2900      	cmp	r1, #0
1a0041c6:	d045      	beq.n	1a004254 <_free_r+0x94>
1a0041c8:	f851 3c04 	ldr.w	r3, [r1, #-4]
1a0041cc:	1f0c      	subs	r4, r1, #4
1a0041ce:	2b00      	cmp	r3, #0
1a0041d0:	bfb8      	it	lt
1a0041d2:	18e4      	addlt	r4, r4, r3
1a0041d4:	f000 fbe5 	bl	1a0049a2 <__malloc_lock>
1a0041d8:	4a1f      	ldr	r2, [pc, #124]	; (1a004258 <_free_r+0x98>)
1a0041da:	6813      	ldr	r3, [r2, #0]
1a0041dc:	4610      	mov	r0, r2
1a0041de:	b933      	cbnz	r3, 1a0041ee <_free_r+0x2e>
1a0041e0:	6063      	str	r3, [r4, #4]
1a0041e2:	6014      	str	r4, [r2, #0]
1a0041e4:	4628      	mov	r0, r5
1a0041e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1a0041ea:	f000 bbdb 	b.w	1a0049a4 <__malloc_unlock>
1a0041ee:	42a3      	cmp	r3, r4
1a0041f0:	d90c      	bls.n	1a00420c <_free_r+0x4c>
1a0041f2:	6821      	ldr	r1, [r4, #0]
1a0041f4:	1862      	adds	r2, r4, r1
1a0041f6:	4293      	cmp	r3, r2
1a0041f8:	bf04      	itt	eq
1a0041fa:	681a      	ldreq	r2, [r3, #0]
1a0041fc:	685b      	ldreq	r3, [r3, #4]
1a0041fe:	6063      	str	r3, [r4, #4]
1a004200:	bf04      	itt	eq
1a004202:	1852      	addeq	r2, r2, r1
1a004204:	6022      	streq	r2, [r4, #0]
1a004206:	6004      	str	r4, [r0, #0]
1a004208:	e7ec      	b.n	1a0041e4 <_free_r+0x24>
1a00420a:	4613      	mov	r3, r2
1a00420c:	685a      	ldr	r2, [r3, #4]
1a00420e:	b10a      	cbz	r2, 1a004214 <_free_r+0x54>
1a004210:	42a2      	cmp	r2, r4
1a004212:	d9fa      	bls.n	1a00420a <_free_r+0x4a>
1a004214:	6819      	ldr	r1, [r3, #0]
1a004216:	1858      	adds	r0, r3, r1
1a004218:	42a0      	cmp	r0, r4
1a00421a:	d10b      	bne.n	1a004234 <_free_r+0x74>
1a00421c:	6820      	ldr	r0, [r4, #0]
1a00421e:	4401      	add	r1, r0
1a004220:	1858      	adds	r0, r3, r1
1a004222:	4282      	cmp	r2, r0
1a004224:	6019      	str	r1, [r3, #0]
1a004226:	d1dd      	bne.n	1a0041e4 <_free_r+0x24>
1a004228:	6810      	ldr	r0, [r2, #0]
1a00422a:	6852      	ldr	r2, [r2, #4]
1a00422c:	605a      	str	r2, [r3, #4]
1a00422e:	4401      	add	r1, r0
1a004230:	6019      	str	r1, [r3, #0]
1a004232:	e7d7      	b.n	1a0041e4 <_free_r+0x24>
1a004234:	d902      	bls.n	1a00423c <_free_r+0x7c>
1a004236:	230c      	movs	r3, #12
1a004238:	602b      	str	r3, [r5, #0]
1a00423a:	e7d3      	b.n	1a0041e4 <_free_r+0x24>
1a00423c:	6820      	ldr	r0, [r4, #0]
1a00423e:	1821      	adds	r1, r4, r0
1a004240:	428a      	cmp	r2, r1
1a004242:	bf04      	itt	eq
1a004244:	6811      	ldreq	r1, [r2, #0]
1a004246:	6852      	ldreq	r2, [r2, #4]
1a004248:	6062      	str	r2, [r4, #4]
1a00424a:	bf04      	itt	eq
1a00424c:	1809      	addeq	r1, r1, r0
1a00424e:	6021      	streq	r1, [r4, #0]
1a004250:	605c      	str	r4, [r3, #4]
1a004252:	e7c7      	b.n	1a0041e4 <_free_r+0x24>
1a004254:	bd38      	pop	{r3, r4, r5, pc}
1a004256:	bf00      	nop
1a004258:	10002fa0 	.word	0x10002fa0

1a00425c <_malloc_r>:
1a00425c:	b570      	push	{r4, r5, r6, lr}
1a00425e:	1ccd      	adds	r5, r1, #3
1a004260:	f025 0503 	bic.w	r5, r5, #3
1a004264:	3508      	adds	r5, #8
1a004266:	2d0c      	cmp	r5, #12
1a004268:	bf38      	it	cc
1a00426a:	250c      	movcc	r5, #12
1a00426c:	2d00      	cmp	r5, #0
1a00426e:	4606      	mov	r6, r0
1a004270:	db01      	blt.n	1a004276 <_malloc_r+0x1a>
1a004272:	42a9      	cmp	r1, r5
1a004274:	d903      	bls.n	1a00427e <_malloc_r+0x22>
1a004276:	230c      	movs	r3, #12
1a004278:	6033      	str	r3, [r6, #0]
1a00427a:	2000      	movs	r0, #0
1a00427c:	bd70      	pop	{r4, r5, r6, pc}
1a00427e:	f000 fb90 	bl	1a0049a2 <__malloc_lock>
1a004282:	4a21      	ldr	r2, [pc, #132]	; (1a004308 <_malloc_r+0xac>)
1a004284:	6814      	ldr	r4, [r2, #0]
1a004286:	4621      	mov	r1, r4
1a004288:	b991      	cbnz	r1, 1a0042b0 <_malloc_r+0x54>
1a00428a:	4c20      	ldr	r4, [pc, #128]	; (1a00430c <_malloc_r+0xb0>)
1a00428c:	6823      	ldr	r3, [r4, #0]
1a00428e:	b91b      	cbnz	r3, 1a004298 <_malloc_r+0x3c>
1a004290:	4630      	mov	r0, r6
1a004292:	f7fc fbe3 	bl	1a000a5c <_sbrk_r>
1a004296:	6020      	str	r0, [r4, #0]
1a004298:	4629      	mov	r1, r5
1a00429a:	4630      	mov	r0, r6
1a00429c:	f7fc fbde 	bl	1a000a5c <_sbrk_r>
1a0042a0:	1c43      	adds	r3, r0, #1
1a0042a2:	d124      	bne.n	1a0042ee <_malloc_r+0x92>
1a0042a4:	230c      	movs	r3, #12
1a0042a6:	6033      	str	r3, [r6, #0]
1a0042a8:	4630      	mov	r0, r6
1a0042aa:	f000 fb7b 	bl	1a0049a4 <__malloc_unlock>
1a0042ae:	e7e4      	b.n	1a00427a <_malloc_r+0x1e>
1a0042b0:	680b      	ldr	r3, [r1, #0]
1a0042b2:	1b5b      	subs	r3, r3, r5
1a0042b4:	d418      	bmi.n	1a0042e8 <_malloc_r+0x8c>
1a0042b6:	2b0b      	cmp	r3, #11
1a0042b8:	d90f      	bls.n	1a0042da <_malloc_r+0x7e>
1a0042ba:	600b      	str	r3, [r1, #0]
1a0042bc:	50cd      	str	r5, [r1, r3]
1a0042be:	18cc      	adds	r4, r1, r3
1a0042c0:	4630      	mov	r0, r6
1a0042c2:	f000 fb6f 	bl	1a0049a4 <__malloc_unlock>
1a0042c6:	f104 000b 	add.w	r0, r4, #11
1a0042ca:	1d23      	adds	r3, r4, #4
1a0042cc:	f020 0007 	bic.w	r0, r0, #7
1a0042d0:	1ac3      	subs	r3, r0, r3
1a0042d2:	d0d3      	beq.n	1a00427c <_malloc_r+0x20>
1a0042d4:	425a      	negs	r2, r3
1a0042d6:	50e2      	str	r2, [r4, r3]
1a0042d8:	e7d0      	b.n	1a00427c <_malloc_r+0x20>
1a0042da:	428c      	cmp	r4, r1
1a0042dc:	684b      	ldr	r3, [r1, #4]
1a0042de:	bf16      	itet	ne
1a0042e0:	6063      	strne	r3, [r4, #4]
1a0042e2:	6013      	streq	r3, [r2, #0]
1a0042e4:	460c      	movne	r4, r1
1a0042e6:	e7eb      	b.n	1a0042c0 <_malloc_r+0x64>
1a0042e8:	460c      	mov	r4, r1
1a0042ea:	6849      	ldr	r1, [r1, #4]
1a0042ec:	e7cc      	b.n	1a004288 <_malloc_r+0x2c>
1a0042ee:	1cc4      	adds	r4, r0, #3
1a0042f0:	f024 0403 	bic.w	r4, r4, #3
1a0042f4:	42a0      	cmp	r0, r4
1a0042f6:	d005      	beq.n	1a004304 <_malloc_r+0xa8>
1a0042f8:	1a21      	subs	r1, r4, r0
1a0042fa:	4630      	mov	r0, r6
1a0042fc:	f7fc fbae 	bl	1a000a5c <_sbrk_r>
1a004300:	3001      	adds	r0, #1
1a004302:	d0cf      	beq.n	1a0042a4 <_malloc_r+0x48>
1a004304:	6025      	str	r5, [r4, #0]
1a004306:	e7db      	b.n	1a0042c0 <_malloc_r+0x64>
1a004308:	10002fa0 	.word	0x10002fa0
1a00430c:	10002fa4 	.word	0x10002fa4

1a004310 <__ssputs_r>:
1a004310:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1a004314:	688e      	ldr	r6, [r1, #8]
1a004316:	429e      	cmp	r6, r3
1a004318:	4682      	mov	sl, r0
1a00431a:	460c      	mov	r4, r1
1a00431c:	4690      	mov	r8, r2
1a00431e:	4699      	mov	r9, r3
1a004320:	d837      	bhi.n	1a004392 <__ssputs_r+0x82>
1a004322:	898a      	ldrh	r2, [r1, #12]
1a004324:	f412 6f90 	tst.w	r2, #1152	; 0x480
1a004328:	d031      	beq.n	1a00438e <__ssputs_r+0x7e>
1a00432a:	6825      	ldr	r5, [r4, #0]
1a00432c:	6909      	ldr	r1, [r1, #16]
1a00432e:	1a6f      	subs	r7, r5, r1
1a004330:	6965      	ldr	r5, [r4, #20]
1a004332:	2302      	movs	r3, #2
1a004334:	eb05 0545 	add.w	r5, r5, r5, lsl #1
1a004338:	fb95 f5f3 	sdiv	r5, r5, r3
1a00433c:	f109 0301 	add.w	r3, r9, #1
1a004340:	443b      	add	r3, r7
1a004342:	429d      	cmp	r5, r3
1a004344:	bf38      	it	cc
1a004346:	461d      	movcc	r5, r3
1a004348:	0553      	lsls	r3, r2, #21
1a00434a:	d530      	bpl.n	1a0043ae <__ssputs_r+0x9e>
1a00434c:	4629      	mov	r1, r5
1a00434e:	f7ff ff85 	bl	1a00425c <_malloc_r>
1a004352:	4606      	mov	r6, r0
1a004354:	b950      	cbnz	r0, 1a00436c <__ssputs_r+0x5c>
1a004356:	230c      	movs	r3, #12
1a004358:	f8ca 3000 	str.w	r3, [sl]
1a00435c:	89a3      	ldrh	r3, [r4, #12]
1a00435e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a004362:	81a3      	strh	r3, [r4, #12]
1a004364:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a004368:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a00436c:	463a      	mov	r2, r7
1a00436e:	6921      	ldr	r1, [r4, #16]
1a004370:	f7ff fed4 	bl	1a00411c <memcpy>
1a004374:	89a3      	ldrh	r3, [r4, #12]
1a004376:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
1a00437a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a00437e:	81a3      	strh	r3, [r4, #12]
1a004380:	6126      	str	r6, [r4, #16]
1a004382:	6165      	str	r5, [r4, #20]
1a004384:	443e      	add	r6, r7
1a004386:	1bed      	subs	r5, r5, r7
1a004388:	6026      	str	r6, [r4, #0]
1a00438a:	60a5      	str	r5, [r4, #8]
1a00438c:	464e      	mov	r6, r9
1a00438e:	454e      	cmp	r6, r9
1a004390:	d900      	bls.n	1a004394 <__ssputs_r+0x84>
1a004392:	464e      	mov	r6, r9
1a004394:	4632      	mov	r2, r6
1a004396:	4641      	mov	r1, r8
1a004398:	6820      	ldr	r0, [r4, #0]
1a00439a:	f000 fae9 	bl	1a004970 <memmove>
1a00439e:	68a3      	ldr	r3, [r4, #8]
1a0043a0:	1b9b      	subs	r3, r3, r6
1a0043a2:	60a3      	str	r3, [r4, #8]
1a0043a4:	6823      	ldr	r3, [r4, #0]
1a0043a6:	441e      	add	r6, r3
1a0043a8:	6026      	str	r6, [r4, #0]
1a0043aa:	2000      	movs	r0, #0
1a0043ac:	e7dc      	b.n	1a004368 <__ssputs_r+0x58>
1a0043ae:	462a      	mov	r2, r5
1a0043b0:	f000 faf9 	bl	1a0049a6 <_realloc_r>
1a0043b4:	4606      	mov	r6, r0
1a0043b6:	2800      	cmp	r0, #0
1a0043b8:	d1e2      	bne.n	1a004380 <__ssputs_r+0x70>
1a0043ba:	6921      	ldr	r1, [r4, #16]
1a0043bc:	4650      	mov	r0, sl
1a0043be:	f7ff feff 	bl	1a0041c0 <_free_r>
1a0043c2:	e7c8      	b.n	1a004356 <__ssputs_r+0x46>

1a0043c4 <_svfiprintf_r>:
1a0043c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a0043c8:	461d      	mov	r5, r3
1a0043ca:	898b      	ldrh	r3, [r1, #12]
1a0043cc:	061f      	lsls	r7, r3, #24
1a0043ce:	b09d      	sub	sp, #116	; 0x74
1a0043d0:	4680      	mov	r8, r0
1a0043d2:	460c      	mov	r4, r1
1a0043d4:	4616      	mov	r6, r2
1a0043d6:	d50f      	bpl.n	1a0043f8 <_svfiprintf_r+0x34>
1a0043d8:	690b      	ldr	r3, [r1, #16]
1a0043da:	b96b      	cbnz	r3, 1a0043f8 <_svfiprintf_r+0x34>
1a0043dc:	2140      	movs	r1, #64	; 0x40
1a0043de:	f7ff ff3d 	bl	1a00425c <_malloc_r>
1a0043e2:	6020      	str	r0, [r4, #0]
1a0043e4:	6120      	str	r0, [r4, #16]
1a0043e6:	b928      	cbnz	r0, 1a0043f4 <_svfiprintf_r+0x30>
1a0043e8:	230c      	movs	r3, #12
1a0043ea:	f8c8 3000 	str.w	r3, [r8]
1a0043ee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a0043f2:	e0c8      	b.n	1a004586 <_svfiprintf_r+0x1c2>
1a0043f4:	2340      	movs	r3, #64	; 0x40
1a0043f6:	6163      	str	r3, [r4, #20]
1a0043f8:	2300      	movs	r3, #0
1a0043fa:	9309      	str	r3, [sp, #36]	; 0x24
1a0043fc:	2320      	movs	r3, #32
1a0043fe:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
1a004402:	2330      	movs	r3, #48	; 0x30
1a004404:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
1a004408:	9503      	str	r5, [sp, #12]
1a00440a:	f04f 0b01 	mov.w	fp, #1
1a00440e:	4637      	mov	r7, r6
1a004410:	463d      	mov	r5, r7
1a004412:	f815 3b01 	ldrb.w	r3, [r5], #1
1a004416:	b10b      	cbz	r3, 1a00441c <_svfiprintf_r+0x58>
1a004418:	2b25      	cmp	r3, #37	; 0x25
1a00441a:	d13e      	bne.n	1a00449a <_svfiprintf_r+0xd6>
1a00441c:	ebb7 0a06 	subs.w	sl, r7, r6
1a004420:	d00b      	beq.n	1a00443a <_svfiprintf_r+0x76>
1a004422:	4653      	mov	r3, sl
1a004424:	4632      	mov	r2, r6
1a004426:	4621      	mov	r1, r4
1a004428:	4640      	mov	r0, r8
1a00442a:	f7ff ff71 	bl	1a004310 <__ssputs_r>
1a00442e:	3001      	adds	r0, #1
1a004430:	f000 80a4 	beq.w	1a00457c <_svfiprintf_r+0x1b8>
1a004434:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a004436:	4453      	add	r3, sl
1a004438:	9309      	str	r3, [sp, #36]	; 0x24
1a00443a:	783b      	ldrb	r3, [r7, #0]
1a00443c:	2b00      	cmp	r3, #0
1a00443e:	f000 809d 	beq.w	1a00457c <_svfiprintf_r+0x1b8>
1a004442:	2300      	movs	r3, #0
1a004444:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
1a004448:	e9cd 2305 	strd	r2, r3, [sp, #20]
1a00444c:	9304      	str	r3, [sp, #16]
1a00444e:	9307      	str	r3, [sp, #28]
1a004450:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
1a004454:	931a      	str	r3, [sp, #104]	; 0x68
1a004456:	462f      	mov	r7, r5
1a004458:	2205      	movs	r2, #5
1a00445a:	f817 1b01 	ldrb.w	r1, [r7], #1
1a00445e:	4850      	ldr	r0, [pc, #320]	; (1a0045a0 <_svfiprintf_r+0x1dc>)
1a004460:	f000 fa36 	bl	1a0048d0 <memchr>
1a004464:	9b04      	ldr	r3, [sp, #16]
1a004466:	b9d0      	cbnz	r0, 1a00449e <_svfiprintf_r+0xda>
1a004468:	06d9      	lsls	r1, r3, #27
1a00446a:	bf44      	itt	mi
1a00446c:	2220      	movmi	r2, #32
1a00446e:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
1a004472:	071a      	lsls	r2, r3, #28
1a004474:	bf44      	itt	mi
1a004476:	222b      	movmi	r2, #43	; 0x2b
1a004478:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
1a00447c:	782a      	ldrb	r2, [r5, #0]
1a00447e:	2a2a      	cmp	r2, #42	; 0x2a
1a004480:	d015      	beq.n	1a0044ae <_svfiprintf_r+0xea>
1a004482:	9a07      	ldr	r2, [sp, #28]
1a004484:	462f      	mov	r7, r5
1a004486:	2000      	movs	r0, #0
1a004488:	250a      	movs	r5, #10
1a00448a:	4639      	mov	r1, r7
1a00448c:	f811 3b01 	ldrb.w	r3, [r1], #1
1a004490:	3b30      	subs	r3, #48	; 0x30
1a004492:	2b09      	cmp	r3, #9
1a004494:	d94d      	bls.n	1a004532 <_svfiprintf_r+0x16e>
1a004496:	b1b8      	cbz	r0, 1a0044c8 <_svfiprintf_r+0x104>
1a004498:	e00f      	b.n	1a0044ba <_svfiprintf_r+0xf6>
1a00449a:	462f      	mov	r7, r5
1a00449c:	e7b8      	b.n	1a004410 <_svfiprintf_r+0x4c>
1a00449e:	4a40      	ldr	r2, [pc, #256]	; (1a0045a0 <_svfiprintf_r+0x1dc>)
1a0044a0:	1a80      	subs	r0, r0, r2
1a0044a2:	fa0b f000 	lsl.w	r0, fp, r0
1a0044a6:	4318      	orrs	r0, r3
1a0044a8:	9004      	str	r0, [sp, #16]
1a0044aa:	463d      	mov	r5, r7
1a0044ac:	e7d3      	b.n	1a004456 <_svfiprintf_r+0x92>
1a0044ae:	9a03      	ldr	r2, [sp, #12]
1a0044b0:	1d11      	adds	r1, r2, #4
1a0044b2:	6812      	ldr	r2, [r2, #0]
1a0044b4:	9103      	str	r1, [sp, #12]
1a0044b6:	2a00      	cmp	r2, #0
1a0044b8:	db01      	blt.n	1a0044be <_svfiprintf_r+0xfa>
1a0044ba:	9207      	str	r2, [sp, #28]
1a0044bc:	e004      	b.n	1a0044c8 <_svfiprintf_r+0x104>
1a0044be:	4252      	negs	r2, r2
1a0044c0:	f043 0302 	orr.w	r3, r3, #2
1a0044c4:	9207      	str	r2, [sp, #28]
1a0044c6:	9304      	str	r3, [sp, #16]
1a0044c8:	783b      	ldrb	r3, [r7, #0]
1a0044ca:	2b2e      	cmp	r3, #46	; 0x2e
1a0044cc:	d10c      	bne.n	1a0044e8 <_svfiprintf_r+0x124>
1a0044ce:	787b      	ldrb	r3, [r7, #1]
1a0044d0:	2b2a      	cmp	r3, #42	; 0x2a
1a0044d2:	d133      	bne.n	1a00453c <_svfiprintf_r+0x178>
1a0044d4:	9b03      	ldr	r3, [sp, #12]
1a0044d6:	1d1a      	adds	r2, r3, #4
1a0044d8:	681b      	ldr	r3, [r3, #0]
1a0044da:	9203      	str	r2, [sp, #12]
1a0044dc:	2b00      	cmp	r3, #0
1a0044de:	bfb8      	it	lt
1a0044e0:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
1a0044e4:	3702      	adds	r7, #2
1a0044e6:	9305      	str	r3, [sp, #20]
1a0044e8:	4d2e      	ldr	r5, [pc, #184]	; (1a0045a4 <_svfiprintf_r+0x1e0>)
1a0044ea:	7839      	ldrb	r1, [r7, #0]
1a0044ec:	2203      	movs	r2, #3
1a0044ee:	4628      	mov	r0, r5
1a0044f0:	f000 f9ee 	bl	1a0048d0 <memchr>
1a0044f4:	b138      	cbz	r0, 1a004506 <_svfiprintf_r+0x142>
1a0044f6:	2340      	movs	r3, #64	; 0x40
1a0044f8:	1b40      	subs	r0, r0, r5
1a0044fa:	fa03 f000 	lsl.w	r0, r3, r0
1a0044fe:	9b04      	ldr	r3, [sp, #16]
1a004500:	4303      	orrs	r3, r0
1a004502:	3701      	adds	r7, #1
1a004504:	9304      	str	r3, [sp, #16]
1a004506:	7839      	ldrb	r1, [r7, #0]
1a004508:	4827      	ldr	r0, [pc, #156]	; (1a0045a8 <_svfiprintf_r+0x1e4>)
1a00450a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
1a00450e:	2206      	movs	r2, #6
1a004510:	1c7e      	adds	r6, r7, #1
1a004512:	f000 f9dd 	bl	1a0048d0 <memchr>
1a004516:	2800      	cmp	r0, #0
1a004518:	d038      	beq.n	1a00458c <_svfiprintf_r+0x1c8>
1a00451a:	4b24      	ldr	r3, [pc, #144]	; (1a0045ac <_svfiprintf_r+0x1e8>)
1a00451c:	bb13      	cbnz	r3, 1a004564 <_svfiprintf_r+0x1a0>
1a00451e:	9b03      	ldr	r3, [sp, #12]
1a004520:	3307      	adds	r3, #7
1a004522:	f023 0307 	bic.w	r3, r3, #7
1a004526:	3308      	adds	r3, #8
1a004528:	9303      	str	r3, [sp, #12]
1a00452a:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a00452c:	444b      	add	r3, r9
1a00452e:	9309      	str	r3, [sp, #36]	; 0x24
1a004530:	e76d      	b.n	1a00440e <_svfiprintf_r+0x4a>
1a004532:	fb05 3202 	mla	r2, r5, r2, r3
1a004536:	2001      	movs	r0, #1
1a004538:	460f      	mov	r7, r1
1a00453a:	e7a6      	b.n	1a00448a <_svfiprintf_r+0xc6>
1a00453c:	2300      	movs	r3, #0
1a00453e:	3701      	adds	r7, #1
1a004540:	9305      	str	r3, [sp, #20]
1a004542:	4619      	mov	r1, r3
1a004544:	250a      	movs	r5, #10
1a004546:	4638      	mov	r0, r7
1a004548:	f810 2b01 	ldrb.w	r2, [r0], #1
1a00454c:	3a30      	subs	r2, #48	; 0x30
1a00454e:	2a09      	cmp	r2, #9
1a004550:	d903      	bls.n	1a00455a <_svfiprintf_r+0x196>
1a004552:	2b00      	cmp	r3, #0
1a004554:	d0c8      	beq.n	1a0044e8 <_svfiprintf_r+0x124>
1a004556:	9105      	str	r1, [sp, #20]
1a004558:	e7c6      	b.n	1a0044e8 <_svfiprintf_r+0x124>
1a00455a:	fb05 2101 	mla	r1, r5, r1, r2
1a00455e:	2301      	movs	r3, #1
1a004560:	4607      	mov	r7, r0
1a004562:	e7f0      	b.n	1a004546 <_svfiprintf_r+0x182>
1a004564:	ab03      	add	r3, sp, #12
1a004566:	9300      	str	r3, [sp, #0]
1a004568:	4622      	mov	r2, r4
1a00456a:	4b11      	ldr	r3, [pc, #68]	; (1a0045b0 <_svfiprintf_r+0x1ec>)
1a00456c:	a904      	add	r1, sp, #16
1a00456e:	4640      	mov	r0, r8
1a004570:	f3af 8000 	nop.w
1a004574:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
1a004578:	4681      	mov	r9, r0
1a00457a:	d1d6      	bne.n	1a00452a <_svfiprintf_r+0x166>
1a00457c:	89a3      	ldrh	r3, [r4, #12]
1a00457e:	065b      	lsls	r3, r3, #25
1a004580:	f53f af35 	bmi.w	1a0043ee <_svfiprintf_r+0x2a>
1a004584:	9809      	ldr	r0, [sp, #36]	; 0x24
1a004586:	b01d      	add	sp, #116	; 0x74
1a004588:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a00458c:	ab03      	add	r3, sp, #12
1a00458e:	9300      	str	r3, [sp, #0]
1a004590:	4622      	mov	r2, r4
1a004592:	4b07      	ldr	r3, [pc, #28]	; (1a0045b0 <_svfiprintf_r+0x1ec>)
1a004594:	a904      	add	r1, sp, #16
1a004596:	4640      	mov	r0, r8
1a004598:	f000 f882 	bl	1a0046a0 <_printf_i>
1a00459c:	e7ea      	b.n	1a004574 <_svfiprintf_r+0x1b0>
1a00459e:	bf00      	nop
1a0045a0:	1a004e50 	.word	0x1a004e50
1a0045a4:	1a004e56 	.word	0x1a004e56
1a0045a8:	1a004e5a 	.word	0x1a004e5a
1a0045ac:	00000000 	.word	0x00000000
1a0045b0:	1a004311 	.word	0x1a004311

1a0045b4 <_printf_common>:
1a0045b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1a0045b8:	4691      	mov	r9, r2
1a0045ba:	461f      	mov	r7, r3
1a0045bc:	688a      	ldr	r2, [r1, #8]
1a0045be:	690b      	ldr	r3, [r1, #16]
1a0045c0:	f8dd 8020 	ldr.w	r8, [sp, #32]
1a0045c4:	4293      	cmp	r3, r2
1a0045c6:	bfb8      	it	lt
1a0045c8:	4613      	movlt	r3, r2
1a0045ca:	f8c9 3000 	str.w	r3, [r9]
1a0045ce:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
1a0045d2:	4606      	mov	r6, r0
1a0045d4:	460c      	mov	r4, r1
1a0045d6:	b112      	cbz	r2, 1a0045de <_printf_common+0x2a>
1a0045d8:	3301      	adds	r3, #1
1a0045da:	f8c9 3000 	str.w	r3, [r9]
1a0045de:	6823      	ldr	r3, [r4, #0]
1a0045e0:	0699      	lsls	r1, r3, #26
1a0045e2:	bf42      	ittt	mi
1a0045e4:	f8d9 3000 	ldrmi.w	r3, [r9]
1a0045e8:	3302      	addmi	r3, #2
1a0045ea:	f8c9 3000 	strmi.w	r3, [r9]
1a0045ee:	6825      	ldr	r5, [r4, #0]
1a0045f0:	f015 0506 	ands.w	r5, r5, #6
1a0045f4:	d107      	bne.n	1a004606 <_printf_common+0x52>
1a0045f6:	f104 0a19 	add.w	sl, r4, #25
1a0045fa:	68e3      	ldr	r3, [r4, #12]
1a0045fc:	f8d9 2000 	ldr.w	r2, [r9]
1a004600:	1a9b      	subs	r3, r3, r2
1a004602:	42ab      	cmp	r3, r5
1a004604:	dc28      	bgt.n	1a004658 <_printf_common+0xa4>
1a004606:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
1a00460a:	6822      	ldr	r2, [r4, #0]
1a00460c:	3300      	adds	r3, #0
1a00460e:	bf18      	it	ne
1a004610:	2301      	movne	r3, #1
1a004612:	0692      	lsls	r2, r2, #26
1a004614:	d42d      	bmi.n	1a004672 <_printf_common+0xbe>
1a004616:	f104 0243 	add.w	r2, r4, #67	; 0x43
1a00461a:	4639      	mov	r1, r7
1a00461c:	4630      	mov	r0, r6
1a00461e:	47c0      	blx	r8
1a004620:	3001      	adds	r0, #1
1a004622:	d020      	beq.n	1a004666 <_printf_common+0xb2>
1a004624:	6823      	ldr	r3, [r4, #0]
1a004626:	68e5      	ldr	r5, [r4, #12]
1a004628:	f8d9 2000 	ldr.w	r2, [r9]
1a00462c:	f003 0306 	and.w	r3, r3, #6
1a004630:	2b04      	cmp	r3, #4
1a004632:	bf08      	it	eq
1a004634:	1aad      	subeq	r5, r5, r2
1a004636:	68a3      	ldr	r3, [r4, #8]
1a004638:	6922      	ldr	r2, [r4, #16]
1a00463a:	bf0c      	ite	eq
1a00463c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
1a004640:	2500      	movne	r5, #0
1a004642:	4293      	cmp	r3, r2
1a004644:	bfc4      	itt	gt
1a004646:	1a9b      	subgt	r3, r3, r2
1a004648:	18ed      	addgt	r5, r5, r3
1a00464a:	f04f 0900 	mov.w	r9, #0
1a00464e:	341a      	adds	r4, #26
1a004650:	454d      	cmp	r5, r9
1a004652:	d11a      	bne.n	1a00468a <_printf_common+0xd6>
1a004654:	2000      	movs	r0, #0
1a004656:	e008      	b.n	1a00466a <_printf_common+0xb6>
1a004658:	2301      	movs	r3, #1
1a00465a:	4652      	mov	r2, sl
1a00465c:	4639      	mov	r1, r7
1a00465e:	4630      	mov	r0, r6
1a004660:	47c0      	blx	r8
1a004662:	3001      	adds	r0, #1
1a004664:	d103      	bne.n	1a00466e <_printf_common+0xba>
1a004666:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a00466a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a00466e:	3501      	adds	r5, #1
1a004670:	e7c3      	b.n	1a0045fa <_printf_common+0x46>
1a004672:	18e1      	adds	r1, r4, r3
1a004674:	1c5a      	adds	r2, r3, #1
1a004676:	2030      	movs	r0, #48	; 0x30
1a004678:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
1a00467c:	4422      	add	r2, r4
1a00467e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
1a004682:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
1a004686:	3302      	adds	r3, #2
1a004688:	e7c5      	b.n	1a004616 <_printf_common+0x62>
1a00468a:	2301      	movs	r3, #1
1a00468c:	4622      	mov	r2, r4
1a00468e:	4639      	mov	r1, r7
1a004690:	4630      	mov	r0, r6
1a004692:	47c0      	blx	r8
1a004694:	3001      	adds	r0, #1
1a004696:	d0e6      	beq.n	1a004666 <_printf_common+0xb2>
1a004698:	f109 0901 	add.w	r9, r9, #1
1a00469c:	e7d8      	b.n	1a004650 <_printf_common+0x9c>
1a00469e:	Address 0x000000001a00469e is out of bounds.


1a0046a0 <_printf_i>:
1a0046a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1a0046a4:	f101 0c43 	add.w	ip, r1, #67	; 0x43
1a0046a8:	460c      	mov	r4, r1
1a0046aa:	7e09      	ldrb	r1, [r1, #24]
1a0046ac:	b085      	sub	sp, #20
1a0046ae:	296e      	cmp	r1, #110	; 0x6e
1a0046b0:	4617      	mov	r7, r2
1a0046b2:	4606      	mov	r6, r0
1a0046b4:	4698      	mov	r8, r3
1a0046b6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1a0046b8:	f000 80b3 	beq.w	1a004822 <_printf_i+0x182>
1a0046bc:	d822      	bhi.n	1a004704 <_printf_i+0x64>
1a0046be:	2963      	cmp	r1, #99	; 0x63
1a0046c0:	d036      	beq.n	1a004730 <_printf_i+0x90>
1a0046c2:	d80a      	bhi.n	1a0046da <_printf_i+0x3a>
1a0046c4:	2900      	cmp	r1, #0
1a0046c6:	f000 80b9 	beq.w	1a00483c <_printf_i+0x19c>
1a0046ca:	2958      	cmp	r1, #88	; 0x58
1a0046cc:	f000 8083 	beq.w	1a0047d6 <_printf_i+0x136>
1a0046d0:	f104 0542 	add.w	r5, r4, #66	; 0x42
1a0046d4:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
1a0046d8:	e032      	b.n	1a004740 <_printf_i+0xa0>
1a0046da:	2964      	cmp	r1, #100	; 0x64
1a0046dc:	d001      	beq.n	1a0046e2 <_printf_i+0x42>
1a0046de:	2969      	cmp	r1, #105	; 0x69
1a0046e0:	d1f6      	bne.n	1a0046d0 <_printf_i+0x30>
1a0046e2:	6820      	ldr	r0, [r4, #0]
1a0046e4:	6813      	ldr	r3, [r2, #0]
1a0046e6:	0605      	lsls	r5, r0, #24
1a0046e8:	f103 0104 	add.w	r1, r3, #4
1a0046ec:	d52a      	bpl.n	1a004744 <_printf_i+0xa4>
1a0046ee:	681b      	ldr	r3, [r3, #0]
1a0046f0:	6011      	str	r1, [r2, #0]
1a0046f2:	2b00      	cmp	r3, #0
1a0046f4:	da03      	bge.n	1a0046fe <_printf_i+0x5e>
1a0046f6:	222d      	movs	r2, #45	; 0x2d
1a0046f8:	425b      	negs	r3, r3
1a0046fa:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
1a0046fe:	486f      	ldr	r0, [pc, #444]	; (1a0048bc <_printf_i+0x21c>)
1a004700:	220a      	movs	r2, #10
1a004702:	e039      	b.n	1a004778 <_printf_i+0xd8>
1a004704:	2973      	cmp	r1, #115	; 0x73
1a004706:	f000 809d 	beq.w	1a004844 <_printf_i+0x1a4>
1a00470a:	d808      	bhi.n	1a00471e <_printf_i+0x7e>
1a00470c:	296f      	cmp	r1, #111	; 0x6f
1a00470e:	d020      	beq.n	1a004752 <_printf_i+0xb2>
1a004710:	2970      	cmp	r1, #112	; 0x70
1a004712:	d1dd      	bne.n	1a0046d0 <_printf_i+0x30>
1a004714:	6823      	ldr	r3, [r4, #0]
1a004716:	f043 0320 	orr.w	r3, r3, #32
1a00471a:	6023      	str	r3, [r4, #0]
1a00471c:	e003      	b.n	1a004726 <_printf_i+0x86>
1a00471e:	2975      	cmp	r1, #117	; 0x75
1a004720:	d017      	beq.n	1a004752 <_printf_i+0xb2>
1a004722:	2978      	cmp	r1, #120	; 0x78
1a004724:	d1d4      	bne.n	1a0046d0 <_printf_i+0x30>
1a004726:	2378      	movs	r3, #120	; 0x78
1a004728:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
1a00472c:	4864      	ldr	r0, [pc, #400]	; (1a0048c0 <_printf_i+0x220>)
1a00472e:	e055      	b.n	1a0047dc <_printf_i+0x13c>
1a004730:	6813      	ldr	r3, [r2, #0]
1a004732:	1d19      	adds	r1, r3, #4
1a004734:	681b      	ldr	r3, [r3, #0]
1a004736:	6011      	str	r1, [r2, #0]
1a004738:	f104 0542 	add.w	r5, r4, #66	; 0x42
1a00473c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
1a004740:	2301      	movs	r3, #1
1a004742:	e08c      	b.n	1a00485e <_printf_i+0x1be>
1a004744:	681b      	ldr	r3, [r3, #0]
1a004746:	6011      	str	r1, [r2, #0]
1a004748:	f010 0f40 	tst.w	r0, #64	; 0x40
1a00474c:	bf18      	it	ne
1a00474e:	b21b      	sxthne	r3, r3
1a004750:	e7cf      	b.n	1a0046f2 <_printf_i+0x52>
1a004752:	6813      	ldr	r3, [r2, #0]
1a004754:	6825      	ldr	r5, [r4, #0]
1a004756:	1d18      	adds	r0, r3, #4
1a004758:	6010      	str	r0, [r2, #0]
1a00475a:	0628      	lsls	r0, r5, #24
1a00475c:	d501      	bpl.n	1a004762 <_printf_i+0xc2>
1a00475e:	681b      	ldr	r3, [r3, #0]
1a004760:	e002      	b.n	1a004768 <_printf_i+0xc8>
1a004762:	0668      	lsls	r0, r5, #25
1a004764:	d5fb      	bpl.n	1a00475e <_printf_i+0xbe>
1a004766:	881b      	ldrh	r3, [r3, #0]
1a004768:	4854      	ldr	r0, [pc, #336]	; (1a0048bc <_printf_i+0x21c>)
1a00476a:	296f      	cmp	r1, #111	; 0x6f
1a00476c:	bf14      	ite	ne
1a00476e:	220a      	movne	r2, #10
1a004770:	2208      	moveq	r2, #8
1a004772:	2100      	movs	r1, #0
1a004774:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
1a004778:	6865      	ldr	r5, [r4, #4]
1a00477a:	60a5      	str	r5, [r4, #8]
1a00477c:	2d00      	cmp	r5, #0
1a00477e:	f2c0 8095 	blt.w	1a0048ac <_printf_i+0x20c>
1a004782:	6821      	ldr	r1, [r4, #0]
1a004784:	f021 0104 	bic.w	r1, r1, #4
1a004788:	6021      	str	r1, [r4, #0]
1a00478a:	2b00      	cmp	r3, #0
1a00478c:	d13d      	bne.n	1a00480a <_printf_i+0x16a>
1a00478e:	2d00      	cmp	r5, #0
1a004790:	f040 808e 	bne.w	1a0048b0 <_printf_i+0x210>
1a004794:	4665      	mov	r5, ip
1a004796:	2a08      	cmp	r2, #8
1a004798:	d10b      	bne.n	1a0047b2 <_printf_i+0x112>
1a00479a:	6823      	ldr	r3, [r4, #0]
1a00479c:	07db      	lsls	r3, r3, #31
1a00479e:	d508      	bpl.n	1a0047b2 <_printf_i+0x112>
1a0047a0:	6923      	ldr	r3, [r4, #16]
1a0047a2:	6862      	ldr	r2, [r4, #4]
1a0047a4:	429a      	cmp	r2, r3
1a0047a6:	bfde      	ittt	le
1a0047a8:	2330      	movle	r3, #48	; 0x30
1a0047aa:	f805 3c01 	strble.w	r3, [r5, #-1]
1a0047ae:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
1a0047b2:	ebac 0305 	sub.w	r3, ip, r5
1a0047b6:	6123      	str	r3, [r4, #16]
1a0047b8:	f8cd 8000 	str.w	r8, [sp]
1a0047bc:	463b      	mov	r3, r7
1a0047be:	aa03      	add	r2, sp, #12
1a0047c0:	4621      	mov	r1, r4
1a0047c2:	4630      	mov	r0, r6
1a0047c4:	f7ff fef6 	bl	1a0045b4 <_printf_common>
1a0047c8:	3001      	adds	r0, #1
1a0047ca:	d14d      	bne.n	1a004868 <_printf_i+0x1c8>
1a0047cc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
1a0047d0:	b005      	add	sp, #20
1a0047d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1a0047d6:	4839      	ldr	r0, [pc, #228]	; (1a0048bc <_printf_i+0x21c>)
1a0047d8:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
1a0047dc:	6813      	ldr	r3, [r2, #0]
1a0047de:	6821      	ldr	r1, [r4, #0]
1a0047e0:	1d1d      	adds	r5, r3, #4
1a0047e2:	681b      	ldr	r3, [r3, #0]
1a0047e4:	6015      	str	r5, [r2, #0]
1a0047e6:	060a      	lsls	r2, r1, #24
1a0047e8:	d50b      	bpl.n	1a004802 <_printf_i+0x162>
1a0047ea:	07ca      	lsls	r2, r1, #31
1a0047ec:	bf44      	itt	mi
1a0047ee:	f041 0120 	orrmi.w	r1, r1, #32
1a0047f2:	6021      	strmi	r1, [r4, #0]
1a0047f4:	b91b      	cbnz	r3, 1a0047fe <_printf_i+0x15e>
1a0047f6:	6822      	ldr	r2, [r4, #0]
1a0047f8:	f022 0220 	bic.w	r2, r2, #32
1a0047fc:	6022      	str	r2, [r4, #0]
1a0047fe:	2210      	movs	r2, #16
1a004800:	e7b7      	b.n	1a004772 <_printf_i+0xd2>
1a004802:	064d      	lsls	r5, r1, #25
1a004804:	bf48      	it	mi
1a004806:	b29b      	uxthmi	r3, r3
1a004808:	e7ef      	b.n	1a0047ea <_printf_i+0x14a>
1a00480a:	4665      	mov	r5, ip
1a00480c:	fbb3 f1f2 	udiv	r1, r3, r2
1a004810:	fb02 3311 	mls	r3, r2, r1, r3
1a004814:	5cc3      	ldrb	r3, [r0, r3]
1a004816:	f805 3d01 	strb.w	r3, [r5, #-1]!
1a00481a:	460b      	mov	r3, r1
1a00481c:	2900      	cmp	r1, #0
1a00481e:	d1f5      	bne.n	1a00480c <_printf_i+0x16c>
1a004820:	e7b9      	b.n	1a004796 <_printf_i+0xf6>
1a004822:	6813      	ldr	r3, [r2, #0]
1a004824:	6825      	ldr	r5, [r4, #0]
1a004826:	6961      	ldr	r1, [r4, #20]
1a004828:	1d18      	adds	r0, r3, #4
1a00482a:	6010      	str	r0, [r2, #0]
1a00482c:	0628      	lsls	r0, r5, #24
1a00482e:	681b      	ldr	r3, [r3, #0]
1a004830:	d501      	bpl.n	1a004836 <_printf_i+0x196>
1a004832:	6019      	str	r1, [r3, #0]
1a004834:	e002      	b.n	1a00483c <_printf_i+0x19c>
1a004836:	066a      	lsls	r2, r5, #25
1a004838:	d5fb      	bpl.n	1a004832 <_printf_i+0x192>
1a00483a:	8019      	strh	r1, [r3, #0]
1a00483c:	2300      	movs	r3, #0
1a00483e:	6123      	str	r3, [r4, #16]
1a004840:	4665      	mov	r5, ip
1a004842:	e7b9      	b.n	1a0047b8 <_printf_i+0x118>
1a004844:	6813      	ldr	r3, [r2, #0]
1a004846:	1d19      	adds	r1, r3, #4
1a004848:	6011      	str	r1, [r2, #0]
1a00484a:	681d      	ldr	r5, [r3, #0]
1a00484c:	6862      	ldr	r2, [r4, #4]
1a00484e:	2100      	movs	r1, #0
1a004850:	4628      	mov	r0, r5
1a004852:	f000 f83d 	bl	1a0048d0 <memchr>
1a004856:	b108      	cbz	r0, 1a00485c <_printf_i+0x1bc>
1a004858:	1b40      	subs	r0, r0, r5
1a00485a:	6060      	str	r0, [r4, #4]
1a00485c:	6863      	ldr	r3, [r4, #4]
1a00485e:	6123      	str	r3, [r4, #16]
1a004860:	2300      	movs	r3, #0
1a004862:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
1a004866:	e7a7      	b.n	1a0047b8 <_printf_i+0x118>
1a004868:	6923      	ldr	r3, [r4, #16]
1a00486a:	462a      	mov	r2, r5
1a00486c:	4639      	mov	r1, r7
1a00486e:	4630      	mov	r0, r6
1a004870:	47c0      	blx	r8
1a004872:	3001      	adds	r0, #1
1a004874:	d0aa      	beq.n	1a0047cc <_printf_i+0x12c>
1a004876:	6823      	ldr	r3, [r4, #0]
1a004878:	079b      	lsls	r3, r3, #30
1a00487a:	d413      	bmi.n	1a0048a4 <_printf_i+0x204>
1a00487c:	68e0      	ldr	r0, [r4, #12]
1a00487e:	9b03      	ldr	r3, [sp, #12]
1a004880:	4298      	cmp	r0, r3
1a004882:	bfb8      	it	lt
1a004884:	4618      	movlt	r0, r3
1a004886:	e7a3      	b.n	1a0047d0 <_printf_i+0x130>
1a004888:	2301      	movs	r3, #1
1a00488a:	464a      	mov	r2, r9
1a00488c:	4639      	mov	r1, r7
1a00488e:	4630      	mov	r0, r6
1a004890:	47c0      	blx	r8
1a004892:	3001      	adds	r0, #1
1a004894:	d09a      	beq.n	1a0047cc <_printf_i+0x12c>
1a004896:	3501      	adds	r5, #1
1a004898:	68e3      	ldr	r3, [r4, #12]
1a00489a:	9a03      	ldr	r2, [sp, #12]
1a00489c:	1a9b      	subs	r3, r3, r2
1a00489e:	42ab      	cmp	r3, r5
1a0048a0:	dcf2      	bgt.n	1a004888 <_printf_i+0x1e8>
1a0048a2:	e7eb      	b.n	1a00487c <_printf_i+0x1dc>
1a0048a4:	2500      	movs	r5, #0
1a0048a6:	f104 0919 	add.w	r9, r4, #25
1a0048aa:	e7f5      	b.n	1a004898 <_printf_i+0x1f8>
1a0048ac:	2b00      	cmp	r3, #0
1a0048ae:	d1ac      	bne.n	1a00480a <_printf_i+0x16a>
1a0048b0:	7803      	ldrb	r3, [r0, #0]
1a0048b2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
1a0048b6:	f104 0542 	add.w	r5, r4, #66	; 0x42
1a0048ba:	e76c      	b.n	1a004796 <_printf_i+0xf6>
1a0048bc:	1a004e61 	.word	0x1a004e61
1a0048c0:	1a004e72 	.word	0x1a004e72
1a0048c4:	ffffffff 	.word	0xffffffff
1a0048c8:	ffffffff 	.word	0xffffffff
1a0048cc:	ffffffff 	.word	0xffffffff

1a0048d0 <memchr>:
1a0048d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
1a0048d4:	2a10      	cmp	r2, #16
1a0048d6:	db2b      	blt.n	1a004930 <memchr+0x60>
1a0048d8:	f010 0f07 	tst.w	r0, #7
1a0048dc:	d008      	beq.n	1a0048f0 <memchr+0x20>
1a0048de:	f810 3b01 	ldrb.w	r3, [r0], #1
1a0048e2:	3a01      	subs	r2, #1
1a0048e4:	428b      	cmp	r3, r1
1a0048e6:	d02d      	beq.n	1a004944 <memchr+0x74>
1a0048e8:	f010 0f07 	tst.w	r0, #7
1a0048ec:	b342      	cbz	r2, 1a004940 <memchr+0x70>
1a0048ee:	d1f6      	bne.n	1a0048de <memchr+0xe>
1a0048f0:	b4f0      	push	{r4, r5, r6, r7}
1a0048f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
1a0048f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
1a0048fa:	f022 0407 	bic.w	r4, r2, #7
1a0048fe:	f07f 0700 	mvns.w	r7, #0
1a004902:	2300      	movs	r3, #0
1a004904:	e8f0 5602 	ldrd	r5, r6, [r0], #8
1a004908:	3c08      	subs	r4, #8
1a00490a:	ea85 0501 	eor.w	r5, r5, r1
1a00490e:	ea86 0601 	eor.w	r6, r6, r1
1a004912:	fa85 f547 	uadd8	r5, r5, r7
1a004916:	faa3 f587 	sel	r5, r3, r7
1a00491a:	fa86 f647 	uadd8	r6, r6, r7
1a00491e:	faa5 f687 	sel	r6, r5, r7
1a004922:	b98e      	cbnz	r6, 1a004948 <memchr+0x78>
1a004924:	d1ee      	bne.n	1a004904 <memchr+0x34>
1a004926:	bcf0      	pop	{r4, r5, r6, r7}
1a004928:	f001 01ff 	and.w	r1, r1, #255	; 0xff
1a00492c:	f002 0207 	and.w	r2, r2, #7
1a004930:	b132      	cbz	r2, 1a004940 <memchr+0x70>
1a004932:	f810 3b01 	ldrb.w	r3, [r0], #1
1a004936:	3a01      	subs	r2, #1
1a004938:	ea83 0301 	eor.w	r3, r3, r1
1a00493c:	b113      	cbz	r3, 1a004944 <memchr+0x74>
1a00493e:	d1f8      	bne.n	1a004932 <memchr+0x62>
1a004940:	2000      	movs	r0, #0
1a004942:	4770      	bx	lr
1a004944:	3801      	subs	r0, #1
1a004946:	4770      	bx	lr
1a004948:	2d00      	cmp	r5, #0
1a00494a:	bf06      	itte	eq
1a00494c:	4635      	moveq	r5, r6
1a00494e:	3803      	subeq	r0, #3
1a004950:	3807      	subne	r0, #7
1a004952:	f015 0f01 	tst.w	r5, #1
1a004956:	d107      	bne.n	1a004968 <memchr+0x98>
1a004958:	3001      	adds	r0, #1
1a00495a:	f415 7f80 	tst.w	r5, #256	; 0x100
1a00495e:	bf02      	ittt	eq
1a004960:	3001      	addeq	r0, #1
1a004962:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
1a004966:	3001      	addeq	r0, #1
1a004968:	bcf0      	pop	{r4, r5, r6, r7}
1a00496a:	3801      	subs	r0, #1
1a00496c:	4770      	bx	lr
1a00496e:	bf00      	nop

1a004970 <memmove>:
1a004970:	4288      	cmp	r0, r1
1a004972:	b510      	push	{r4, lr}
1a004974:	eb01 0302 	add.w	r3, r1, r2
1a004978:	d807      	bhi.n	1a00498a <memmove+0x1a>
1a00497a:	1e42      	subs	r2, r0, #1
1a00497c:	4299      	cmp	r1, r3
1a00497e:	d00a      	beq.n	1a004996 <memmove+0x26>
1a004980:	f811 4b01 	ldrb.w	r4, [r1], #1
1a004984:	f802 4f01 	strb.w	r4, [r2, #1]!
1a004988:	e7f8      	b.n	1a00497c <memmove+0xc>
1a00498a:	4283      	cmp	r3, r0
1a00498c:	d9f5      	bls.n	1a00497a <memmove+0xa>
1a00498e:	1881      	adds	r1, r0, r2
1a004990:	1ad2      	subs	r2, r2, r3
1a004992:	42d3      	cmn	r3, r2
1a004994:	d100      	bne.n	1a004998 <memmove+0x28>
1a004996:	bd10      	pop	{r4, pc}
1a004998:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
1a00499c:	f801 4d01 	strb.w	r4, [r1, #-1]!
1a0049a0:	e7f7      	b.n	1a004992 <memmove+0x22>

1a0049a2 <__malloc_lock>:
1a0049a2:	4770      	bx	lr

1a0049a4 <__malloc_unlock>:
1a0049a4:	4770      	bx	lr

1a0049a6 <_realloc_r>:
1a0049a6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a0049a8:	4607      	mov	r7, r0
1a0049aa:	4614      	mov	r4, r2
1a0049ac:	460e      	mov	r6, r1
1a0049ae:	b921      	cbnz	r1, 1a0049ba <_realloc_r+0x14>
1a0049b0:	4611      	mov	r1, r2
1a0049b2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
1a0049b6:	f7ff bc51 	b.w	1a00425c <_malloc_r>
1a0049ba:	b922      	cbnz	r2, 1a0049c6 <_realloc_r+0x20>
1a0049bc:	f7ff fc00 	bl	1a0041c0 <_free_r>
1a0049c0:	4625      	mov	r5, r4
1a0049c2:	4628      	mov	r0, r5
1a0049c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a0049c6:	f000 f814 	bl	1a0049f2 <_malloc_usable_size_r>
1a0049ca:	42a0      	cmp	r0, r4
1a0049cc:	d20f      	bcs.n	1a0049ee <_realloc_r+0x48>
1a0049ce:	4621      	mov	r1, r4
1a0049d0:	4638      	mov	r0, r7
1a0049d2:	f7ff fc43 	bl	1a00425c <_malloc_r>
1a0049d6:	4605      	mov	r5, r0
1a0049d8:	2800      	cmp	r0, #0
1a0049da:	d0f2      	beq.n	1a0049c2 <_realloc_r+0x1c>
1a0049dc:	4631      	mov	r1, r6
1a0049de:	4622      	mov	r2, r4
1a0049e0:	f7ff fb9c 	bl	1a00411c <memcpy>
1a0049e4:	4631      	mov	r1, r6
1a0049e6:	4638      	mov	r0, r7
1a0049e8:	f7ff fbea 	bl	1a0041c0 <_free_r>
1a0049ec:	e7e9      	b.n	1a0049c2 <_realloc_r+0x1c>
1a0049ee:	4635      	mov	r5, r6
1a0049f0:	e7e7      	b.n	1a0049c2 <_realloc_r+0x1c>

1a0049f2 <_malloc_usable_size_r>:
1a0049f2:	f851 3c04 	ldr.w	r3, [r1, #-4]
1a0049f6:	1f18      	subs	r0, r3, #4
1a0049f8:	2b00      	cmp	r3, #0
1a0049fa:	bfbc      	itt	lt
1a0049fc:	580b      	ldrlt	r3, [r1, r0]
1a0049fe:	18c0      	addlt	r0, r0, r3
1a004a00:	4770      	bx	lr
1a004a02:	ffff 3025 	vaddl.u<illegal width 64>	<illegal reg q9.5>, d15, d21
1a004a06:	6432      	.short	0x6432
1a004a08:	007d7325 	.word	0x007d7325
1a004a0c:	6b736154 	.word	0x6b736154
1a004a10:	61557854 	.word	0x61557854
1a004a14:	00007472 	.word	0x00007472
1a004a18:	6b736154 	.word	0x6b736154
1a004a1c:	76726553 	.word	0x76726553
1a004a20:	00656369 	.word	0x00656369
1a004a24:	6b736154 	.word	0x6b736154
1a004a28:	4d6f545f 	.word	0x4d6f545f
1a004a2c:	73757961 	.word	0x73757961
1a004a30:	616c7563 	.word	0x616c7563
1a004a34:	504f5f73 	.word	0x504f5f73
1a004a38:	00000030 	.word	0x00000030
1a004a3c:	6b736154 	.word	0x6b736154
1a004a40:	4d6f545f 	.word	0x4d6f545f
1a004a44:	73756e69 	.word	0x73756e69
1a004a48:	616c7563 	.word	0x616c7563
1a004a4c:	504f5f73 	.word	0x504f5f73
1a004a50:	00000031 	.word	0x00000031
1a004a54:	6b736154 	.word	0x6b736154
1a004a58:	4d6f545f 	.word	0x4d6f545f
1a004a5c:	73757961 	.word	0x73757961
1a004a60:	616c7563 	.word	0x616c7563
1a004a64:	504f5f73 	.word	0x504f5f73
1a004a68:	00000032 	.word	0x00000032
1a004a6c:	6b736154 	.word	0x6b736154
1a004a70:	4d6f545f 	.word	0x4d6f545f
1a004a74:	73756e69 	.word	0x73756e69
1a004a78:	616c7563 	.word	0x616c7563
1a004a7c:	504f5f73 	.word	0x504f5f73
1a004a80:	ffff0033 	.word	0xffff0033
1a004a84:	7778797a 	.word	0x7778797a
1a004a88:	73747576 	.word	0x73747576
1a004a8c:	6f707172 	.word	0x6f707172
1a004a90:	6b6c6d6e 	.word	0x6b6c6d6e
1a004a94:	6768696a 	.word	0x6768696a
1a004a98:	63646566 	.word	0x63646566
1a004a9c:	38396162 	.word	0x38396162
1a004aa0:	34353637 	.word	0x34353637
1a004aa4:	30313233 	.word	0x30313233
1a004aa8:	34333231 	.word	0x34333231
1a004aac:	38373635 	.word	0x38373635
1a004ab0:	63626139 	.word	0x63626139
1a004ab4:	67666564 	.word	0x67666564
1a004ab8:	6b6a6968 	.word	0x6b6a6968
1a004abc:	6f6e6d6c 	.word	0x6f6e6d6c
1a004ac0:	73727170 	.word	0x73727170
1a004ac4:	77767574 	.word	0x77767574
1a004ac8:	007a7978 	.word	0x007a7978
1a004acc:	454c4449 	.word	0x454c4449
1a004ad0:	ffffff00 	.word	0xffffff00
1a004ad4:	51726d54 	.word	0x51726d54
1a004ad8:	ffffff00 	.word	0xffffff00
1a004adc:	20726d54 	.word	0x20726d54
1a004ae0:	00637653 	.word	0x00637653

1a004ae4 <ExtRateIn>:
1a004ae4:	00000000                                ....

1a004ae8 <GpioButtons>:
1a004ae8:	08000400 09010900                       ........

1a004af0 <GpioLeds>:
1a004af0:	01050005 0e000205 0c010b01              ............

1a004afc <GpioPorts>:
1a004afc:	03030003 0f050403 05031005 07030603     ................
1a004b0c:	ffff0802                                ....

1a004b10 <OscRateIn>:
1a004b10:	00b71b00                                ....

1a004b14 <InitClkStates>:
1a004b14:	01010f01                                ....

1a004b18 <pinmuxing>:
1a004b18:	00440002 00440102 00440202 00400a02     ..D...D...D...@.
1a004b28:	00400b02 00400c02 00500001 00500101     ..@...@...P...P.
1a004b38:	00500201 00500601 00500106 00500406     ..P...P...P...P.
1a004b48:	00500506 00540706 00540806 00500906     ..P...T...T...P.
1a004b58:	00500a06 00500b06 00500c06 00f0040f     ..P...P...P.....
1a004b68:	00d50301 00d50401 00160107 00560207     ..............V.
1a004b78:	00520302 00520402 00520509 00570609     ..R...R...R...W.
1a004b88:	00570206                                ..W.

1a004b8c <UART_BClock>:
1a004b8c:	01a201c2 01620182                       ......b.

1a004b94 <UART_PClock>:
1a004b94:	00820081 00a200a1 08040201 0f0f0f03     ................
1a004ba4:	ffff00ff                                ....

1a004ba8 <periph_to_base>:
1a004ba8:	00050000 0020000a 00090024 00400040     ...... .$...@.@.
1a004bb8:	00600005 000400a6 00c300c0 00e00002     ..`.............
1a004bc8:	000100e0 01000100 01200003 00060120     .......... . ...
1a004bd8:	01400140 0142000c 00190142 01620162     @.@...B.B...b.b.
1a004be8:	01820013 00120182 01a201a2 01c20011     ................
1a004bf8:	001001c2 01e201e2 0202000f 000e0202     ................
1a004c08:	02220222 0223000d 001c0223              "."...#.#...

1a004c14 <InitClkStates>:
1a004c14:	00010100 00010909 0001090a 01010701     ................
1a004c24:	00010902 00010906 0101090c 0001090d     ................
1a004c34:	0001090e 0001090f 00010910 00010911     ................
1a004c44:	00010912 00010913 00011114 00011119     ................
1a004c54:	0001111a 0001111b                       ........

1a004c5c <lpcUarts>:
1a004c5c:	40081000 06020406 00180205 40081000     ...@...........@
1a004c6c:	09070509 00180706 40082000 00000000     ......... .@....
1a004c7c:	00190000 400c1000 07060107 001a0602     .......@........
1a004c8c:	400c1000 01010f01 001a0110 400c2000     ...@......... .@
1a004c9c:	02020302 001b0204 636b6974 69547265     ........tikcerTi
1a004cac:	0072656d                                mer.

1a004cb0 <gpioPinsInit>:
1a004cb0:	00000001 04020204 01040205 07010200     ................
1a004cc0:	0d030005 01000501 00020408 03040202     ................
1a004cd0:	04030200 00020000 03000407 0402030c     ................
1a004ce0:	01030905 02080504 03050403 05040402     ................
1a004cf0:	000c0604 0b060802 06070300 05030009     ................
1a004d00:	05040706 0004060f 04040303 04040200     ................
1a004d10:	05020005 02000604 04080406 0a040c05     ................
1a004d20:	010e0504 0a000003 00001401 0012010f     ................
1a004d30:	11010d00 010c0000 03000010 03000707     ................
1a004d40:	0001000f 00000100 06000000 0603000a     ................
1a004d50:	05040806 00050610 01060403 04000300     ................
1a004d60:	0d050409 00000401 000f010b 00010200     ................
1a004d70:	01040000 08000001 00000201 00060109     ................
1a004d80:	00020901 02000504 01050401 05040202     ................
1a004d90:	000a0202 0b020e00 020b0100 0c01000c     ................
1a004da0:	02000004 00010400 02040102 04020200     ................
1a004db0:	03020003 03000307 0004070b 05070c03     ................
1a004dc0:	070d0300 0e030006 05040102 00060401     ................
1a004dd0:	05040602 04050200 04020004 05040804     ................
1a004de0:	0409040c 0a040d05 010e0504 08010005     ................

1a004df0 <__sf_fake_stderr>:
	...

1a004e10 <__sf_fake_stdin>:
	...

1a004e30 <__sf_fake_stdout>:
	...
1a004e50:	2b302d23 6c680020 6665004c 47464567     #-0+ .hlL.efgEFG
1a004e60:	32313000 36353433 41393837 45444342     .0123456789ABCDE
1a004e70:	31300046 35343332 39383736 64636261     F.0123456789abcd
1a004e80:	ff006665                                ef..
